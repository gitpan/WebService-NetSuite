package WebService::NetSuite::Config;

use strict;

sub SearchTypes {

    return {
    
        ShipAddress => {
        },
    
        BillAddress => {
        },
    
        PresentationItem => {
        },
    
        Partners => {
        },
    
        LandedCost => {
        },
    
        CustomerSalesTeam => {
        },
    
        TimeItem => {
        },
    
        InventoryDetail => {
            'inventoryAssignmentList' => 'InventoryAssignmentList',
            'customForm' => 'RecordRef',
        },
    
        InventoryAssignmentList => {
        },
    
        InventoryAssignment => {
        },
    
        InventoryDetailSearchBasic => {
            'binNumber' => 'SearchMultiSelectField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'inventoryNumber' => 'SearchMultiSelectField',
            'quantity' => 'SearchDoubleField',
        },
    
        InventoryDetailSearchRowBasic => {
        },
    
        EntitySearchBasic => {
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'attention' => 'SearchStringField',
            'city' => 'SearchStringField',
            'comments' => 'SearchStringField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'dateCreated' => 'SearchDateField',
            'email' => 'SearchStringField',
            'entityId' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'image' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'language' => 'SearchEnumMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'level' => 'SearchEnumMultiSelectField',
            'permission' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'state' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'type' => 'SearchEnumMultiSelectField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        EntitySearchRowBasic => {
        },
    
        ContactSearchBasic => {
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'attention' => 'SearchStringField',
            'availableOffline' => 'SearchBooleanField',
            'category' => 'SearchMultiSelectField',
            'city' => 'SearchStringField',
            'comments' => 'SearchStringField',
            'company' => 'SearchMultiSelectField',
            'contactRole' => 'SearchMultiSelectField',
            'contactSource' => 'SearchMultiSelectField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'dateCreated' => 'SearchDateField',
            'email' => 'SearchStringField',
            'employer' => 'SearchStringField',
            'entityId' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'firstName' => 'SearchStringField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'group' => 'SearchMultiSelectField',
            'hasDuplicates' => 'SearchBooleanField',
            'image' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isPrivate' => 'SearchBooleanField',
            'language' => 'SearchEnumMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'lastName' => 'SearchStringField',
            'level' => 'SearchEnumMultiSelectField',
            'middleName' => 'SearchStringField',
            'owner' => 'SearchMultiSelectField',
            'permission' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'salutation' => 'SearchStringField',
            'state' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'type' => 'SearchEnumMultiSelectField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ContactSearchRowBasic => {
        },
    
        CustomerSearchBasic => {
            'accountNumber' => 'SearchStringField',
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'attention' => 'SearchStringField',
            'availableOffline' => 'SearchBooleanField',
            'balance' => 'SearchDoubleField',
            'billAddress' => 'SearchStringField',
            'boughtAmount' => 'SearchDoubleField',
            'boughtDate' => 'SearchDateField',
            'buyingReason' => 'SearchMultiSelectField',
            'buyingTimeFrame' => 'SearchMultiSelectField',
            'category' => 'SearchMultiSelectField',
            'ccCustomerCode' => 'SearchStringField',
            'ccDefault' => 'SearchBooleanField',
            'ccExpDate' => 'SearchDateField',
            'ccHolderName' => 'SearchStringField',
            'ccNumber' => 'SearchStringField',
            'ccType' => 'SearchMultiSelectField',
            'city' => 'SearchStringField',
            'classBought' => 'SearchMultiSelectField',
            'comments' => 'SearchStringField',
            'companyName' => 'SearchStringField',
            'consolBalance' => 'SearchDoubleField',
            'consolDaysOverdue' => 'SearchLongField',
            'consolDepositBalance' => 'SearchDoubleField',
            'consolOverdueBalance' => 'SearchDoubleField',
            'consolUnbilledOrders' => 'SearchDoubleField',
            'contact' => 'SearchStringField',
            'contribution' => 'SearchLongField',
            'conversionDate' => 'SearchDateField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'creditHold' => 'SearchEnumMultiSelectField',
            'creditHoldOverride' => 'SearchBooleanField',
            'creditLimit' => 'SearchDoubleField',
            'currency' => 'SearchMultiSelectField',
            'custStage' => 'SearchMultiSelectField',
            'custStatus' => 'SearchMultiSelectField',
            'dateClosed' => 'SearchDateField',
            'dateCreated' => 'SearchDateField',
            'daysOverdue' => 'SearchLongField',
            'depositBalance' => 'SearchDoubleField',
            'deptBought' => 'SearchMultiSelectField',
            'drAccount' => 'SearchMultiSelectField',
            'email' => 'SearchStringField',
            'emailPreference' => 'SearchEnumMultiSelectField',
            'emailTransactions' => 'SearchBooleanField',
            'endDate' => 'SearchDateField',
            'entityId' => 'SearchStringField',
            'entityStatus' => 'SearchMultiSelectField',
            'estimatedBudget' => 'SearchDoubleField',
            'explicitConversion' => 'SearchBooleanField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'faxTransactions' => 'SearchBooleanField',
            'firstName' => 'SearchStringField',
            'firstOrderDate' => 'SearchDateField',
            'firstSaleDate' => 'SearchDateField',
            'fxAccount' => 'SearchMultiSelectField',
            'fxBalance' => 'SearchDoubleField',
            'fxConsolBalance' => 'SearchDoubleField',
            'fxConsolUnbilledOrders' => 'SearchDoubleField',
            'fxUnbilledOrders' => 'SearchDoubleField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'group' => 'SearchMultiSelectField',
            'groupPricingLevel' => 'SearchMultiSelectField',
            'hasDuplicates' => 'SearchBooleanField',
            'image' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isBudgetApproved' => 'SearchBooleanField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isPerson' => 'SearchBooleanField',
            'isReportedLead' => 'SearchBooleanField',
            'isShipAddress' => 'SearchBooleanField',
            'itemPricingLevel' => 'SearchMultiSelectField',
            'itemPricingUnitPrice' => 'SearchDoubleField',
            'itemsBought' => 'SearchMultiSelectField',
            'itemsOrdered' => 'SearchMultiSelectField',
            'language' => 'SearchEnumMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'lastName' => 'SearchStringField',
            'lastOrderDate' => 'SearchDateField',
            'lastSaleDate' => 'SearchDateField',
            'leadDate' => 'SearchDateField',
            'leadSource' => 'SearchMultiSelectField',
            'level' => 'SearchEnumMultiSelectField',
            'locationBought' => 'SearchMultiSelectField',
            'manualCreditHold' => 'SearchBooleanField',
            'merchantAccount' => 'SearchMultiSelectField',
            'middleName' => 'SearchStringField',
            'monthlyClosing' => 'SearchEnumMultiSelectField',
            'onCreditHold' => 'SearchBooleanField',
            'orderedAmount' => 'SearchDoubleField',
            'orderedDate' => 'SearchDateField',
            'otherRelationships' => 'SearchEnumMultiSelectField',
            'overdueBalance' => 'SearchDoubleField',
            'parent' => 'SearchMultiSelectField',
            'parentItemsBought' => 'SearchMultiSelectField',
            'parentItemsOrdered' => 'SearchMultiSelectField',
            'partner' => 'SearchMultiSelectField',
            'partnerContribution' => 'SearchLongField',
            'partnerRole' => 'SearchMultiSelectField',
            'partnerTeamMember' => 'SearchMultiSelectField',
            'pec' => 'SearchStringField',
            'permission' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'priceLevel' => 'SearchMultiSelectField',
            'pricingGroup' => 'SearchMultiSelectField',
            'pricingItem' => 'SearchMultiSelectField',
            'printTransactions' => 'SearchBooleanField',
            'prospectDate' => 'SearchDateField',
            'pstExempt' => 'SearchBooleanField',
            'receivablesAccount' => 'SearchMultiSelectField',
            'reminderDate' => 'SearchDateField',
            'resaleNumber' => 'SearchStringField',
            'role' => 'SearchMultiSelectField',
            'salesReadiness' => 'SearchMultiSelectField',
            'salesRep' => 'SearchMultiSelectField',
            'salesTeamMember' => 'SearchMultiSelectField',
            'salesTeamRole' => 'SearchMultiSelectField',
            'salutation' => 'SearchStringField',
            'shipAddress' => 'SearchStringField',
            'shipComplete' => 'SearchBooleanField',
            'shippingItem' => 'SearchMultiSelectField',
            'stage' => 'SearchEnumMultiSelectField',
            'startDate' => 'SearchDateField',
            'state' => 'SearchStringField',
            'subsidBought' => 'SearchMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'taxable' => 'SearchBooleanField',
            'terms' => 'SearchMultiSelectField',
            'territory' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'unbilledOrders' => 'SearchDoubleField',
            'url' => 'SearchStringField',
            'vatRegNumber' => 'SearchStringField',
            'webLead' => 'SearchBooleanField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        CustomerSearchRowBasic => {
        },
    
        CalendarEventSearchBasic => {
            'attendee' => 'SearchMultiSelectField',
            'calendar' => 'SearchMultiSelectField',
            'completedDate' => 'SearchDateField',
            'createdDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'instanceStart' => 'SearchDateField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isUpcomingEvent' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'location' => 'SearchStringField',
            'message' => 'SearchStringField',
            'organizer' => 'SearchMultiSelectField',
            'owner' => 'SearchMultiSelectField',
            'resource' => 'SearchMultiSelectField',
            'response' => 'SearchEnumMultiSelectField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchEnumMultiSelectField',
            'title' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        CalendarEventSearchRowBasic => {
        },
    
        TaskSearchBasic => {
            'actualTime' => 'SearchDoubleField',
            'assigned' => 'SearchMultiSelectField',
            'company' => 'SearchMultiSelectField',
            'completedDate' => 'SearchDateField',
            'contact' => 'SearchMultiSelectField',
            'createdDate' => 'SearchDateField',
            'endDate' => 'SearchDateField',
            'estimatedTime' => 'SearchDoubleField',
            'estimatedTimeOverride' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isJobSummaryTask' => 'SearchBooleanField',
            'isJobTask' => 'SearchBooleanField',
            'isPrivate' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'milestone' => 'SearchLongField',
            'owner' => 'SearchMultiSelectField',
            'percentComplete' => 'SearchLongField',
            'percentTimeComplete' => 'SearchLongField',
            'priority' => 'SearchEnumMultiSelectField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchEnumMultiSelectField',
            'timeRemaining' => 'SearchDoubleField',
            'title' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        TaskSearchRowBasic => {
        },
    
        OpportunitySearchBasic => {
            'amount' => 'SearchDoubleField',
            'availableOffline' => 'SearchBooleanField',
            'buyingReason' => 'SearchMultiSelectField',
            'buyingTimeFrame' => 'SearchMultiSelectField',
            'class' => 'SearchMultiSelectField',
            'closeDate' => 'SearchDateField',
            'competitor' => 'SearchMultiSelectField',
            'contribution' => 'SearchLongField',
            'currency' => 'SearchMultiSelectField',
            'custType' => 'SearchMultiSelectField',
            'dateCreated' => 'SearchDateField',
            'daysOpen' => 'SearchLongField',
            'daysToClose' => 'SearchLongField',
            'department' => 'SearchMultiSelectField',
            'entity' => 'SearchMultiSelectField',
            'entityStatus' => 'SearchMultiSelectField',
            'estimatedBudget' => 'SearchDoubleField',
            'expectedCloseDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'forecastType' => 'SearchEnumMultiSelectField',
            'foreignProjectedAmount' => 'SearchDoubleField',
            'foreignRangeHigh' => 'SearchDoubleField',
            'foreignRangeLow' => 'SearchDoubleField',
            'fxTranCostEstimate' => 'SearchDoubleField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isBudgetApproved' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'leadSource' => 'SearchMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'number' => 'SearchLongField',
            'partner' => 'SearchMultiSelectField',
            'partnerContribution' => 'SearchLongField',
            'partnerRole' => 'SearchMultiSelectField',
            'partnerTeamMember' => 'SearchMultiSelectField',
            'postingPeriod' => 'RecordRef',
            'postingPeriodRelative' => 'PostingPeriodDate',
            'probability' => 'SearchLongField',
            'projAltSalesAmt' => 'SearchDoubleField',
            'projectedTotal' => 'SearchDoubleField',
            'rangeHigh' => 'SearchDoubleField',
            'rangeHighAlt' => 'SearchDoubleField',
            'rangeLow' => 'SearchDoubleField',
            'rangeLowAlt' => 'SearchDoubleField',
            'salesReadiness' => 'SearchMultiSelectField',
            'salesRep' => 'SearchMultiSelectField',
            'salesTeamMember' => 'SearchMultiSelectField',
            'salesTeamRole' => 'SearchMultiSelectField',
            'status' => 'SearchEnumMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'taxPeriod' => 'RecordRef',
            'taxPeriodRelative' => 'PostingPeriodDate',
            'title' => 'SearchStringField',
            'tranCostEstimate' => 'SearchDoubleField',
            'tranDate' => 'SearchDateField',
            'tranEstGrossProfit' => 'SearchDoubleField',
            'tranEstGrossProfitPct' => 'SearchDoubleField',
            'tranFxEstGrossProfit' => 'SearchDoubleField',
            'tranId' => 'SearchStringField',
            'winLossReason' => 'SearchMultiSelectField',
            'wonBy' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        OpportunitySearchRowBasic => {
        },
    
        EmployeeSearchBasic => {
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'alienNumber' => 'SearchStringField',
            'anniversary' => 'SearchDateField',
            'approvalLimit' => 'SearchDoubleField',
            'approver' => 'SearchMultiSelectField',
            'attention' => 'SearchStringField',
            'authWorkDate' => 'SearchDateField',
            'billAddress' => 'SearchStringField',
            'billingClass' => 'SearchMultiSelectField',
            'birthDate' => 'SearchDateField',
            'birthDay' => 'SearchDateField',
            'cContribution' => 'SearchMultiSelectField',
            'city' => 'SearchStringField',
            'class' => 'SearchMultiSelectField',
            'comments' => 'SearchStringField',
            'commissionPlan' => 'SearchMultiSelectField',
            'concurrentWebServicesUser' => 'SearchBooleanField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'dateCreated' => 'SearchDateField',
            'deduction' => 'SearchMultiSelectField',
            'department' => 'SearchMultiSelectField',
            'earning' => 'SearchMultiSelectField',
            'education' => 'SearchMultiSelectField',
            'eligibleForCommission' => 'SearchBooleanField',
            'email' => 'SearchStringField',
            'employeeStatus' => 'SearchMultiSelectField',
            'employeeType' => 'SearchMultiSelectField',
            'employeeTypeKpi' => 'SearchBooleanField',
            'entityId' => 'SearchStringField',
            'ethnicity' => 'SearchMultiSelectField',
            'expenseLimit' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'firstName' => 'SearchStringField',
            'gender' => 'SearchEnumMultiSelectField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'group' => 'SearchMultiSelectField',
            'hireDate' => 'SearchDateField',
            'I9Verified' => 'SearchBooleanField',
            'image' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isJobResource' => 'SearchBooleanField',
            'isTemplate' => 'SearchBooleanField',
            'jobDescription' => 'SearchStringField',
            'laborCost' => 'SearchDoubleField',
            'language' => 'SearchEnumMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'lastName' => 'SearchStringField',
            'lastPaidDate' => 'SearchDateField',
            'lastReviewDate' => 'SearchDateField',
            'level' => 'SearchEnumMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'maritalStatus' => 'SearchMultiSelectField',
            'middleName' => 'SearchStringField',
            'nextReviewDate' => 'SearchDateField',
            'offlineAccess' => 'SearchBooleanField',
            'payFrequency' => 'SearchEnumMultiSelectField',
            'permChangeDate' => 'SearchDateField',
            'permission' => 'SearchEnumMultiSelectField',
            'permissionChange' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'primaryEarningAmount' => 'SearchDoubleField',
            'primaryEarningItem' => 'SearchStringField',
            'primaryEarningType' => 'SearchStringField',
            'purchaseOrderApprovalLimit' => 'SearchDoubleField',
            'purchaseOrderApprover' => 'SearchMultiSelectField',
            'purchaseOrderLimit' => 'SearchDoubleField',
            'releaseDate' => 'SearchDateField',
            'residentStatus' => 'SearchMultiSelectField',
            'role' => 'SearchMultiSelectField',
            'roleChange' => 'SearchMultiSelectField',
            'roleChangeDate' => 'SearchDateField',
            'salesRep' => 'SearchBooleanField',
            'salesRole' => 'SearchMultiSelectField',
            'salutation' => 'SearchStringField',
            'socialSecurityNumber' => 'SearchStringField',
            'state' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'supervisor' => 'SearchMultiSelectField',
            'supportRep' => 'SearchBooleanField',
            'timeApprover' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'type' => 'SearchMultiSelectField',
            'usePerquest' => 'SearchBooleanField',
            'useTimeData' => 'SearchBooleanField',
            'visaExpDate' => 'SearchDateField',
            'visaType' => 'SearchMultiSelectField',
            'withholding' => 'SearchMultiSelectField',
            'workCalendar' => 'SearchMultiSelectField',
            'workplace' => 'SearchMultiSelectField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        EmployeeSearchRowBasic => {
        },
    
        PhoneCallSearchBasic => {
            'assigned' => 'SearchMultiSelectField',
            'company' => 'SearchMultiSelectField',
            'completedDate' => 'SearchDateField',
            'contact' => 'SearchMultiSelectField',
            'createdBy' => 'SearchMultiSelectField',
            'createdDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isPrivate' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'owner' => 'SearchBooleanField',
            'phone' => 'SearchStringField',
            'priority' => 'SearchEnumMultiSelectField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchEnumMultiSelectField',
            'title' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        PhoneCallSearchRowBasic => {
        },
    
        SupportCaseSearchBasic => {
            'assigned' => 'SearchMultiSelectField',
            'awaitingReply' => 'SearchBooleanField',
            'caseNumber' => 'SearchStringField',
            'category' => 'SearchMultiSelectField',
            'closedDate' => 'SearchDateField',
            'company' => 'SearchStringField',
            'contact' => 'SearchStringField',
            'createdDate' => 'SearchDateField',
            'email' => 'SearchStringField',
            'escalateTo' => 'SearchMultiSelectField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'helpDesk' => 'SearchBooleanField',
            'inboundEmail' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'issue' => 'SearchMultiSelectField',
            'item' => 'SearchMultiSelectField',
            'lastMessage' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'lastReopenedDate' => 'SearchDateField',
            'locked' => 'SearchBooleanField',
            'message' => 'SearchStringField',
            'messageAuthor' => 'SearchMultiSelectField',
            'messageDate' => 'SearchDateField',
            'messageType' => 'SearchBooleanField',
            'module' => 'SearchMultiSelectField',
            'number' => 'SearchLongField',
            'origin' => 'SearchMultiSelectField',
            'priority' => 'SearchMultiSelectField',
            'product' => 'SearchMultiSelectField',
            'serialNumber' => 'SearchStringField',
            'stage' => 'SearchEnumMultiSelectField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        SupportCaseSearchRowBasic => {
        },
    
        MessageSearchBasic => {
            'author' => 'SearchMultiSelectField',
            'authorEmail' => 'SearchStringField',
            'bcc' => 'SearchStringField',
            'cc' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'hasAttachment' => 'SearchBooleanField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'internalOnly' => 'SearchBooleanField',
            'message' => 'SearchStringField',
            'messageDate' => 'SearchDateField',
            'messageType' => 'SearchEnumMultiSelectField',
            'recipient' => 'SearchMultiSelectField',
            'recipientEmail' => 'SearchStringField',
            'subject' => 'SearchStringField',
        },
    
        MessageSearchRowBasic => {
        },
    
        NoteSearchBasic => {
            'author' => 'SearchMultiSelectField',
            'direction' => 'SearchBooleanField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'note' => 'SearchStringField',
            'noteDate' => 'SearchDateField',
            'noteType' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
        },
    
        NoteSearchRowBasic => {
        },
    
        CustomRecordSearchBasic => {
            'recType' => 'RecordRef',
            'availableOffline' => 'SearchBooleanField',
            'created' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'id' => 'SearchLongField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'lastModified' => 'SearchDateField',
            'lastModifiedBy' => 'SearchMultiSelectField',
            'name' => 'SearchStringField',
            'owner' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        CustomRecordSearchRowBasic => {
        },
    
        AccountSearchBasic => {
            'balance' => 'SearchDoubleField',
            'cashFlowRateType' => 'SearchEnumMultiSelectField',
            'category1099Misc' => 'SearchMultiSelectField',
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'generalRateType' => 'SearchEnumMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'number' => 'SearchStringField',
            'parent' => 'SearchMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'type' => 'SearchEnumMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        AccountSearchRowBasic => {
        },
    
        RevRecScheduleSearchBasic => {
            'amount' => 'SearchDoubleField',
            'defRev' => 'SearchMultiSelectField',
            'entity' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'incomeAcct' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'jeDoc' => 'SearchMultiSelectField',
            'name' => 'SearchMultiSelectField',
            'postPeriod' => 'SearchMultiSelectField',
            'srcDoc' => 'SearchMultiSelectField',
            'srcDocDate' => 'SearchDateField',
            'srcTranPostPeriod' => 'SearchMultiSelectField',
        },
    
        RevRecScheduleSearchRowBasic => {
        },
    
        RevRecTemplateSearchBasic => {
            'amorMethod' => 'SearchEnumMultiSelectField',
            'amorPeriod' => 'SearchLongField',
            'amorStartOffset' => 'SearchLongField',
            'amorTermSrc' => 'SearchEnumMultiSelectField',
            'amorType' => 'SearchEnumMultiSelectField',
            'contraAccount' => 'SearchMultiSelectField',
            'deferralAccount' => 'SearchMultiSelectField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'periodOffset' => 'SearchLongField',
            'targetAccount' => 'SearchMultiSelectField',
            'useForeignAmounts' => 'SearchBooleanField',
        },
    
        RevRecTemplateSearchRowBasic => {
        },
    
        BinSearchBasic => {
            'binNumber' => 'SearchStringField',
            'inactive' => 'SearchBooleanField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'location' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        BinSearchRowBasic => {
        },
    
        DepartmentSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'nameNoHierarchy' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        DepartmentSearchRowBasic => {
        },
    
        LocationSearchBasic => {
            'address' => 'SearchStringField',
            'city' => 'SearchStringField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isOffice' => 'SearchBooleanField',
            'makeInventoryAvailable' => 'SearchBooleanField',
            'makeInventoryAvailableStore' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'nameNoHierarchy' => 'SearchStringField',
            'phone' => 'SearchStringField',
            'state' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'tranprefix' => 'SearchStringField',
            'zip' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        LocationSearchRowBasic => {
        },
    
        ClassificationSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'nameNoHierarchy' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ClassificationSearchRowBasic => {
        },
    
        TransactionSearchBasic => {
            'account' => 'SearchMultiSelectField',
            'accountType' => 'SearchMultiSelectField',
            'actualShipDate' => 'SearchDateField',
            'altSalesAmount' => 'SearchDoubleField',
            'altSalesNetAmount' => 'SearchDoubleField',
            'amount' => 'SearchDoubleField',
            'amountPaid' => 'SearchDoubleField',
            'amountRemaining' => 'SearchDoubleField',
            'amountUnbilled' => 'SearchDoubleField',
            'anyLineItem' => 'SearchMultiSelectField',
            'appliedToForeignAmount' => 'SearchDoubleField',
            'appliedToIsFxVariance' => 'SearchBooleanField',
            'appliedToLinkAmount' => 'SearchDoubleField',
            'appliedToLinkType' => 'SearchEnumMultiSelectField',
            'appliedToTransaction' => 'SearchMultiSelectField',
            'applyingForeignAmount' => 'SearchDoubleField',
            'applyingIsFxVariance' => 'SearchBooleanField',
            'applyingLinkAmount' => 'SearchDoubleField',
            'applyingLinkType' => 'SearchEnumMultiSelectField',
            'applyingTransaction' => 'SearchMultiSelectField',
            'approvalStatus' => 'SearchEnumMultiSelectField',
            'authCode' => 'SearchStringField',
            'avsStreetMatch' => 'SearchEnumMultiSelectField',
            'avsZipMatch' => 'SearchEnumMultiSelectField',
            'billable' => 'SearchBooleanField',
            'billAddress' => 'SearchStringField',
            'billAddressee' => 'SearchStringField',
            'billAttention' => 'SearchStringField',
            'billCity' => 'SearchStringField',
            'billCountry' => 'SearchEnumMultiSelectField',
            'billCounty' => 'SearchStringField',
            'billedDate' => 'SearchDateField',
            'billingSchedule' => 'SearchMultiSelectField',
            'billingStatus' => 'SearchBooleanField',
            'billingTransaction' => 'SearchMultiSelectField',
            'billPhone' => 'SearchStringField',
            'billState' => 'SearchStringField',
            'billVarianceStatus' => 'SearchEnumMultiSelectField',
            'billZip' => 'SearchStringField',
            'binNumber' => 'SearchStringField',
            'binNumberQuantity' => 'SearchDoubleField',
            'buildEntireAssembly' => 'SearchBooleanField',
            'buildVariance' => 'SearchDoubleField',
            'built' => 'SearchDoubleField',
            'ccCustomerCode' => 'SearchStringField',
            'ccExpireDate' => 'SearchDateField',
            'ccName' => 'SearchStringField',
            'ccNumber' => 'SearchStringField',
            'class' => 'SearchMultiSelectField',
            'cleared' => 'SearchBooleanField',
            'closed' => 'SearchBooleanField',
            'closeDate' => 'SearchDateField',
            'cogs' => 'SearchBooleanField',
            'commissionEffectiveDate' => 'SearchDateField',
            'commit' => 'SearchEnumMultiSelectField',
            'confirmationNumber' => 'SearchStringField',
            'contribution' => 'SearchLongField',
            'costComponentAmount' => 'SearchDoubleField',
            'costComponentCategory' => 'SearchMultiSelectField',
            'costComponentItem' => 'SearchMultiSelectField',
            'costComponentQuantity' => 'SearchDoubleField',
            'costComponentStandardCost' => 'SearchDoubleField',
            'costEstimate' => 'SearchDoubleField',
            'costEstimateRate' => 'SearchDoubleField',
            'costEstimateType' => 'SearchEnumMultiSelectField',
            'createdBy' => 'SearchMultiSelectField',
            'createdFrom' => 'SearchMultiSelectField',
            'creditAmount' => 'SearchDoubleField',
            'cscMatch' => 'SearchEnumMultiSelectField',
            'currency' => 'SearchMultiSelectField',
            'customerSubOf' => 'SearchMultiSelectField',
            'customForm' => 'SearchMultiSelectField',
            'custType' => 'SearchMultiSelectField',
            'dateCreated' => 'SearchDateField',
            'daysOpen' => 'SearchLongField',
            'daysOverdue' => 'SearchLongField',
            'debitAmount' => 'SearchDoubleField',
            'deferredRevenue' => 'SearchDoubleField',
            'deferRevRec' => 'SearchBooleanField',
            'department' => 'SearchMultiSelectField',
            'depositDate' => 'SearchDateField',
            'depositTransaction' => 'SearchMultiSelectField',
            'drAccount' => 'SearchMultiSelectField',
            'dueDate' => 'SearchDateField',
            'email' => 'SearchStringField',
            'employee' => 'SearchMultiSelectField',
            'endDate' => 'SearchDateField',
            'entity' => 'SearchMultiSelectField',
            'entityStatus' => 'SearchMultiSelectField',
            'estGrossProfit' => 'SearchDoubleField',
            'estGrossProfitPct' => 'SearchDoubleField',
            'exchangeRate' => 'SearchDoubleField',
            'excludeCommission' => 'SearchBooleanField',
            'expectedCloseDate' => 'SearchDateField',
            'expectedReceiptDate' => 'SearchDateField',
            'expenseCategory' => 'SearchMultiSelectField',
            'expenseDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'finChrg' => 'SearchBooleanField',
            'forecastType' => 'SearchEnumMultiSelectField',
            'fulfillingTransaction' => 'SearchMultiSelectField',
            'fxAccount' => 'SearchMultiSelectField',
            'fxAmount' => 'SearchDoubleField',
            'fxCostEstimate' => 'SearchDoubleField',
            'fxCostEstimateRate' => 'SearchDoubleField',
            'fxEstGrossProfit' => 'SearchDoubleField',
            'fxTranCostEstimate' => 'SearchDoubleField',
            'fxVsoeAllocation' => 'SearchDoubleField',
            'fxVsoeAmount' => 'SearchDoubleField',
            'fxVsoePrice' => 'SearchDoubleField',
            'gcoAvailabelToCharge' => 'SearchBooleanField',
            'gcoAvailableToRefund' => 'SearchBooleanField',
            'gcoAvsStreetMatch' => 'SearchEnumMultiSelectField',
            'gcoAvsZipMatch' => 'SearchEnumMultiSelectField',
            'gcoBuyerAccountAge' => 'SearchLongField',
            'gcoBuyerIp' => 'SearchStringField',
            'gcoChargeAmount' => 'SearchDoubleField',
            'gcoChargebackAmount' => 'SearchDoubleField',
            'gcoConfirmedChargedTotal' => 'SearchDoubleField',
            'gcoConfirmedRefundedTotal' => 'SearchDoubleField',
            'gcoCreditcardNumber' => 'SearchStringField',
            'gcoCscMatch' => 'SearchEnumMultiSelectField',
            'gcoFinancialState' => 'SearchStringField',
            'gcoFulfillmentState' => 'SearchStringField',
            'gcoOrderId' => 'SearchStringField',
            'gcoOrderTotal' => 'SearchDoubleField',
            'gcoPromotionAmount' => 'SearchDoubleField',
            'gcoPromotionName' => 'SearchStringField',
            'gcoRefundAmount' => 'SearchDoubleField',
            'gcoShippingTotal' => 'SearchDoubleField',
            'gcoStateChangedDetail' => 'SearchStringField',
            'giftCertificate' => 'SearchStringField',
            'grossAmount' => 'SearchDoubleField',
            'includeInForecast' => 'SearchBooleanField',
            'intercoStatus' => 'SearchEnumMultiSelectField',
            'intercoTransaction' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'inVsoeBundle' => 'SearchBooleanField',
            'isAllocation' => 'SearchBooleanField',
            'isBackflush' => 'SearchBooleanField',
            'isGcoChargeback' => 'SearchBooleanField',
            'isGcoChargeConfirmed' => 'SearchBooleanField',
            'isGcoPaymentGuaranteed' => 'SearchBooleanField',
            'isGcoRefundConfirmed' => 'SearchBooleanField',
            'isIntercompanyAdjustment' => 'SearchBooleanField',
            'isPayPalMeth' => 'SearchBooleanField',
            'isReversal' => 'SearchBooleanField',
            'isRevRecTransaction' => 'SearchBooleanField',
            'isScrap' => 'SearchBooleanField',
            'isShipAddress' => 'SearchBooleanField',
            'isTransferPriceCosting' => 'SearchBooleanField',
            'isVsoeAlloc' => 'SearchBooleanField',
            'isWip' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'itemRevision' => 'SearchMultiSelectField',
            'itemSubOf' => 'SearchMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'leadSource' => 'SearchMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'mainLine' => 'SearchBooleanField',
            'mainName' => 'SearchMultiSelectField',
            'matchBillToReceipt' => 'SearchBooleanField',
            'memo' => 'SearchStringField',
            'memoMain' => 'SearchStringField',
            'memorized' => 'SearchBooleanField',
            'merchantAccount' => 'SearchStringField',
            'message' => 'SearchStringField',
            'multiSubsidiary' => 'SearchBooleanField',
            'nameText' => 'SearchStringField',
            'netAmount' => 'SearchDoubleField',
            'nextApprover' => 'SearchMultiSelectField',
            'nextBillDate' => 'SearchDateField',
            'nonReimbursable' => 'SearchBooleanField',
            'number' => 'SearchLongField',
            'opportunity' => 'SearchMultiSelectField',
            'otherRefNum' => 'SearchTextNumberField',
            'otherRefNumNonDeposit' => 'SearchTextNumberField',
            'packageCount' => 'SearchLongField',
            'paidTransaction' => 'SearchMultiSelectField',
            'parent' => 'SearchLongField',
            'partner' => 'SearchMultiSelectField',
            'partnerContribution' => 'SearchLongField',
            'partnerRole' => 'SearchMultiSelectField',
            'partnerTeamMember' => 'SearchMultiSelectField',
            'payingTransaction' => 'SearchMultiSelectField',
            'paymentEventDate' => 'SearchDateField',
            'paymentEventHoldReason' => 'SearchEnumMultiSelectField',
            'paymentEventPurchaseCardUsed' => 'SearchBooleanField',
            'paymentEventPurchaseDataSent' => 'SearchBooleanField',
            'paymentEventResult' => 'SearchEnumMultiSelectField',
            'paymentEventType' => 'SearchEnumMultiSelectField',
            'paymentMethod' => 'SearchMultiSelectField',
            'payPalPending' => 'SearchBooleanField',
            'payPalStatus' => 'SearchStringField',
            'payPalTranId' => 'SearchStringField',
            'pnRefNum' => 'SearchStringField',
            'poAsText' => 'SearchStringField',
            'posting' => 'SearchBooleanField',
            'postingPeriod' => 'RecordRef',
            'postingPeriodRelative' => 'PostingPeriodDate',
            'priceLevel' => 'SearchMultiSelectField',
            'printedPickingTicket' => 'SearchBooleanField',
            'probability' => 'SearchLongField',
            'projectedAmount' => 'SearchDoubleField',
            'promoCode' => 'SearchMultiSelectField',
            'purchaseOrder' => 'SearchMultiSelectField',
            'quantity' => 'SearchDoubleField',
            'quantityBilled' => 'SearchDoubleField',
            'quantityCommitted' => 'SearchDoubleField',
            'quantityPacked' => 'SearchDoubleField',
            'quantityPicked' => 'SearchDoubleField',
            'quantityRevCommitted' => 'SearchDoubleField',
            'quantityShipRecv' => 'SearchDoubleField',
            'recognizedRevenue' => 'SearchDoubleField',
            'recordType' => 'SearchStringField',
            'revCommitStatus' => 'SearchEnumMultiSelectField',
            'revCommittingStatus' => 'SearchBooleanField',
            'revCommittingTransaction' => 'SearchMultiSelectField',
            'revenueStatus' => 'SearchEnumMultiSelectField',
            'reversalDate' => 'SearchDateField',
            'reversalNumber' => 'SearchStringField',
            'revRecEndDate' => 'SearchDateField',
            'revRecOnRevCommitment' => 'SearchBooleanField',
            'revRecStartDate' => 'SearchDateField',
            'revRecTermInMonths' => 'SearchLongField',
            'salesEffectiveDate' => 'SearchDateField',
            'salesOrder' => 'SearchMultiSelectField',
            'salesRep' => 'SearchMultiSelectField',
            'salesTeamMember' => 'SearchMultiSelectField',
            'salesTeamRole' => 'SearchMultiSelectField',
            'serialNumber' => 'SearchStringField',
            'serialNumberCost' => 'SearchDoubleField',
            'serialNumberCostAdjustment' => 'SearchDoubleField',
            'serialNumberQuantity' => 'SearchDoubleField',
            'serialNumbers' => 'SearchStringField',
            'shipAddress' => 'SearchStringField',
            'shipAddressee' => 'SearchStringField',
            'shipAttention' => 'SearchStringField',
            'shipCity' => 'SearchStringField',
            'shipComplete' => 'SearchBooleanField',
            'shipCountry' => 'SearchEnumMultiSelectField',
            'shipCounty' => 'SearchStringField',
            'shipDate' => 'SearchDateField',
            'shipGroup' => 'SearchLongField',
            'shipMethod' => 'SearchMultiSelectField',
            'shipPhone' => 'SearchStringField',
            'shipping' => 'SearchBooleanField',
            'shipRecvStatus' => 'SearchBooleanField',
            'shipRecvStatusLine' => 'SearchBooleanField',
            'shipState' => 'SearchMultiSelectField',
            'shipTo' => 'SearchMultiSelectField',
            'shipZip' => 'SearchStringField',
            'source' => 'SearchEnumMultiSelectField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchEnumMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'taxItem' => 'SearchMultiSelectField',
            'taxLine' => 'SearchBooleanField',
            'taxPeriod' => 'RecordRef',
            'taxPeriodRelative' => 'PostingPeriodDate',
            'taxRate' => 'SearchDoubleField',
            'terms' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'toBeEmailed' => 'SearchBooleanField',
            'toBePrinted' => 'SearchBooleanField',
            'toSubsidiary' => 'SearchMultiSelectField',
            'totalAmount' => 'SearchDoubleField',
            'trackingNumbers' => 'SearchStringField',
            'tranCostEstimate' => 'SearchDoubleField',
            'tranDate' => 'SearchDateField',
            'tranEstGrossProfit' => 'SearchDoubleField',
            'tranEstGrossProfitPct' => 'SearchDoubleField',
            'tranFxEstGrossProfit' => 'SearchDoubleField',
            'tranId' => 'SearchStringField',
            'tranIsVsoeBundle' => 'SearchBooleanField',
            'transactionDiscount' => 'SearchBooleanField',
            'transactionLineType' => 'SearchEnumMultiSelectField',
            'transferLocation' => 'SearchMultiSelectField',
            'transferOrderQuantityCommitted' => 'SearchDoubleField',
            'transferOrderQuantityPacked' => 'SearchDoubleField',
            'transferOrderQuantityPicked' => 'SearchDoubleField',
            'transferOrderQuantityReceived' => 'SearchDoubleField',
            'transferOrderQuantityShipped' => 'SearchDoubleField',
            'type' => 'SearchEnumMultiSelectField',
            'unit' => 'SearchMultiSelectField',
            'unitCostOverride' => 'SearchDoubleField',
            'vendType' => 'SearchMultiSelectField',
            'visibleToCustomer' => 'SearchBooleanField',
            'voided' => 'SearchBooleanField',
            'vsoeAllocation' => 'SearchDoubleField',
            'vsoeAmount' => 'SearchDoubleField',
            'vsoeDeferral' => 'SearchEnumMultiSelectField',
            'vsoeDelivered' => 'SearchBooleanField',
            'vsoePermitDiscount' => 'SearchEnumMultiSelectField',
            'vsoePrice' => 'SearchDoubleField',
            'webSite' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        TransactionSearchRowBasic => {
        },
    
        ItemSearchBasic => {
            'account' => 'SearchMultiSelectField',
            'allowedShippingMethod' => 'SearchMultiSelectField',
            'alternateDemandSourceItem' => 'SearchMultiSelectField',
            'atpLeadTime' => 'SearchDoubleField',
            'atpMethod' => 'SearchEnumMultiSelectField',
            'autoLeadTime' => 'SearchBooleanField',
            'autoPreferredStockLevel' => 'SearchBooleanField',
            'autoReorderPoint' => 'SearchBooleanField',
            'availableToPartners' => 'SearchBooleanField',
            'averageCost' => 'SearchDoubleField',
            'backwardConsumptionDays' => 'SearchLongField',
            'binNumber' => 'SearchStringField',
            'binOnHandAvail' => 'SearchDoubleField',
            'binOnHandCount' => 'SearchDoubleField',
            'buildEntireAssembly' => 'SearchBooleanField',
            'buildTime' => 'SearchDoubleField',
            'buyItNowPrice' => 'SearchDoubleField',
            'caption' => 'SearchStringField',
            'category' => 'SearchMultiSelectField',
            'class' => 'SearchMultiSelectField',
            'component' => 'SearchMultiSelectField',
            'componentOf' => 'SearchMultiSelectField',
            'copyDescription' => 'SearchBooleanField',
            'correlatedItem' => 'SearchMultiSelectField',
            'correlatedItemCorrelation' => 'SearchDoubleField',
            'correlatedItemCount' => 'SearchLongField',
            'correlatedItemLift' => 'SearchDoubleField',
            'correlatedItemPurchaseRate' => 'SearchDoubleField',
            'cost' => 'SearchDoubleField',
            'costCategory' => 'SearchMultiSelectField',
            'costEstimate' => 'SearchDoubleField',
            'costEstimateType' => 'SearchEnumMultiSelectField',
            'costingMethod' => 'SearchEnumMultiSelectField',
            'countryOfManufacture' => 'SearchEnumMultiSelectField',
            'created' => 'SearchDateField',
            'createJob' => 'SearchBooleanField',
            'dateViewed' => 'SearchDateField',
            'daysBeforeExpiration' => 'SearchDoubleField',
            'defaultReturnCost' => 'SearchDoubleField',
            'defaultShippingMethod' => 'SearchMultiSelectField',
            'demandModifier' => 'SearchDoubleField',
            'demandSource' => 'SearchEnumMultiSelectField',
            'department' => 'SearchMultiSelectField',
            'displayIneBayStore' => 'SearchBooleanField',
            'displayName' => 'SearchStringField',
            'dontShowPrice' => 'SearchBooleanField',
            'eBayItemDescription' => 'SearchStringField',
            'eBayItemSubtitle' => 'SearchStringField',
            'eBayItemTitle' => 'SearchStringField',
            'ebayRelistingOption' => 'SearchEnumMultiSelectField',
            'effectiveBomControl' => 'SearchEnumMultiSelectField',
            'effectiveDate' => 'SearchDateField',
            'effectiveRevision' => 'SearchMultiSelectField',
            'endAuctionsWhenOutOfStock' => 'SearchBooleanField',
            'excludeFromSitemap' => 'SearchBooleanField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'featuredDescription' => 'SearchStringField',
            'feedDescription' => 'SearchStringField',
            'feedName' => 'SearchStringField',
            'fixedLotSize' => 'SearchDoubleField',
            'forwardConsumptionDays' => 'SearchLongField',
            'froogleProductFeed' => 'SearchBooleanField',
            'fxCost' => 'SearchDoubleField',
            'giftCertAuthCode' => 'SearchStringField',
            'giftCertEmail' => 'SearchStringField',
            'giftCertExpDate' => 'SearchDateField',
            'giftCertFrom' => 'SearchStringField',
            'giftCertMsg' => 'SearchStringField',
            'giftCertOrigAmt' => 'SearchStringField',
            'giftCertRecipient' => 'SearchStringField',
            'imageUrl' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'inventoryLocation' => 'SearchMultiSelectField',
            'invtClassification' => 'SearchEnumMultiSelectField',
            'invtCountInterval' => 'SearchLongField',
            'isAvailable' => 'SearchBooleanField',
            'isDropShipItem' => 'SearchBooleanField',
            'isFulfillable' => 'SearchBooleanField',
            'isGcoCompliant' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isLotItem' => 'SearchBooleanField',
            'isOnline' => 'SearchBooleanField',
            'isPreferredVendor' => 'SearchBooleanField',
            'isSerialItem' => 'SearchBooleanField',
            'isSpecialOrderItem' => 'SearchBooleanField',
            'isSpecialWorkOrderItem' => 'SearchBooleanField',
            'issueProduct' => 'SearchMultiSelectField',
            'isTaxable' => 'SearchBooleanField',
            'isVsoeBundle' => 'SearchBooleanField',
            'isWip' => 'SearchBooleanField',
            'itemId' => 'SearchStringField',
            'itemUrl' => 'SearchStringField',
            'lastInvtCountDate' => 'SearchDateField',
            'lastModifiedDate' => 'SearchDateField',
            'lastPurchasePrice' => 'SearchDoubleField',
            'lastQuantityAvailableChange' => 'SearchDateField',
            'leadTime' => 'SearchLongField',
            'listingDuration' => 'SearchEnumMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'locationAtpLeadTime' => 'SearchDoubleField',
            'locationAverageCost' => 'SearchDoubleField',
            'locationBuildTime' => 'SearchDoubleField',
            'locationCost' => 'SearchDoubleField',
            'locationDefaultReturnCost' => 'SearchDoubleField',
            'locationDemandSource' => 'SearchEnumMultiSelectField',
            'locationFixedLotSize' => 'SearchDoubleField',
            'locationInvtClassification' => 'SearchEnumMultiSelectField',
            'locationInvtCountInterval' => 'SearchLongField',
            'locationLastInvtCountDate' => 'SearchDateField',
            'locationLeadTime' => 'SearchLongField',
            'locationNextInvtCountDate' => 'SearchDateField',
            'locationPeriodicLotSizeDays' => 'SearchLongField',
            'locationPeriodicLotSizeType' => 'SearchEnumMultiSelectField',
            'locationPreferredStockLevel' => 'SearchDoubleField',
            'locationQuantityAvailable' => 'SearchDoubleField',
            'locationQuantityBackOrdered' => 'SearchDoubleField',
            'locationQuantityCommitted' => 'SearchDoubleField',
            'locationQuantityInTransit' => 'SearchDoubleField',
            'locationQuantityOnHand' => 'SearchDoubleField',
            'locationQuantityOnOrder' => 'SearchDoubleField',
            'locationReorderPoint' => 'SearchDoubleField',
            'locationSafetyStockLevel' => 'SearchDoubleField',
            'locationSupplyLotSizingMethod' => 'SearchEnumMultiSelectField',
            'locationSupplyType' => 'SearchEnumMultiSelectField',
            'locationTotalValue' => 'SearchDoubleField',
            'locBackwardConsumptionDays' => 'SearchLongField',
            'locForwardConsumptionDays' => 'SearchLongField',
            'manufacturer' => 'SearchStringField',
            'manufactureraddr1' => 'SearchStringField',
            'manufacturerCity' => 'SearchStringField',
            'manufacturerState' => 'SearchStringField',
            'manufacturerTariff' => 'SearchStringField',
            'manufacturerTaxId' => 'SearchStringField',
            'manufacturerZip' => 'SearchStringField',
            'manufacturingChargeItem' => 'SearchBooleanField',
            'matchBillToReceipt' => 'SearchBooleanField',
            'matrix' => 'SearchBooleanField',
            'matrixChild' => 'SearchBooleanField',
            'metaTagHtml' => 'SearchStringField',
            'minimumQuantity' => 'SearchLongField',
            'mpn' => 'SearchStringField',
            'multManufactureAddr' => 'SearchBooleanField',
            'nexTagCategory' => 'SearchStringField',
            'nexTagProductFeed' => 'SearchBooleanField',
            'nextInvtCountDate' => 'SearchDateField',
            'numActiveListings' => 'SearchLongField',
            'numberAllowedDownloads' => 'SearchDoubleField',
            'numCurrentlyListed' => 'SearchLongField',
            'obsoleteDate' => 'SearchDateField',
            'obsoleteRevision' => 'SearchMultiSelectField',
            'offerSupport' => 'SearchBooleanField',
            'onlineCustomerPrice' => 'SearchDoubleField',
            'onSpecial' => 'SearchBooleanField',
            'otherVendor' => 'SearchMultiSelectField',
            'outOfStockBehavior' => 'SearchMultiSelectField',
            'overallQuantityPricingType' => 'SearchEnumMultiSelectField',
            'pageTitle' => 'SearchStringField',
            'parent' => 'SearchMultiSelectField',
            'periodicLotSizeDays' => 'SearchLongField',
            'periodicLotSizeType' => 'SearchEnumMultiSelectField',
            'preferenceCriterion' => 'SearchStringField',
            'preferredBin' => 'SearchBooleanField',
            'preferredLocation' => 'SearchMultiSelectField',
            'preferredStockLevel' => 'SearchDoubleField',
            'preferredStockLevelDays' => 'SearchLongField',
            'price' => 'SearchDoubleField',
            'pricesIncludeTax' => 'SearchBooleanField',
            'pricingGroup' => 'SearchMultiSelectField',
            'primaryCategory' => 'SearchLongField',
            'purchaseUnit' => 'SearchMultiSelectField',
            'quantityAvailable' => 'SearchDoubleField',
            'quantityBackOrdered' => 'SearchDoubleField',
            'quantityCommitted' => 'SearchDoubleField',
            'quantityOnHand' => 'SearchDoubleField',
            'quantityOnOrder' => 'SearchDoubleField',
            'quantityPricingSchedule' => 'SearchMultiSelectField',
            'reorderMultiple' => 'SearchLongField',
            'reorderPoint' => 'SearchDoubleField',
            'reservePrice' => 'SearchDoubleField',
            'revRecSchedule' => 'SearchMultiSelectField',
            'safetyStockLevel' => 'SearchDoubleField',
            'safetyStockLevelDays' => 'SearchLongField',
            'salesDescription' => 'SearchStringField',
            'saleUnit' => 'SearchMultiSelectField',
            'scheduleBCode' => 'SearchEnumMultiSelectField',
            'scheduleBNumber' => 'SearchStringField',
            'scheduleBQuantity' => 'SearchStringField',
            'searchKeywords' => 'SearchStringField',
            'seasonalDemand' => 'SearchBooleanField',
            'sellOnEBay' => 'SearchBooleanField',
            'serialNumber' => 'SearchStringField',
            'serialNumberLocation' => 'SearchMultiSelectField',
            'shipIndividually' => 'SearchBooleanField',
            'shipPackage' => 'SearchMultiSelectField',
            'shippingCarrier' => 'SearchEnumMultiSelectField',
            'shippingRate' => 'SearchDoubleField',
            'shoppingDotComCategory' => 'SearchStringField',
            'shoppingProductFeed' => 'SearchBooleanField',
            'shopzillaCategoryId' => 'SearchLongField',
            'shopzillaProductFeed' => 'SearchBooleanField',
            'sitemapPriority' => 'SearchEnumMultiSelectField',
            'softDescriptor' => 'SearchMultiSelectField',
            'startingPrice' => 'SearchDoubleField',
            'stockDescription' => 'SearchStringField',
            'stockUnit' => 'SearchMultiSelectField',
            'storeDescription' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'subType' => 'SearchEnumMultiSelectField',
            'supplyLotSizingMethod' => 'SearchEnumMultiSelectField',
            'supplyReplenishmentMethod' => 'SearchEnumMultiSelectField',
            'supplyType' => 'SearchEnumMultiSelectField',
            'taxCode' => 'SearchMultiSelectField',
            'taxSchedule' => 'SearchMultiSelectField',
            'thumbnailUrl' => 'SearchStringField',
            'totalValue' => 'SearchDoubleField',
            'trackLandedCost' => 'SearchBooleanField',
            'transferPrice' => 'SearchDoubleField',
            'type' => 'SearchEnumMultiSelectField',
            'unitsType' => 'SearchMultiSelectField',
            'upcCode' => 'SearchStringField',
            'urlComponent' => 'SearchStringField',
            'useBins' => 'SearchBooleanField',
            'useMarginalRates' => 'SearchBooleanField',
            'vendor' => 'SearchMultiSelectField',
            'vendorCode' => 'SearchStringField',
            'vendorCost' => 'SearchDoubleField',
            'vendorCostEntered' => 'SearchDoubleField',
            'vendorName' => 'SearchStringField',
            'vendorPriceCurrency' => 'SearchMultiSelectField',
            'vsoeDeferral' => 'SearchEnumMultiSelectField',
            'vsoeDelivered' => 'SearchBooleanField',
            'vsoePermitDiscount' => 'SearchEnumMultiSelectField',
            'vsoePrice' => 'SearchDoubleField',
            'webSite' => 'SearchMultiSelectField',
            'weight' => 'SearchDoubleField',
            'yahooProductFeed' => 'SearchBooleanField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ItemSearchRowBasic => {
        },
    
        PartnerSearchBasic => {
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'assignTasks' => 'SearchBooleanField',
            'attention' => 'SearchStringField',
            'billAddress' => 'SearchStringField',
            'category' => 'SearchMultiSelectField',
            'city' => 'SearchStringField',
            'class' => 'SearchMultiSelectField',
            'comments' => 'SearchStringField',
            'commissionPlan' => 'SearchMultiSelectField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'dateCreated' => 'SearchDateField',
            'department' => 'SearchMultiSelectField',
            'eligibleForCommission' => 'SearchBooleanField',
            'email' => 'SearchStringField',
            'emailPreference' => 'SearchEnumMultiSelectField',
            'entityId' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'firstName' => 'SearchStringField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'group' => 'SearchMultiSelectField',
            'hasDuplicates' => 'SearchBooleanField',
            'image' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isPerson' => 'SearchBooleanField',
            'language' => 'SearchEnumMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'lastName' => 'SearchStringField',
            'level' => 'SearchEnumMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'middleName' => 'SearchStringField',
            'otherRelationships' => 'SearchEnumMultiSelectField',
            'parent' => 'SearchMultiSelectField',
            'partnerCode' => 'SearchStringField',
            'permission' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'promoCode' => 'SearchMultiSelectField',
            'salutation' => 'SearchStringField',
            'shipAddress' => 'SearchStringField',
            'state' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'URL' => 'SearchStringField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        PartnerSearchRowBasic => {
        },
    
        VendorSearchBasic => {
            'accountNumber' => 'SearchStringField',
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'attention' => 'SearchStringField',
            'balance' => 'SearchDoubleField',
            'billAddress' => 'SearchStringField',
            'category' => 'SearchMultiSelectField',
            'city' => 'SearchStringField',
            'comments' => 'SearchStringField',
            'contact' => 'SearchStringField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'creditLimit' => 'SearchDoubleField',
            'currency' => 'SearchMultiSelectField',
            'currentExchangeRate' => 'SearchDoubleField',
            'dateCreated' => 'SearchDateField',
            'eligibleForCommission' => 'SearchBooleanField',
            'email' => 'SearchStringField',
            'emailPreference' => 'SearchEnumMultiSelectField',
            'emailTransactions' => 'SearchBooleanField',
            'entityId' => 'SearchStringField',
            'expenseAccount' => 'SearchMultiSelectField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'faxTransactions' => 'SearchBooleanField',
            'firstName' => 'SearchStringField',
            'fxBalance' => 'SearchDoubleField',
            'fxUnbilledOrders' => 'SearchDoubleField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'group' => 'SearchMultiSelectField',
            'hasDuplicates' => 'SearchBooleanField',
            'image' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'is1099Eligible' => 'SearchBooleanField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isJobResourceVend' => 'SearchBooleanField',
            'isPerson' => 'SearchBooleanField',
            'laborCost' => 'SearchDoubleField',
            'language' => 'SearchEnumMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'lastName' => 'SearchStringField',
            'level' => 'SearchEnumMultiSelectField',
            'middleName' => 'SearchStringField',
            'otherRelationships' => 'SearchEnumMultiSelectField',
            'payablesAccount' => 'SearchMultiSelectField',
            'pec' => 'SearchStringField',
            'permission' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'printTransactions' => 'SearchBooleanField',
            'salutation' => 'SearchStringField',
            'shipAddress' => 'SearchStringField',
            'state' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'taxIdNum' => 'SearchStringField',
            'title' => 'SearchStringField',
            'unbilledOrders' => 'SearchDoubleField',
            'url' => 'SearchStringField',
            'vatRegNumber' => 'SearchStringField',
            'workCalendar' => 'SearchMultiSelectField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        VendorSearchRowBasic => {
        },
    
        SiteCategorySearchBasic => {
            'dateViewed' => 'SearchDateField',
            'description' => 'SearchStringField',
            'excludeFromSitemap' => 'SearchBooleanField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'name' => 'SearchMultiSelectField',
            'sitemapPriority' => 'SearchEnumMultiSelectField',
        },
    
        SiteCategorySearchRowBasic => {
        },
    
        TimeBillSearchBasic => {
            'approved' => 'SearchBooleanField',
            'billable' => 'SearchBooleanField',
            'class' => 'SearchMultiSelectField',
            'customer' => 'SearchMultiSelectField',
            'date' => 'SearchDateField',
            'dateCreated' => 'SearchDateField',
            'department' => 'SearchMultiSelectField',
            'duration' => 'SearchDoubleField',
            'employee' => 'SearchMultiSelectField',
            'exempt' => 'SearchBooleanField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'item' => 'SearchMultiSelectField',
            'lastModified' => 'SearchDateField',
            'location' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'paidByPayroll' => 'SearchBooleanField',
            'paidExternally' => 'SearchBooleanField',
            'payItem' => 'SearchMultiSelectField',
            'productive' => 'SearchBooleanField',
            'status' => 'SearchBooleanField',
            'subsidiary' => 'SearchMultiSelectField',
            'temporaryLocalJurisdiction' => 'SearchMultiSelectField',
            'temporaryStateJurisdiction' => 'SearchMultiSelectField',
            'type' => 'SearchEnumMultiSelectField',
            'utilized' => 'SearchBooleanField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        TimeBillSearchRowBasic => {
        },
    
        SolutionSearchBasic => {
            'abstract' => 'SearchStringField',
            'assigned' => 'SearchMultiSelectField',
            'caseCount' => 'SearchLongField',
            'code' => 'SearchStringField',
            'createdDate' => 'SearchDateField',
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'find' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isOnline' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'number' => 'SearchLongField',
            'status' => 'SearchEnumMultiSelectField',
            'title' => 'SearchStringField',
            'topic' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        SolutionSearchRowBasic => {
        },
    
        TopicSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        TopicSearchRowBasic => {
        },
    
        SubsidiarySearchBasic => {
            'address' => 'SearchStringField',
            'city' => 'SearchStringField',
            'country' => 'SearchEnumMultiSelectField',
            'currency' => 'SearchMultiSelectField',
            'email' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isElimination' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'legalName' => 'SearchStringField',
            'name' => 'SearchStringField',
            'nameNoHierarchy' => 'SearchStringField',
            'phone' => 'SearchStringField',
            'state' => 'SearchStringField',
            'taxIdNum' => 'SearchStringField',
            'tranPrefix' => 'SearchStringField',
            'url' => 'SearchStringField',
            'zip' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        SubsidiarySearchRowBasic => {
        },
    
        GiftCertificateSearchBasic => {
            'amountAvailableBilled' => 'SearchDoubleField',
            'amountRemaining' => 'SearchDoubleField',
            'createdDate' => 'SearchDateField',
            'email' => 'SearchStringField',
            'expirationDate' => 'SearchDateField',
            'giftCertCode' => 'SearchStringField',
            'incomeAccount' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isActive' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'liabilityAccount' => 'SearchMultiSelectField',
            'message' => 'SearchStringField',
            'name' => 'SearchStringField',
            'originalAmount' => 'SearchDoubleField',
            'purchaseDate' => 'SearchDateField',
            'sender' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        GiftCertificateSearchRowBasic => {
        },
    
        FolderSearchBasic => {
            'class' => 'SearchMultiSelectField',
            'department' => 'SearchMultiSelectField',
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'group' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isTopLevel' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'location' => 'SearchMultiSelectField',
            'name' => 'SearchStringField',
            'numFiles' => 'SearchLongField',
            'owner' => 'SearchMultiSelectField',
            'parent' => 'SearchMultiSelectField',
            'predecessor' => 'SearchMultiSelectField',
            'private' => 'SearchBooleanField',
            'size' => 'SearchLongField',
            'subsidiary' => 'SearchMultiSelectField',
        },
    
        FolderSearchRowBasic => {
        },
    
        FileSearchBasic => {
            'availableWithoutLogin' => 'SearchBooleanField',
            'created' => 'SearchDateField',
            'dateViewed' => 'SearchDateField',
            'description' => 'SearchStringField',
            'documentSize' => 'SearchLongField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fileType' => 'SearchEnumMultiSelectField',
            'folder' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isAvailable' => 'SearchBooleanField',
            'isLink' => 'SearchBooleanField',
            'modified' => 'SearchDateField',
            'name' => 'SearchStringField',
            'owner' => 'SearchMultiSelectField',
            'url' => 'SearchStringField',
        },
    
        FileSearchRowBasic => {
        },
    
        JobSearchBasic => {
            'accountNumber' => 'SearchStringField',
            'actualTime' => 'SearchDoubleField',
            'address' => 'SearchStringField',
            'addressee' => 'SearchStringField',
            'addressLabel' => 'SearchStringField',
            'addressPhone' => 'SearchStringField',
            'allocatePayrollExpenses' => 'SearchBooleanField',
            'allowAllResourcesForTasks' => 'SearchBooleanField',
            'allowExpenses' => 'SearchBooleanField',
            'allowTime' => 'SearchBooleanField',
            'attention' => 'SearchStringField',
            'billingSchedule' => 'SearchMultiSelectField',
            'calculatedEndDate' => 'SearchDateField',
            'calculatedEndDateBaseline' => 'SearchDateField',
            'category' => 'SearchMultiSelectField',
            'city' => 'SearchStringField',
            'comments' => 'SearchStringField',
            'contact' => 'SearchStringField',
            'country' => 'SearchEnumMultiSelectField',
            'county' => 'SearchStringField',
            'customer' => 'SearchMultiSelectField',
            'dateCreated' => 'SearchDateField',
            'email' => 'SearchStringField',
            'endDate' => 'SearchDateField',
            'entityId' => 'SearchStringField',
            'estCost' => 'SearchDoubleField',
            'estEndDate' => 'SearchDateField',
            'estimatedGrossProfit' => 'SearchDoubleField',
            'estimatedGrossProfitPercent' => 'SearchDoubleField',
            'estimatedLaborCost' => 'SearchDoubleField',
            'estimatedLaborCostBaseline' => 'SearchDoubleField',
            'estimatedLaborRevenue' => 'SearchDoubleField',
            'estimatedTime' => 'SearchDoubleField',
            'estimatedTimeOverride' => 'SearchDoubleField',
            'estimatedTimeOverrideBaseline' => 'SearchDoubleField',
            'estRevenue' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'fax' => 'SearchStringField',
            'giveAccess' => 'SearchBooleanField',
            'globalSubscriptionStatus' => 'SearchEnumMultiSelectField',
            'image' => 'SearchStringField',
            'includeCrmTasksInTotals' => 'SearchBooleanField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDefaultBilling' => 'SearchBooleanField',
            'isDefaultShipping' => 'SearchBooleanField',
            'isExemptTime' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isProductiveTime' => 'SearchBooleanField',
            'isUtilizedTime' => 'SearchBooleanField',
            'jobBillingType' => 'SearchEnumMultiSelectField',
            'jobItem' => 'SearchMultiSelectField',
            'jobPrice' => 'SearchDoubleField',
            'jobResource' => 'SearchMultiSelectField',
            'jobResourceRole' => 'SearchMultiSelectField',
            'language' => 'SearchEnumMultiSelectField',
            'lastBaselineDate' => 'SearchDateField',
            'lastModifiedDate' => 'SearchDateField',
            'level' => 'SearchEnumMultiSelectField',
            'limitTimeToAssignees' => 'SearchBooleanField',
            'materializeTime' => 'SearchBooleanField',
            'parent' => 'SearchMultiSelectField',
            'pctComplete' => 'SearchLongField',
            'percentTimeComplete' => 'SearchLongField',
            'permission' => 'SearchEnumMultiSelectField',
            'phone' => 'SearchStringField',
            'phoneticName' => 'SearchStringField',
            'projectedEndDateBaseline' => 'SearchDateField',
            'startDate' => 'SearchDateField',
            'startDateBaseline' => 'SearchDateField',
            'state' => 'SearchStringField',
            'status' => 'SearchMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'timeRemaining' => 'SearchDoubleField',
            'type' => 'SearchMultiSelectField',
            'zipCode' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        JobSearchRowBasic => {
        },
    
        IssueSearchBasic => {
            'ageInMonths' => 'SearchLongField',
            'assigned' => 'SearchMultiSelectField',
            'buildBroken' => 'SearchMultiSelectField',
            'buildBrokenName' => 'SearchStringField',
            'buildFixed' => 'SearchMultiSelectField',
            'buildFixedName' => 'SearchStringField',
            'buildTarget' => 'SearchMultiSelectField',
            'buildTargetName' => 'SearchStringField',
            'caseCount' => 'SearchLongField',
            'caseNumber' => 'SearchStringField',
            'closedDate' => 'SearchDateField',
            'createdDate' => 'SearchDateField',
            'dateReleased' => 'SearchDateField',
            'details' => 'SearchStringField',
            'duplicateOf' => 'SearchMultiSelectField',
            'eFix' => 'SearchBooleanField',
            'employeeOrTeam' => 'SearchMultiSelectField',
            'eventStatus' => 'SearchEnumMultiSelectField',
            'externalAbstract' => 'SearchStringField',
            'externalDetails' => 'SearchStringField',
            'externalFixedIn' => 'SearchMultiSelectField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'externalStatus' => 'SearchMultiSelectField',
            'fixed' => 'SearchDateField',
            'fixedBy' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isOwner' => 'SearchBooleanField',
            'isReviewed' => 'SearchBooleanField',
            'isShowStopper' => 'SearchBooleanField',
            'issueAbstract' => 'SearchStringField',
            'issueNumber' => 'SearchStringField',
            'item' => 'SearchMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'module' => 'SearchMultiSelectField',
            'number' => 'SearchLongField',
            'originalFixedIn' => 'SearchStringField',
            'priority' => 'SearchMultiSelectField',
            'product' => 'SearchMultiSelectField',
            'productTeam' => 'SearchMultiSelectField',
            'reportedBy' => 'SearchMultiSelectField',
            'reproduce' => 'SearchMultiSelectField',
            'resolved' => 'SearchDateField',
            'resolvedBy' => 'SearchMultiSelectField',
            'reviewer' => 'SearchMultiSelectField',
            'severity' => 'SearchMultiSelectField',
            'source' => 'SearchEnumMultiSelectField',
            'status' => 'SearchMultiSelectField',
            'tags' => 'SearchMultiSelectField',
            'tracking' => 'SearchBooleanField',
            'type' => 'SearchMultiSelectField',
            'userType' => 'SearchMultiSelectField',
            'versionBroken' => 'SearchMultiSelectField',
            'versionFixed' => 'SearchMultiSelectField',
            'versionTarget' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        IssueSearchRowBasic => {
        },
    
        GroupMemberSearchBasic => {
            'groupId' => 'SearchMultiSelectField',
        },
    
        CampaignSearchBasic => {
            'audience' => 'SearchMultiSelectField',
            'baseCost' => 'SearchDoubleField',
            'campaignEventType' => 'SearchEnumMultiSelectField',
            'campaignId' => 'SearchStringField',
            'category' => 'SearchMultiSelectField',
            'channel' => 'SearchMultiSelectField',
            'cost' => 'SearchDoubleField',
            'createdDate' => 'SearchDateField',
            'endDate' => 'SearchDateField',
            'event' => 'SearchStringField',
            'expectedRevenue' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'family' => 'SearchMultiSelectField',
            'group' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isSalesCampaign' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'keyword' => 'SearchStringField',
            'lastModifiedDate' => 'SearchDateField',
            'manager' => 'SearchMultiSelectField',
            'managerRole' => 'SearchMultiSelectField',
            'number' => 'SearchLongField',
            'offer' => 'SearchMultiSelectField',
            'promoCode' => 'SearchMultiSelectField',
            'recipient' => 'SearchMultiSelectField',
            'response' => 'SearchEnumMultiSelectField',
            'responseCategory' => 'SearchEnumMultiSelectField',
            'responseCode' => 'SearchLongField',
            'responseComments' => 'SearchStringField',
            'responseDate' => 'SearchDateField',
            'scheduleDate' => 'SearchDateField',
            'searchEngine' => 'SearchMultiSelectField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchEnumMultiSelectField',
            'subscription' => 'SearchMultiSelectField',
            'template' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'vertical' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        CampaignSearchRowBasic => {
        },
    
        EntityGroupSearchBasic => {
            'email' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'groupName' => 'SearchStringField',
            'groupOwner' => 'SearchMultiSelectField',
            'groupType' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDynamic' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isManufacturingWorkCenter' => 'SearchBooleanField',
            'isPrivate' => 'SearchBooleanField',
            'laborResources' => 'SearchLongField',
            'lastModifiedDate' => 'SearchDateField',
            'machineResources' => 'SearchLongField',
            'subsidiary' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        EntityGroupSearchRowBasic => {
        },
    
        PromotionCodeSearchBasic => {
            'applyDiscountTo' => 'SearchEnumMultiSelectField',
            'code' => 'SearchStringField',
            'description' => 'SearchStringField',
            'discount' => 'SearchMultiSelectField',
            'discountAmount' => 'SearchDoubleField',
            'endDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'freeShipItem' => 'SearchMultiSelectField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isPublic' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'name' => 'SearchStringField',
            'partner' => 'SearchMultiSelectField',
            'startDate' => 'SearchDateField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        PromotionCodeSearchRowBasic => {
        },
    
        BudgetSearchBasic => {
            'account' => 'SearchMultiSelectField',
            'amount' => 'SearchDoubleField',
            'category' => 'SearchMultiSelectField',
            'class' => 'SearchMultiSelectField',
            'currency' => 'SearchMultiSelectField',
            'customer' => 'SearchMultiSelectField',
            'department' => 'SearchMultiSelectField',
            'global' => 'SearchBooleanField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'item' => 'SearchMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'subsidiary' => 'SearchMultiSelectField',
            'year' => 'SearchMultiSelectField',
            'year2' => 'SearchMultiSelectField',
        },
    
        BudgetSearchRowBasic => {
        },
    
        ProjectTaskSearchBasic => {
            'actualWork' => 'SearchDoubleField',
            'assignee' => 'SearchMultiSelectField',
            'company' => 'SearchMultiSelectField',
            'constraintType' => 'SearchEnumMultiSelectField',
            'contact' => 'SearchMultiSelectField',
            'cost' => 'SearchDoubleField',
            'costBase' => 'SearchDoubleField',
            'costBaseBaseline' => 'SearchDoubleField',
            'costBaseline' => 'SearchDoubleField',
            'costBaseVariance' => 'SearchDoubleField',
            'costVariance' => 'SearchDoubleField',
            'costVariancePercent' => 'SearchDoubleField',
            'createdDate' => 'SearchDateField',
            'endDate' => 'SearchDateField',
            'endDateBaseline' => 'SearchDateField',
            'endDateVariance' => 'SearchDoubleField',
            'estimatedWork' => 'SearchDoubleField',
            'estimatedWorkBaseline' => 'SearchDoubleField',
            'estimatedWorkVariance' => 'SearchDoubleField',
            'estimatedWorkVariancePercent' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'id' => 'SearchLongField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isSummaryTask' => 'SearchBooleanField',
            'lastModifiedDate' => 'SearchDateField',
            'owner' => 'SearchMultiSelectField',
            'parent' => 'SearchMultiSelectField',
            'percentWorkComplete' => 'SearchDoubleField',
            'predecessor' => 'SearchMultiSelectField',
            'predecessors' => 'SearchStringField',
            'priority' => 'SearchEnumMultiSelectField',
            'remainingWork' => 'SearchDoubleField',
            'startDate' => 'SearchDateField',
            'startDateBaseline' => 'SearchDateField',
            'startDateVariance' => 'SearchDoubleField',
            'status' => 'SearchEnumMultiSelectField',
            'successor' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ProjectTaskSearchRowBasic => {
        },
    
        ProjectTaskAssignmentSearchBasic => {
            'actualWork' => 'SearchDoubleField',
            'cost' => 'SearchDoubleField',
            'costBase' => 'SearchDoubleField',
            'endDate' => 'SearchDateField',
            'estimatedWork' => 'SearchDoubleField',
            'estimatedWorkBaseline' => 'SearchDoubleField',
            'grossProfit' => 'SearchDoubleField',
            'grossProfitBase' => 'SearchDoubleField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'price' => 'SearchDoubleField',
            'priceBase' => 'SearchDoubleField',
            'resource' => 'SearchMultiSelectField',
            'resourceName' => 'SearchStringField',
            'serviceItem' => 'SearchStringField',
            'serviceItemDesc' => 'SearchStringField',
            'startDate' => 'SearchDateField',
            'unitCost' => 'SearchDoubleField',
            'unitCostBase' => 'SearchDoubleField',
            'unitPrice' => 'SearchDoubleField',
            'unitPriceBase' => 'SearchDoubleField',
            'workCalendar' => 'SearchMultiSelectField',
        },
    
        ProjectTaskAssignmentSearchRowBasic => {
        },
    
        AccountingPeriodSearchBasic => {
            'allLocked' => 'SearchBooleanField',
            'allowNonGlChanges' => 'SearchBooleanField',
            'apLocked' => 'SearchBooleanField',
            'arLocked' => 'SearchBooleanField',
            'closed' => 'SearchBooleanField',
            'closedOnDate' => 'SearchDateField',
            'endDate' => 'SearchDateField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isAdjust' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'isQuarter' => 'SearchBooleanField',
            'isYear' => 'SearchBooleanField',
            'parent' => 'SearchMultiSelectField',
            'payrollLocked' => 'SearchBooleanField',
            'periodName' => 'SearchStringField',
            'startDate' => 'SearchDateField',
        },
    
        AccountingPeriodSearchRowBasic => {
        },
    
        ContactCategorySearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'private' => 'SearchBooleanField',
            'sync' => 'SearchBooleanField',
        },
    
        ContactCategorySearchRowBasic => {
        },
    
        ContactRoleSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        ContactRoleSearchRowBasic => {
        },
    
        CustomerCategorySearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        CustomerCategorySearchRowBasic => {
        },
    
        CustomerStatusSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'includeInLeadReports' => 'SearchBooleanField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'probability' => 'SearchDoubleField',
        },
    
        CustomerStatusSearchRowBasic => {
        },
    
        ExpenseCategorySearchBasic => {
            'account' => 'SearchMultiSelectField',
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ExpenseCategorySearchRowBasic => {
        },
    
        JobStatusSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        JobStatusSearchRowBasic => {
        },
    
        JobTypeSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'parent' => 'SearchMultiSelectField',
        },
    
        JobTypeSearchRowBasic => {
        },
    
        NoteTypeSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        NoteTypeSearchRowBasic => {
        },
    
        PartnerCategorySearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'parent' => 'SearchMultiSelectField',
        },
    
        PartnerCategorySearchRowBasic => {
        },
    
        PaymentMethodSearchBasic => {
            'account' => 'SearchMultiSelectField',
            'creditCard' => 'SearchBooleanField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDebitCard' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        PaymentMethodSearchRowBasic => {
        },
    
        PriceLevelSearchBasic => {
            'discountPct' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isOnline' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        PriceLevelSearchRowBasic => {
        },
    
        SalesRoleSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        SalesRoleSearchRowBasic => {
        },
    
        TermSearchBasic => {
            'dateDriven' => 'SearchBooleanField',
            'dayDiscountExpires' => 'SearchLongField',
            'dayOfMonthNetDue' => 'SearchLongField',
            'daysUntilExpiry' => 'SearchLongField',
            'daysUntilNetDue' => 'SearchLongField',
            'discountPercent' => 'SearchDoubleField',
            'discountPercentDateDriven' => 'SearchDoubleField',
            'dueNextMonthIfWithinDays' => 'SearchLongField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'preferred' => 'SearchBooleanField',
        },
    
        TermSearchRowBasic => {
        },
    
        VendorCategorySearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isTaxAgency' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        VendorCategorySearchRowBasic => {
        },
    
        WinLossReasonSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        WinLossReasonSearchRowBasic => {
        },
    
        OriginatingLeadSearchBasic => {
            'accountNumber' => 'SearchStringField',
            'availableOffline' => 'SearchBooleanField',
            'balance' => 'SearchDoubleField',
            'boughtAmount' => 'SearchDoubleField',
            'boughtDate' => 'SearchDateField',
            'buyingReason' => 'SearchMultiSelectField',
            'buyingTimeFrame' => 'SearchMultiSelectField',
            'category' => 'SearchMultiSelectField',
            'ccCustomerCode' => 'SearchStringField',
            'ccDefault' => 'SearchBooleanField',
            'ccExpDate' => 'SearchDateField',
            'ccHolderName' => 'SearchStringField',
            'ccNumber' => 'SearchStringField',
            'ccType' => 'SearchMultiSelectField',
            'classBought' => 'SearchMultiSelectField',
            'companyName' => 'SearchStringField',
            'contact' => 'SearchStringField',
            'contribution' => 'SearchLongField',
            'conversionDate' => 'SearchDateField',
            'creditHoldOverride' => 'SearchBooleanField',
            'creditLimit' => 'SearchDoubleField',
            'currency' => 'SearchMultiSelectField',
            'custStage' => 'SearchMultiSelectField',
            'custStatus' => 'SearchMultiSelectField',
            'dateClosed' => 'SearchDateField',
            'daysOverdue' => 'SearchLongField',
            'depositBalance' => 'SearchDoubleField',
            'deptBought' => 'SearchMultiSelectField',
            'emailTransactions' => 'SearchBooleanField',
            'endDate' => 'SearchDateField',
            'entityStatus' => 'SearchMultiSelectField',
            'estimatedBudget' => 'SearchDoubleField',
            'explicitConversion' => 'SearchBooleanField',
            'faxTransactions' => 'SearchBooleanField',
            'firstName' => 'SearchStringField',
            'firstOrderDate' => 'SearchDateField',
            'firstSaleDate' => 'SearchDateField',
            'group' => 'SearchMultiSelectField',
            'groupPricingLevel' => 'SearchMultiSelectField',
            'hasDuplicates' => 'SearchBooleanField',
            'isBudgetApproved' => 'SearchBooleanField',
            'isPerson' => 'SearchBooleanField',
            'isReportedLead' => 'SearchBooleanField',
            'isShipAddress' => 'SearchBooleanField',
            'itemPricingLevel' => 'SearchMultiSelectField',
            'itemPricingUnitPrice' => 'SearchDoubleField',
            'itemsBought' => 'SearchMultiSelectField',
            'itemsOrdered' => 'SearchMultiSelectField',
            'lastName' => 'SearchStringField',
            'leadDate' => 'SearchDateField',
            'leadSource' => 'SearchMultiSelectField',
            'locationBought' => 'SearchMultiSelectField',
            'manualCreditHold' => 'SearchBooleanField',
            'merchantAccount' => 'SearchMultiSelectField',
            'middleName' => 'SearchStringField',
            'onCreditHold' => 'SearchBooleanField',
            'orderedAmount' => 'SearchDoubleField',
            'orderedDate' => 'SearchDateField',
            'otherRelationships' => 'SearchEnumMultiSelectField',
            'overdueBalance' => 'SearchDoubleField',
            'parent' => 'SearchMultiSelectField',
            'parentItemsBought' => 'SearchMultiSelectField',
            'parentItemsOrdered' => 'SearchMultiSelectField',
            'partner' => 'SearchMultiSelectField',
            'partnerContribution' => 'SearchLongField',
            'partnerRole' => 'SearchMultiSelectField',
            'partnerTeamMember' => 'SearchMultiSelectField',
            'pec' => 'SearchStringField',
            'priceLevel' => 'SearchMultiSelectField',
            'pricingGroup' => 'SearchMultiSelectField',
            'pricingItem' => 'SearchMultiSelectField',
            'printTransactions' => 'SearchBooleanField',
            'prospectDate' => 'SearchDateField',
            'pstExempt' => 'SearchBooleanField',
            'reminderDate' => 'SearchDateField',
            'resaleNumber' => 'SearchStringField',
            'role' => 'SearchMultiSelectField',
            'salesReadiness' => 'SearchMultiSelectField',
            'salesRep' => 'SearchMultiSelectField',
            'salesTeamMember' => 'SearchMultiSelectField',
            'salesTeamRole' => 'SearchMultiSelectField',
            'salutation' => 'SearchStringField',
            'shipComplete' => 'SearchBooleanField',
            'shippingItem' => 'SearchMultiSelectField',
            'stage' => 'SearchMultiSelectField',
            'startDate' => 'SearchDateField',
            'subsidBought' => 'SearchMultiSelectField',
            'taxable' => 'SearchBooleanField',
            'terms' => 'SearchMultiSelectField',
            'territory' => 'SearchMultiSelectField',
            'title' => 'SearchStringField',
            'unbilledOrders' => 'SearchDoubleField',
            'url' => 'SearchStringField',
            'vatRegNumber' => 'SearchStringField',
            'webLead' => 'SearchBooleanField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        OriginatingLeadSearchRowBasic => {
        },
    
        UnitsTypeSearchBasic => {
            'abbreviation' => 'SearchStringField',
            'baseUnit' => 'SearchBooleanField',
            'conversionRate' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInActive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'pluralAbbreviation' => 'SearchStringField',
            'pluralName' => 'SearchStringField',
            'unitName' => 'SearchStringField',
        },
    
        UnitsTypeSearchRowBasic => {
        },
    
        CustomListSearchBasic => {
            'description' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'isOrdered' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'owner' => 'SearchMultiSelectField',
            'scriptId' => 'SearchStringField',
        },
    
        CustomListSearchRowBasic => {
        },
    
        PricingGroupSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        PricingGroupSearchRowBasic => {
        },
    
        InventoryNumberSearchBasic => {
            'expirationDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'inventoryNumber' => 'SearchStringField',
            'isOnHand' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'quantityAvailable' => 'SearchDoubleField',
            'quantityInTransit' => 'SearchDoubleField',
            'quantityOnHand' => 'SearchDoubleField',
            'quantityOnOrder' => 'SearchDoubleField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        InventoryNumberSearchRowBasic => {
        },
    
        AppDefinitionSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'name' => 'SearchStringField',
        },
    
        AppDefinitionSearchRowBasic => {
        },
    
        AppPackageSearchBasic => {
            'appDefinition' => 'SearchMultiSelectField',
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'version' => 'SearchStringField',
        },
    
        AppPackageSearchRowBasic => {
        },
    
        NexusSearchBasic => {
            'country' => 'SearchEnumMultiSelectField',
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'state' => 'SearchMultiSelectField',
        },
    
        NexusSearchRowBasic => {
        },
    
        OtherNameCategorySearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
        },
    
        OtherNameCategorySearchRowBasic => {
        },
    
        CustomerMessageSearchBasic => {
            'description' => 'SearchStringField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'name' => 'SearchStringField',
            'preferred' => 'SearchBooleanField',
        },
    
        CustomerMessageSearchRowBasic => {
        },
    
        ItemDemandPlanSearchBasic => {
            'alternateSourceItem' => 'SearchMultiSelectField',
            'analysisDuration' => 'SearchLongField',
            'demandDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'item' => 'SearchMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'location' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'projectionDuration' => 'SearchLongField',
            'projectionInterval' => 'SearchMultiSelectField',
            'projectionMethod' => 'SearchEnumMultiSelectField',
            'projectionStartDate' => 'SearchDateField',
            'quantity' => 'SearchDoubleField',
            'subsidiary' => 'SearchMultiSelectField',
            'units' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ItemDemandPlanSearchRowBasic => {
        },
    
        ItemSupplyPlanSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'item' => 'SearchMultiSelectField',
            'lastModifiedDate' => 'SearchDateField',
            'location' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'orderCreated' => 'SearchBooleanField',
            'orderDate' => 'SearchDateField',
            'orderType' => 'SearchMultiSelectField',
            'quantity' => 'SearchDoubleField',
            'receiptDate' => 'SearchDateField',
            'subsidiary' => 'SearchMultiSelectField',
            'units' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ItemSupplyPlanSearchRowBasic => {
        },
    
        CurrencyRateSearchBasic => {
            'baseCurrency' => 'SearchMultiSelectField',
            'effectiveDate' => 'SearchDateField',
            'exchangeRate' => 'SearchDoubleField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'transactionCurrency' => 'SearchMultiSelectField',
        },
    
        CurrencyRateSearchRowBasic => {
        },
    
        ItemRevisionSearchBasic => {
            'effectiveDate' => 'SearchDateField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'item' => 'SearchMultiSelectField',
            'name' => 'SearchStringField',
            'obsoleteDate' => 'SearchDateField',
        },
    
        ItemRevisionSearchRowBasic => {
        },
    
        CouponCodeSearchBasic => {
            'code' => 'SearchStringField',
            'dateSent' => 'SearchDateField',
            'id' => 'SearchLongField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'promotion' => 'SearchMultiSelectField',
            'recipient' => 'SearchMultiSelectField',
            'useCount' => 'SearchLongField',
            'used' => 'SearchBooleanField',
        },
    
        CouponCodeSearchRowBasic => {
        },
    
        PayrollItemSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'expenseAccount' => 'SearchMultiSelectField',
            'itemTypeNoHierarchy' => 'SearchEnumMultiSelectField',
            'liabilityAccount' => 'SearchMultiSelectField',
            'name' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'vendor' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        PayrollItemSearchRowBasic => {
        },
    
        ManufacturingCostTemplateSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isInactive' => 'SearchBooleanField',
            'item' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'name' => 'SearchStringField',
            'subsidiary' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ManufacturingCostTemplateSearchRowBasic => {
        },
    
        ManufacturingRoutingSearchBasic => {
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'isDefault' => 'SearchBooleanField',
            'isInactive' => 'SearchBooleanField',
            'subsidiary' => 'SearchMultiSelectField',
            'item' => 'SearchMultiSelectField',
            'location' => 'SearchMultiSelectField',
            'manufacturingCostTemplate' => 'SearchMultiSelectField',
            'manufacturingWorkCenter' => 'SearchMultiSelectField',
            'memo' => 'SearchStringField',
            'name' => 'SearchStringField',
            'operationName' => 'SearchStringField',
            'operationYield' => 'SearchDoubleField',
            'runRate' => 'SearchDoubleField',
            'sequence' => 'SearchLongField',
            'setupTime' => 'SearchDoubleField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ManufacturingRoutingSearchRowBasic => {
        },
    
        ManufacturingOperationTaskSearchBasic => {
            'actualRunTime' => 'SearchDoubleField',
            'actualSetupTime' => 'SearchDoubleField',
            'completedQuantity' => 'SearchDoubleField',
            'endDate' => 'SearchDateField',
            'estimatedWork' => 'SearchDoubleField',
            'externalId' => 'SearchMultiSelectField',
            'externalIdString' => 'SearchStringField',
            'id' => 'SearchLongField',
            'inputQuantity' => 'SearchDoubleField',
            'internalId' => 'SearchMultiSelectField',
            'internalIdNumber' => 'SearchLongField',
            'laborResources' => 'SearchLongField',
            'machineResources' => 'SearchLongField',
            'manufacturingCostTemplate' => 'SearchMultiSelectField',
            'manufacturingWorkCenter' => 'SearchMultiSelectField',
            'name' => 'SearchStringField',
            'order' => 'SearchDoubleField',
            'predecessor' => 'SearchMultiSelectField',
            'remainingQuantity' => 'SearchDoubleField',
            'runRate' => 'SearchDoubleField',
            'runTime' => 'SearchDoubleField',
            'sequence' => 'SearchLongField',
            'setupTime' => 'SearchDoubleField',
            'startDate' => 'SearchDateField',
            'status' => 'SearchMultiSelectField',
            'workOrder' => 'SearchMultiSelectField',
            'customFieldList' => 'SearchCustomFieldList',
        },
    
        ManufacturingOperationTaskSearchRowBasic => {
        },
    
    };

}

sub RecordTypes {

    return {
    
        CalendarEventSearch => {
            'basic' => 'CalendarEventSearchBasic',
            'attendeeJoin' => 'EntitySearchBasic',
            'attendeeContactJoin' => 'ContactSearchBasic',
            'attendeeCustomerJoin' => 'CustomerSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        TaskSearch => {
            'basic' => 'TaskSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'companyCustomerJoin' => 'CustomerSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'jobJoin' => 'JobSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'timeJoin' => 'TimeBillSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        PhoneCallSearch => {
            'basic' => 'PhoneCallSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'companyCustomerJoin' => 'CustomerSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        ProjectTaskSearch => {
            'basic' => 'ProjectTaskSearchBasic',
            'jobJoin' => 'JobSearchBasic',
            'predecessorJoin' => 'ProjectTaskSearchBasic',
            'projectTaskAssignmentJoin' => 'ProjectTaskAssignmentSearchBasic',
            'successorJoin' => 'ProjectTaskSearchBasic',
            'timeJoin' => 'TimeBillSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        NoteSearch => {
            'basic' => 'NoteSearchBasic',
            'authorJoin' => 'EmployeeSearchBasic',
            'callJoin' => 'PhoneCallSearchBasic',
            'campaignJoin' => 'CampaignSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'entityJoin' => 'EntitySearchBasic',
            'eventJoin' => 'CalendarEventSearchBasic',
            'issueJoin' => 'IssueSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'partnerJoin' => 'PartnerSearchBasic',
            'solutionJoin' => 'SolutionSearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'vendorJoin' => 'VendorSearchBasic',
        },
    
        MessageSearch => {
            'basic' => 'MessageSearchBasic',
            'attachmentsJoin' => 'FileSearchBasic',
            'authorJoin' => 'EntitySearchBasic',
            'campaignJoin' => 'CampaignSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'entityJoin' => 'EntitySearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'partnerJoin' => 'PartnerSearchBasic',
            'recipientJoin' => 'EntitySearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'vendorJoin' => 'VendorSearchBasic',
        },
    
        ContactSearch => {
            'basic' => 'ContactSearchBasic',
            'callJoin' => 'PhoneCallSearchBasic',
            'campaignResponseJoin' => 'CampaignSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'customerPrimaryJoin' => 'CustomerSearchBasic',
            'eventJoin' => 'CalendarEventSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'jobJoin' => 'JobSearchBasic',
            'jobPrimaryJoin' => 'JobSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'messagesFromJoin' => 'MessageSearchBasic',
            'messagesToJoin' => 'MessageSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'partnerJoin' => 'PartnerSearchBasic',
            'partnerPrimaryJoin' => 'PartnerSearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
            'vendorJoin' => 'VendorSearchBasic',
            'vendorPrimaryJoin' => 'VendorSearchBasic',
        },
    
        CustomerSearch => {
            'basic' => 'CustomerSearchBasic',
            'callJoin' => 'PhoneCallSearchBasic',
            'campaignResponseJoin' => 'CampaignSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'contactPrimaryJoin' => 'ContactSearchBasic',
            'eventJoin' => 'CalendarEventSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'hostedPageJoin' => 'FileSearchBasic',
            'jobJoin' => 'JobSearchBasic',
            'leadSourceJoin' => 'CampaignSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'messagesFromJoin' => 'MessageSearchBasic',
            'messagesToJoin' => 'MessageSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'parentCustomerJoin' => 'CustomerSearchBasic',
            'partnerJoin' => 'PartnerSearchBasic',
            'salesRepJoin' => 'EmployeeSearchBasic',
            'subCustomerJoin' => 'CustomerSearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'timeJoin' => 'TimeBillSearchBasic',
            'topLevelParentJoin' => 'CustomerSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
            'webSiteCategoryJoin' => 'SiteCategorySearchBasic',
            'webSiteItemJoin' => 'ItemSearchBasic',
        },
    
        PartnerSearch => {
            'basic' => 'PartnerSearchBasic',
            'campaignResponseJoin' => 'CampaignSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'contactPrimaryJoin' => 'ContactSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'messagesFromJoin' => 'MessageSearchBasic',
            'messagesToJoin' => 'MessageSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        VendorSearch => {
            'basic' => 'VendorSearchBasic',
            'campaignResponseJoin' => 'CampaignSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'contactPrimaryJoin' => 'ContactSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'messagesFromJoin' => 'MessageSearchBasic',
            'messagesToJoin' => 'MessageSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        EntityGroupSearch => {
            'basic' => 'EntityGroupSearchBasic',
            'groupMemberJoin' => 'EntitySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        JobSearch => {
            'basic' => 'JobSearchBasic',
            'contactPrimaryJoin' => 'ContactSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'projectTaskJoin' => 'ProjectTaskSearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'timeJoin' => 'TimeBillSearchBasic',
        },
    
        CustomerStatusSearch => {
            'basic' => 'CustomerStatusSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        JobStatusSearch => {
            'basic' => 'JobStatusSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        JobTypeSearch => {
            'basic' => 'JobTypeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        OriginatingLeadSearch => {
            'basic' => 'OriginatingLeadSearchBasic',
        },
    
        SupportCaseSearch => {
            'basic' => 'SupportCaseSearchBasic',
            'contactJoin' => 'ContactSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'issueJoin' => 'IssueSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'timeJoin' => 'TimeBillSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        SolutionSearch => {
            'basic' => 'SolutionSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'relatedSolutionJoin' => 'SolutionSearchBasic',
            'topicJoin' => 'TopicSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        TopicSearch => {
            'basic' => 'TopicSearchBasic',
            'solutionJoin' => 'SolutionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        IssueSearch => {
            'basic' => 'IssueSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        AccountSearch => {
            'basic' => 'AccountSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        DepartmentSearch => {
            'basic' => 'DepartmentSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ClassificationSearch => {
            'basic' => 'ClassificationSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        LocationSearch => {
            'basic' => 'LocationSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ItemSearch => {
            'basic' => 'ItemSearchBasic',
            'binNumberJoin' => 'BinSearchBasic',
            'correlatedItemJoin' => 'ItemSearchBasic',
            'effectiveRevisionJoin' => 'ItemRevisionSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'inventoryDetailJoin' => 'InventoryDetailSearchBasic',
            'inventoryLocationJoin' => 'LocationSearchBasic',
            'inventoryNumberJoin' => 'InventoryNumberSearchBasic',
            'memberItemJoin' => 'ItemSearchBasic',
            'obsoleteRevisionJoin' => 'ItemRevisionSearchBasic',
            'parentJoin' => 'ItemSearchBasic',
            'preferredLocationJoin' => 'LocationSearchBasic',
            'preferredVendorJoin' => 'VendorSearchBasic',
            'shopperJoin' => 'CustomerSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
            'vendorJoin' => 'VendorSearchBasic',
        },
    
        BinSearch => {
            'basic' => 'BinSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        SubsidiarySearch => {
            'basic' => 'SubsidiarySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        GiftCertificateSearch => {
            'basic' => 'GiftCertificateSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        AccountingPeriodSearch => {
            'basic' => 'AccountingPeriodSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        ContactCategorySearch => {
            'basic' => 'ContactCategorySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ContactRoleSearch => {
            'basic' => 'ContactRoleSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        CustomerCategorySearch => {
            'basic' => 'CustomerCategorySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ExpenseCategorySearch => {
            'basic' => 'ExpenseCategorySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        NoteTypeSearch => {
            'basic' => 'NoteTypeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        PartnerCategorySearch => {
            'basic' => 'PartnerCategorySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        PaymentMethodSearch => {
            'basic' => 'PaymentMethodSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        PriceLevelSearch => {
            'basic' => 'PriceLevelSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        SalesRoleSearch => {
            'basic' => 'SalesRoleSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        TermSearch => {
            'basic' => 'TermSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        VendorCategorySearch => {
            'basic' => 'VendorCategorySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        WinLossReasonSearch => {
            'basic' => 'WinLossReasonSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        UnitsTypeSearch => {
            'basic' => 'UnitsTypeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        PricingGroupSearch => {
            'basic' => 'PricingGroupSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        InventoryNumberSearch => {
            'basic' => 'InventoryNumberSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        RevRecScheduleSearch => {
            'basic' => 'RevRecScheduleSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        RevRecTemplateSearch => {
            'basic' => 'RevRecTemplateSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        NexusSearch => {
            'basic' => 'NexusSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        OtherNameCategorySearch => {
            'basic' => 'OtherNameCategorySearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        CustomerMessageSearch => {
            'basic' => 'CustomerMessageSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        CurrencyRateSearch => {
            'basic' => 'CurrencyRateSearchBasic',
        },
    
        ItemRevisionSearch => {
            'basic' => 'ItemRevisionSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        OpportunitySearch => {
            'basic' => 'OpportunitySearchBasic',
            'actualJoin' => 'TransactionSearchBasic',
            'callJoin' => 'PhoneCallSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'decisionMakerJoin' => 'ContactSearchBasic',
            'estimateJoin' => 'TransactionSearchBasic',
            'eventJoin' => 'CalendarEventSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'leadSourceJoin' => 'CampaignSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'orderJoin' => 'TransactionSearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'partnerJoin' => 'PartnerSearchBasic',
            'salesRepJoin' => 'EmployeeSearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        TransactionSearch => {
            'basic' => 'TransactionSearchBasic',
            'accountJoin' => 'AccountSearchBasic',
            'accountingPeriodJoin' => 'AccountingPeriodSearchBasic',
            'appliedToTransactionJoin' => 'TransactionSearchBasic',
            'applyingTransactionJoin' => 'TransactionSearchBasic',
            'billingTransactionJoin' => 'TransactionSearchBasic',
            'binNumberJoin' => 'BinSearchBasic',
            'callJoin' => 'PhoneCallSearchBasic',
            'classJoin' => 'ClassificationSearchBasic',
            'cogsPurchaseJoin' => 'TransactionSearchBasic',
            'cogsSaleJoin' => 'TransactionSearchBasic',
            'contactPrimaryJoin' => 'ContactSearchBasic',
            'createdFromJoin' => 'TransactionSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'customerMainJoin' => 'CustomerSearchBasic',
            'departmentJoin' => 'DepartmentSearchBasic',
            'depositTransactionJoin' => 'TransactionSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'eventJoin' => 'CalendarEventSearchBasic',
            'expenseCategoryJoin' => 'ExpenseCategorySearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'fulfillingTransactionJoin' => 'TransactionSearchBasic',
            'inventoryDetailJoin' => 'InventoryDetailSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'itemNumberJoin' => 'InventoryNumberSearchBasic',
            'jobJoin' => 'JobSearchBasic',
            'jobMainJoin' => 'JobSearchBasic',
            'leadSourceJoin' => 'CampaignSearchBasic',
            'locationJoin' => 'LocationSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'opportunityJoin' => 'OpportunitySearchBasic',
            'paidTransactionJoin' => 'TransactionSearchBasic',
            'payingTransactionJoin' => 'TransactionSearchBasic',
            'purchaseOrderJoin' => 'TransactionSearchBasic',
            'requestorJoin' => 'EmployeeSearchBasic',
            'revCommittingTransactionJoin' => 'TransactionSearchBasic',
            'revisionJoin' => 'ItemRevisionSearchBasic',
            'rgPostingTransactionJoin' => 'TransactionSearchBasic',
            'salesOrderJoin' => 'TransactionSearchBasic',
            'salesRepJoin' => 'EmployeeSearchBasic',
            'subsidiaryJoin' => 'SubsidiarySearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
            'vendorJoin' => 'VendorSearchBasic',
        },
    
        BudgetSearch => {
            'basic' => 'BudgetSearchBasic',
        },
    
        CustomRecordSearch => {
            'basic' => 'CustomRecordSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'ownerJoin' => 'EmployeeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        CustomListSearch => {
            'basic' => 'CustomListSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        AppDefinitionSearch => {
            'basic' => 'AppDefinitionSearchBasic',
            'appPackageJoin' => 'AppPackageSearchBasic',
            'creatorJoin' => 'EmployeeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        AppPackageSearch => {
            'basic' => 'AppPackageSearchBasic',
            'appDefinitionJoin' => 'AppDefinitionSearchBasic',
            'creatorJoin' => 'EmployeeSearchBasic',
            'packageFileJoin' => 'FileSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        EmployeeSearch => {
            'basic' => 'EmployeeSearchBasic',
            'campaignResponseJoin' => 'CampaignSearchBasic',
            'departmentJoin' => 'DepartmentSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'locationJoin' => 'LocationSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'messagesFromJoin' => 'MessageSearchBasic',
            'messagesToJoin' => 'MessageSearchBasic',
            'subsidiaryJoin' => 'SubsidiarySearchBasic',
            'timeJoin' => 'TimeBillSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        PayrollItemSearch => {
            'basic' => 'PayrollItemSearchBasic',
        },
    
        FileSearch => {
            'basic' => 'FileSearchBasic',
            'shopperJoin' => 'CustomerSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        FolderSearch => {
            'basic' => 'FolderSearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        SiteCategorySearch => {
            'basic' => 'SiteCategorySearchBasic',
            'shopperJoin' => 'CustomerSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        TimeBillSearch => {
            'basic' => 'TimeBillSearchBasic',
            'callJoin' => 'PhoneCallSearchBasic',
            'caseJoin' => 'SupportCaseSearchBasic',
            'customerJoin' => 'CustomerSearchBasic',
            'employeeJoin' => 'EmployeeSearchBasic',
            'eventJoin' => 'CalendarEventSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'jobJoin' => 'JobSearchBasic',
            'projectTaskJoin' => 'ProjectTaskSearchBasic',
            'taskJoin' => 'TaskSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        CampaignSearch => {
            'basic' => 'CampaignSearchBasic',
            'campaignRecipientJoin' => 'EntitySearchBasic',
            'fileJoin' => 'FileSearchBasic',
            'messagesJoin' => 'MessageSearchBasic',
            'originatingLeadJoin' => 'OriginatingLeadSearchBasic',
            'promotionCodeJoin' => 'PromotionCodeSearchBasic',
            'transactionJoin' => 'TransactionSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
            'userNotesJoin' => 'NoteSearchBasic',
        },
    
        PromotionCodeSearch => {
            'basic' => 'PromotionCodeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        CouponCodeSearch => {
            'basic' => 'CouponCodeSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ItemDemandPlanSearch => {
            'basic' => 'ItemDemandPlanSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'lastAlternateSourceItemJoin' => 'ItemSearchBasic',
            'locationJoin' => 'LocationSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ItemSupplyPlanSearch => {
            'basic' => 'ItemSupplyPlanSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'locationJoin' => 'LocationSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ManufacturingCostTemplateSearch => {
            'basic' => 'ManufacturingCostTemplateSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ManufacturingRoutingSearch => {
            'basic' => 'ManufacturingRoutingSearchBasic',
            'itemJoin' => 'ItemSearchBasic',
            'locationJoin' => 'LocationSearchBasic',
            'manufacturingCostTemplateJoin' => 'ManufacturingCostTemplateSearchBasic',
            'manufacturingWorkCenterJoin' => 'EntityGroupSearchBasic',
            'userJoin' => 'EmployeeSearchBasic',
        },
    
        ManufacturingOperationTaskSearch => {
            'basic' => 'ManufacturingOperationTaskSearchBasic',
        },
    
    };
    
}

sub RecordFields {

    return {
    
        CalendarEvent => {
            'company' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
            'supportCase' => 'core:RecordRef',
            'transaction' => 'core:RecordRef',
            'period' => 'scheduling:long',
            'frequency' => 'schedulingTypes:CalendarEventFrequency',
            'recurrenceDowMaskList' => 'scheduling:RecurrenceDowMaskList',
            'recurrenceDow' => 'schedulingTypes:CalendarEventDow',
            'recurrenceDowim' => 'schedulingTypes:CalendarEventDowim',
            'seriesStartDate' => 'scheduling:dateTime',
            'endByDate' => 'scheduling:dateTime',
            'noEndDate' => 'scheduling:boolean',
            'sendEmail' => 'scheduling:boolean',
            'customForm' => 'core:RecordRef',
            'title' => 'scheduling:string',
            'recurrence' => 'scheduling:string',
            'location' => 'scheduling:string',
            'startDate' => 'scheduling:dateTime',
            'allDayEvent' => 'scheduling:boolean',
            'timedEvent' => 'scheduling:boolean',
            'reminderType' => 'schedulingTypes:CalendarEventReminderType',
            'reminderMinutes' => 'schedulingTypes:CalendarEventReminderMinutes',
            'status' => 'schedulingTypes:CalendarEventStatus',
            'accessLevel' => 'schedulingTypes:CalendarEventAccessLevel',
            'organizer' => 'core:RecordRef',
            'message' => 'scheduling:string',
            'createdDate' => 'scheduling:dateTime',
            'endDate' => 'scheduling:dateTime',
            'exclusionDateList' => 'scheduling:ExclusionDateList',
            'lastModifiedDate' => 'scheduling:dateTime',
            'owner' => 'core:RecordRef',
            'attendeeList' => 'scheduling:CalendarEventAttendeeList',
            'resourceList' => 'scheduling:CalendarEventResourceList',
            'timeItemList' => 'scheduling:CalendarEventTimeItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ExclusionDateList => {
            'exclusionDate' => 'scheduling:dateTime',
        },
    
        RecurrenceDowMaskList => {
            'recurrenceDowMask' => 'schedulingTypes:CalendarEventDow',
        },
    
        CalendarEventAttendee => {
            'sendEmail' => 'scheduling:boolean',
            'attendee' => 'core:RecordRef',
            'response' => 'coreTyp:CalendarEventAttendeeResponse',
            'attendance' => 'schedulingTypes:CalendarEventAttendeeAttendance',
        },
    
        CalendarEventAttendeeList => {
            'attendee' => 'scheduling:CalendarEventAttendee',
        },
    
        CalendarEventResource => {
            'resource' => 'core:RecordRef',
            'location' => 'scheduling:string',
        },
    
        CalendarEventResourceList => {
            'resource' => 'scheduling:CalendarEventResource',
        },
    
        CalendarEventSearchAdvanced => {
            'criteria' => 'scheduling:CalendarEventSearch',
            'columns' => 'scheduling:CalendarEventSearchRow',
        },
    
        CalendarEventSearchRow => {
            'basic' => 'common:CalendarEventSearchRowBasic',
            'attendeeJoin' => 'common:EntitySearchRowBasic',
            'attendeeContactJoin' => 'common:ContactSearchRowBasic',
            'attendeeCustomerJoin' => 'common:CustomerSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        Task => {
            'company' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
            'supportCase' => 'core:RecordRef',
            'transaction' => 'core:RecordRef',
            'milestone' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'title' => 'scheduling:string',
            'assigned' => 'core:RecordRef',
            'sendEmail' => 'scheduling:boolean',
            'timedEvent' => 'scheduling:boolean',
            'estimatedTime' => 'core:Duration',
            'estimatedTimeOverride' => 'core:Duration',
            'actualTime' => 'core:Duration',
            'timeRemaining' => 'core:Duration',
            'percentTimeComplete' => 'scheduling:double',
            'percentComplete' => 'scheduling:double',
            'parent' => 'core:RecordRef',
            'startDate' => 'scheduling:dateTime',
            'endDate' => 'scheduling:dateTime',
            'dueDate' => 'scheduling:dateTime',
            'completedDate' => 'scheduling:dateTime',
            'priority' => 'schedulingTypes:TaskPriority',
            'status' => 'schedulingTypes:TaskStatus',
            'message' => 'scheduling:string',
            'accessLevel' => 'scheduling:boolean',
            'reminderType' => 'schedulingTypes:TaskReminderType',
            'reminderMinutes' => 'schedulingTypes:TaskReminderMinutes',
            'createdDate' => 'scheduling:dateTime',
            'lastModifiedDate' => 'scheduling:dateTime',
            'owner' => 'core:RecordRef',
            'contactList' => 'scheduling:TaskContactList',
            'timeItemList' => 'scheduling:TaskTimeItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        TaskContact => {
            'company' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
        },
    
        TaskContactList => {
            'contact' => 'scheduling:TaskContact',
        },
    
        TaskSearchAdvanced => {
            'criteria' => 'scheduling:TaskSearch',
            'columns' => 'scheduling:TaskSearchRow',
        },
    
        TaskSearchRow => {
            'basic' => 'common:TaskSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'companyCustomerJoin' => 'common:CustomerSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'jobJoin' => 'common:JobSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'timeJoin' => 'common:TimeBillSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        PhoneCall => {
            'message' => 'scheduling:string',
            'company' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
            'supportCase' => 'core:RecordRef',
            'transaction' => 'core:RecordRef',
            'milestone' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'title' => 'scheduling:string',
            'owner' => 'core:RecordRef',
            'assigned' => 'core:RecordRef',
            'sendEmail' => 'scheduling:boolean',
            'startDate' => 'scheduling:dateTime',
            'endDate' => 'scheduling:dateTime',
            'timedEvent' => 'scheduling:boolean',
            'completedDate' => 'scheduling:dateTime',
            'phone' => 'scheduling:string',
            'status' => 'schedulingTypes:PhoneCallStatus',
            'priority' => 'schedulingTypes:PhoneCallPriority',
            'accessLevel' => 'scheduling:boolean',
            'reminderType' => 'schedulingTypes:PhoneCallReminderType',
            'reminderMinutes' => 'schedulingTypes:PhoneCallReminderMinutes',
            'createdDate' => 'scheduling:dateTime',
            'lastModifiedDate' => 'scheduling:dateTime',
            'contactList' => 'scheduling:PhoneCallContactList',
            'timeItemList' => 'scheduling:PhoneCallTimeItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PhoneCallContact => {
            'company' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
            'phone' => 'scheduling:string',
            'email' => 'scheduling:string',
        },
    
        PhoneCallContactList => {
            'contact' => 'scheduling:PhoneCallContact',
        },
    
        PhoneCallSearchAdvanced => {
            'criteria' => 'scheduling:PhoneCallSearch',
            'columns' => 'scheduling:PhoneCallSearchRow',
        },
    
        PhoneCallSearchRow => {
            'basic' => 'common:PhoneCallSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'companyCustomerJoin' => 'common:CustomerSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        ProjectTask => {
            'customForm' => 'core:RecordRef',
            'eventId' => 'core:RecordRef',
            'percentTimeComplete' => 'scheduling:double',
            'title' => 'scheduling:string',
            'company' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
            'order' => 'core:RecordRef',
            'owner' => 'core:RecordRef',
            'parent' => 'core:RecordRef',
            'priority' => 'core:RecordRef',
            'estimatedWork' => 'scheduling:double',
            'estimatedWorkBaseline' => 'scheduling:double',
            'constraintType' => 'schedulingTypes:ProjectTaskConstraintType',
            'startDate' => 'scheduling:dateTime',
            'startDateBaseline' => 'scheduling:dateTime',
            'endDate' => 'scheduling:dateTime',
            'endDateBaseline' => 'scheduling:dateTime',
            'actualWork' => 'scheduling:double',
            'remainingWork' => 'scheduling:double',
            'message' => 'scheduling:string',
            'status' => 'schedulingTypes:ProjectTaskStatus',
            'assigneeList' => 'scheduling:ProjectTaskAssigneeList',
            'predecessorList' => 'scheduling:ProjectTaskPredecessorList',
            'timeItemList' => 'scheduling:ProjectTaskTimeItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ProjectTaskPredecessor => {
            'task' => 'core:RecordRef',
            'type' => 'schedulingTypes:ProjectTaskPredecessorPredecessorType',
            'startDate' => 'scheduling:dateTime',
            'endDate' => 'scheduling:dateTime',
        },
    
        ProjectTaskPredecessorList => {
            'projectTaskPredecessor' => 'scheduling:ProjectTaskPredecessor',
        },
    
        ProjectTaskAssignee => {
            'resource' => 'core:RecordRef',
            'units' => 'scheduling:double',
            'serviceItem' => 'core:RecordRef',
            'estimatedWork' => 'scheduling:double',
            'unitCost' => 'scheduling:double',
            'unitPrice' => 'scheduling:double',
            'cost' => 'scheduling:double',
            'price' => 'scheduling:double',
        },
    
        ProjectTaskAssigneeList => {
            'projectTaskAssignee' => 'scheduling:ProjectTaskAssignee',
        },
    
        ProjectTaskSearchAdvanced => {
            'criteria' => 'scheduling:ProjectTaskSearch',
            'columns' => 'scheduling:ProjectTaskSearchRow',
        },
    
        ProjectTaskSearchRow => {
            'basic' => 'common:ProjectTaskSearchRowBasic',
            'jobJoin' => 'common:JobSearchRowBasic',
            'predecessorJoin' => 'common:ProjectTaskSearchRowBasic',
            'projectTaskAssignmentJoin' => 'common:ProjectTaskAssignmentSearchRowBasic',
            'successorJoin' => 'common:ProjectTaskSearchRowBasic',
            'timeJoin' => 'common:TimeBillSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        PhoneCallTimeItemList => {
            'timeItem' => 'common:TimeItem',
        },
    
        CalendarEventTimeItemList => {
            'timeItem' => 'common:TimeItem',
        },
    
        TaskTimeItemList => {
            'timeItem' => 'common:TimeItem',
        },
    
        ProjectTaskTimeItemList => {
            'timeItem' => 'common:TimeItem',
        },
    
        Note => {
            'title' => 'communication:string',
            'noteType' => 'core:RecordRef',
            'direction' => 'communicationTypes:NoteDirection',
            'noteDate' => 'communication:dateTime',
            'note' => 'communication:string',
            'lastModifiedDate' => 'communication:dateTime',
            'activity' => 'core:RecordRef',
            'author' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'folder' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'media' => 'core:RecordRef',
            'record' => 'core:RecordRef',
            'recordType' => 'core:RecordRef',
            'topic' => 'core:RecordRef',
            'transaction' => 'core:RecordRef',
        },
    
        NoteSearchAdvanced => {
            'criteria' => 'communication:NoteSearch',
            'columns' => 'communication:NoteSearchRow',
        },
    
        NoteSearchRow => {
            'basic' => 'common:NoteSearchRowBasic',
            'authorJoin' => 'common:EmployeeSearchRowBasic',
            'callJoin' => 'common:PhoneCallSearchRowBasic',
            'campaignJoin' => 'common:CampaignSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'entityJoin' => 'common:EntitySearchRowBasic',
            'eventJoin' => 'common:CalendarEventSearchRowBasic',
            'issueJoin' => 'common:IssueSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'partnerJoin' => 'common:PartnerSearchRowBasic',
            'solutionJoin' => 'common:SolutionSearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'vendorJoin' => 'common:VendorSearchRowBasic',
        },
    
        Message => {
            'author' => 'core:RecordRef',
            'recipient' => 'core:RecordRef',
            'cc' => 'communication:string',
            'bcc' => 'communication:string',
            'messageDate' => 'communication:dateTime',
            'recordName' => 'communication:string',
            'recordTypeName' => 'communication:string',
            'subject' => 'communication:string',
            'message' => 'communication:string',
            'emailed' => 'communication:boolean',
            'activity' => 'core:RecordRef',
            'compressAttachments' => 'communication:boolean',
            'incoming' => 'communication:boolean',
            'lastModifiedDate' => 'communication:dateTime',
            'transaction' => 'core:RecordRef',
            'mediaItemList' => 'communication:MessageMediaItemList',
            'dateTime' => 'communication:string',
        },
    
        MessageMediaItemList => {
            'mediaItem' => 'communication:File',
        },
    
        MessageSearchAdvanced => {
            'criteria' => 'communication:MessageSearch',
            'columns' => 'communication:MessageSearchRow',
        },
    
        MessageSearchRow => {
            'basic' => 'common:MessageSearchRowBasic',
            'attachmentsJoin' => 'common:FileSearchRowBasic',
            'authorJoin' => 'common:EntitySearchRowBasic',
            'campaignJoin' => 'common:CampaignSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'entityJoin' => 'common:EntitySearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'partnerJoin' => 'common:PartnerSearchRowBasic',
            'recipientJoin' => 'common:EntitySearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'vendorJoin' => 'common:VendorSearchRowBasic',
        },
    
        Subscriptions => {
            'subscribed' => 'relationships:boolean',
            'subscription' => 'core:RecordRef',
            'lastModifiedDate' => 'relationships:dateTime',
        },
    
        SubscriptionsList => {
            'subscriptions' => 'relationships:Subscriptions',
        },
    
        Contact => {
            'customForm' => 'core:RecordRef',
            'entityId' => 'relationships:string',
            'contactSource' => 'core:RecordRef',
            'company' => 'core:RecordRef',
            'salutation' => 'relationships:string',
            'firstName' => 'relationships:string',
            'middleName' => 'relationships:string',
            'lastName' => 'relationships:string',
            'title' => 'relationships:string',
            'phone' => 'relationships:string',
            'fax' => 'relationships:string',
            'email' => 'relationships:string',
            'defaultAddress' => 'relationships:string',
            'isPrivate' => 'relationships:boolean',
            'isInactive' => 'relationships:boolean',
            'subsidiary' => 'core:RecordRef',
            'phoneticName' => 'relationships:string',
            'categoryList' => 'relationships:CategoryList',
            'altEmail' => 'relationships:string',
            'officePhone' => 'relationships:string',
            'homePhone' => 'relationships:string',
            'mobilePhone' => 'relationships:string',
            'supervisor' => 'core:RecordRef',
            'supervisorPhone' => 'relationships:string',
            'assistant' => 'core:RecordRef',
            'assistantPhone' => 'relationships:string',
            'comments' => 'relationships:string',
            'globalSubscriptionStatus' => 'commonTypes:GlobalSubscriptionStatus',
            'image' => 'core:RecordRef',
            'billPay' => 'relationships:boolean',
            'dateCreated' => 'relationships:dateTime',
            'lastModifiedDate' => 'relationships:dateTime',
            'addressbookList' => 'relationships:ContactAddressbookList',
            'subscriptionsList' => 'relationships:SubscriptionsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CategoryList => {
            'category' => 'core:RecordRef',
        },
    
        ContactAddressbook => {
            'defaultShipping' => 'relationships:boolean',
            'defaultBilling' => 'relationships:boolean',
            'label' => 'relationships:string',
            'attention' => 'relationships:string',
            'addressee' => 'relationships:string',
            'phone' => 'relationships:string',
            'addr1' => 'relationships:string',
            'addr2' => 'relationships:string',
            'addr3' => 'relationships:string',
            'city' => 'relationships:string',
            'zip' => 'relationships:string',
            'country' => 'commonTyp:Country',
            'addrText' => 'relationships:string',
            'override' => 'relationships:boolean',
            'internalId' => 'relationships:string',
            'state' => 'relationships:string',
        },
    
        ContactAddressbookList => {
            'addressbook' => 'relationships:ContactAddressbook',
        },
    
        ContactSearchAdvanced => {
            'criteria' => 'relationships:ContactSearch',
            'columns' => 'relationships:ContactSearchRow',
        },
    
        ContactSearchRow => {
            'basic' => 'common:ContactSearchRowBasic',
            'callJoin' => 'common:PhoneCallSearchRowBasic',
            'campaignResponseJoin' => 'common:CampaignSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'customerPrimaryJoin' => 'common:CustomerSearchRowBasic',
            'eventJoin' => 'common:CalendarEventSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'jobJoin' => 'common:JobSearchRowBasic',
            'jobPrimaryJoin' => 'common:JobSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'messagesFromJoin' => 'common:MessageSearchRowBasic',
            'messagesToJoin' => 'common:MessageSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'partnerJoin' => 'common:PartnerSearchRowBasic',
            'partnerPrimaryJoin' => 'common:PartnerSearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
            'vendorJoin' => 'common:VendorSearchRowBasic',
            'vendorPrimaryJoin' => 'common:VendorSearchRowBasic',
        },
    
        Customer => {
            'customForm' => 'core:RecordRef',
            'entityId' => 'relationships:string',
            'altName' => 'relationships:string',
            'isPerson' => 'relationships:boolean',
            'phoneticName' => 'relationships:string',
            'salutation' => 'relationships:string',
            'firstName' => 'relationships:string',
            'middleName' => 'relationships:string',
            'lastName' => 'relationships:string',
            'companyName' => 'relationships:string',
            'entityStatus' => 'core:RecordRef',
            'parent' => 'core:RecordRef',
            'phone' => 'relationships:string',
            'fax' => 'relationships:string',
            'email' => 'relationships:string',
            'url' => 'relationships:string',
            'defaultAddress' => 'relationships:string',
            'isInactive' => 'relationships:boolean',
            'category' => 'core:RecordRef',
            'title' => 'relationships:string',
            'printOnCheckAs' => 'relationships:string',
            'altPhone' => 'relationships:string',
            'homePhone' => 'relationships:string',
            'mobilePhone' => 'relationships:string',
            'altEmail' => 'relationships:string',
            'language' => 'commonTypes:Language',
            'comments' => 'relationships:string',
            'numberFormat' => 'relationshipsTypes:CustomerNumberFormat',
            'negativeNumberFormat' => 'relationshipsTypes:CustomerNegativeNumberFormat',
            'dateCreated' => 'relationships:dateTime',
            'image' => 'core:RecordRef',
            'emailPreference' => 'relationshipsTypes:EmailPreference',
            'subsidiary' => 'core:RecordRef',
            'representingSubsidiary' => 'core:RecordRef',
            'salesRep' => 'core:RecordRef',
            'territory' => 'core:RecordRef',
            'contribPct' => 'relationships:string',
            'partner' => 'core:RecordRef',
            'salesGroup' => 'core:RecordRef',
            'vatRegNumber' => 'relationships:string',
            'accountNumber' => 'relationships:string',
            'taxExempt' => 'relationships:boolean',
            'terms' => 'core:RecordRef',
            'creditLimit' => 'relationships:double',
            'creditHoldOverride' => 'relationshipsTypes:CustomerCreditHoldOverride',
            'overrideCurrencyFormat' => 'relationships:boolean',
            'displaySymbol' => 'relationships:string',
            'symbolPlacement' => 'commonTypes:CurrencySymbolPlacement',
            'balance' => 'relationships:double',
            'overdueBalance' => 'relationships:double',
            'daysOverdue' => 'relationships:long',
            'unbilledOrders' => 'relationships:double',
            'consolUnbilledOrders' => 'relationships:double',
            'consolOverdueBalance' => 'relationships:double',
            'consolDepositBalance' => 'relationships:double',
            'consolBalance' => 'relationships:double',
            'consolAging' => 'relationships:double',
            'consolDaysOverdue' => 'relationships:long',
            'priceLevel' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'prefCCProcessor' => 'core:RecordRef',
            'depositBalance' => 'relationships:double',
            'shipComplete' => 'relationships:boolean',
            'taxable' => 'relationships:boolean',
            'taxItem' => 'core:RecordRef',
            'resaleNumber' => 'relationships:string',
            'aging' => 'relationships:double',
            'startDate' => 'relationships:dateTime',
            'endDate' => 'relationships:dateTime',
            'reminderDays' => 'relationships:long',
            'shippingItem' => 'core:RecordRef',
            'thirdPartyAcct' => 'relationships:string',
            'thirdPartyZipcode' => 'relationships:string',
            'thirdPartyCountry' => 'commonTypes:Country',
            'giveAccess' => 'relationships:boolean',
            'estimatedBudget' => 'relationships:double',
            'accessRole' => 'core:RecordRef',
            'sendEmail' => 'relationships:boolean',
            'password' => 'relationships:string',
            'password2' => 'relationships:string',
            'requirePwdChange' => 'relationships:boolean',
            'campaignCategory' => 'core:RecordRef',
            'leadSource' => 'core:RecordRef',
            'receivablesAccount' => 'core:RecordRef',
            'drAccount' => 'core:RecordRef',
            'fxAccount' => 'core:RecordRef',
            'webLead' => 'relationships:string',
            'referrer' => 'relationships:string',
            'keywords' => 'relationships:string',
            'clickStream' => 'relationships:string',
            'lastPageVisited' => 'relationships:string',
            'visits' => 'relationships:long',
            'firstVisit' => 'relationships:dateTime',
            'lastVisit' => 'relationships:dateTime',
            'billPay' => 'relationships:boolean',
            'openingBalance' => 'relationships:double',
            'lastModifiedDate' => 'relationships:dateTime',
            'openingBalanceDate' => 'relationships:dateTime',
            'openingBalanceAccount' => 'core:RecordRef',
            'stage' => 'relationshipsTypes:CustomerStage',
            'emailTransactions' => 'relationships:boolean',
            'printTransactions' => 'relationships:boolean',
            'faxTransactions' => 'relationships:boolean',
            'syncPartnerTeams' => 'relationships:boolean',
            'isBudgetApproved' => 'relationships:boolean',
            'globalSubscriptionStatus' => 'commonTypes:GlobalSubscriptionStatus',
            'salesReadiness' => 'core:RecordRef',
            'salesTeamList' => 'relationships:CustomerSalesTeamList',
            'buyingReason' => 'core:RecordRef',
            'downloadList' => 'relationships:CustomerDownloadList',
            'buyingTimeFrame' => 'core:RecordRef',
            'addressbookList' => 'relationships:CustomerAddressbookList',
            'subscriptionsList' => 'relationships:SubscriptionsList',
            'contactRolesList' => 'relationships:ContactAccessRolesList',
            'currencyList' => 'relationships:CustomerCurrencyList',
            'creditCardsList' => 'relationships:CustomerCreditCardsList',
            'partnersList' => 'relationships:CustomerPartnersList',
            'groupPricingList' => 'relationships:CustomerGroupPricingList',
            'itemPricingList' => 'relationships:CustomerItemPricingList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CustomerDownload => {
            'file' => 'core:RecordRef',
            'licenseCode' => 'relationships:string',
            'remainingDownloads' => 'relationships:long',
            'expiration' => 'relationships:dateTime',
        },
    
        CustomerDownloadList => {
            'download' => 'relationships:CustomerDownload',
        },
    
        ContactAccessRoles => {
            'giveAccess' => 'relationships:boolean',
            'contact' => 'core:RecordRef',
            'email' => 'relationships:string',
            'role' => 'core:RecordRef',
            'password' => 'relationships:string',
            'password2' => 'relationships:string',
            'sendEmail' => 'relationships:boolean',
        },
    
        ContactAccessRolesList => {
            'contactRoles' => 'relationships:ContactAccessRoles',
        },
    
        CustomerSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'relationships:boolean',
            'contribution' => 'relationships:double',
        },
    
        CustomerSalesTeamList => {
            'salesTeam' => 'relationships:CustomerSalesTeam',
        },
    
        CustomerAddressbook => {
            'defaultShipping' => 'relationships:boolean',
            'defaultBilling' => 'relationships:boolean',
            'isResidential' => 'relationships:boolean',
            'label' => 'relationships:string',
            'attention' => 'relationships:string',
            'addressee' => 'relationships:string',
            'phone' => 'relationships:string',
            'addr1' => 'relationships:string',
            'addr2' => 'relationships:string',
            'addr3' => 'relationships:string',
            'city' => 'relationships:string',
            'zip' => 'relationships:string',
            'country' => 'commonTyp:Country',
            'addrText' => 'relationships:string',
            'override' => 'relationships:boolean',
            'internalId' => 'relationships:string',
            'state' => 'relationships:string',
        },
    
        CustomerAddressbookList => {
            'addressbook' => 'relationships:CustomerAddressbook',
        },
    
        CustomerCreditCards => {
            'internalId' => 'relationships:string',
            'ccNumber' => 'relationships:string',
            'ccExpireDate' => 'relationships:dateTime',
            'ccName' => 'relationships:string',
            'paymentMethod' => 'core:RecordRef',
            'debitcardIssueNo' => 'relationships:string',
            'ccMemo' => 'relationships:string',
            'validfrom' => 'relationships:dateTime',
            'ccDefault' => 'relationships:boolean',
        },
    
        CustomerCreditCardsList => {
            'creditCards' => 'relationships:CustomerCreditCards',
        },
    
        CustomerGroupPricing => {
            'group' => 'core:RecordRef',
            'level' => 'core:RecordRef',
        },
    
        CustomerGroupPricingList => {
            'groupPricing' => 'relationships:CustomerGroupPricing',
        },
    
        CustomerItemPricing => {
            'item' => 'core:RecordRef',
            'level' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'price' => 'relationships:double',
        },
    
        CustomerItemPricingList => {
            'itemPricing' => 'relationships:CustomerItemPricing',
        },
    
        CustomerPartnersList => {
            'partners' => 'common:Partners',
        },
    
        CustomerSearchAdvanced => {
            'criteria' => 'relationships:CustomerSearch',
            'columns' => 'relationships:CustomerSearchRow',
        },
    
        CustomerSearchRow => {
            'basic' => 'common:CustomerSearchRowBasic',
            'callJoin' => 'common:PhoneCallSearchRowBasic',
            'campaignResponseJoin' => 'common:CampaignSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'contactPrimaryJoin' => 'common:ContactSearchRowBasic',
            'eventJoin' => 'common:CalendarEventSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'hostedPageJoin' => 'common:FileSearchRowBasic',
            'jobJoin' => 'common:JobSearchRowBasic',
            'leadSourceJoin' => 'common:CampaignSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'messagesFromJoin' => 'common:MessageSearchRowBasic',
            'messagesToJoin' => 'common:MessageSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'parentCustomerJoin' => 'common:CustomerSearchRowBasic',
            'partnerJoin' => 'common:PartnerSearchRowBasic',
            'salesRepJoin' => 'common:EmployeeSearchRowBasic',
            'subCustomerJoin' => 'common:CustomerSearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'timeJoin' => 'common:TimeBillSearchRowBasic',
            'topLevelParentJoin' => 'common:CustomerSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
            'webSiteCategoryJoin' => 'common:SiteCategorySearchRowBasic',
            'webSiteItemJoin' => 'common:ItemSearchRowBasic',
        },
    
        CustomerStatus => {
            'name' => 'relationships:string',
            'stage' => 'relationshipsTypes:CustomerStatusStage',
            'probability' => 'relationships:double',
            'description' => 'relationships:string',
            'includeInLeadReports' => 'relationships:boolean',
            'isInactive' => 'relationships:boolean',
        },
    
        Partner => {
            'customForm' => 'core:RecordRef',
            'entityId' => 'relationships:string',
            'altName' => 'relationships:string',
            'partnerCode' => 'relationships:string',
            'isPerson' => 'relationships:boolean',
            'phoneticName' => 'relationships:string',
            'salutation' => 'relationships:string',
            'firstName' => 'relationships:string',
            'middleName' => 'relationships:string',
            'lastName' => 'relationships:string',
            'companyName' => 'relationships:string',
            'parent' => 'core:RecordRef',
            'phone' => 'relationships:string',
            'fax' => 'relationships:string',
            'email' => 'relationships:string',
            'url' => 'relationships:string',
            'defaultAddress' => 'relationships:string',
            'isInactive' => 'relationships:boolean',
            'lastModifiedDate' => 'relationships:dateTime',
            'dateCreated' => 'relationships:dateTime',
            'globalSubscriptionStatus' => 'commonTypes:GlobalSubscriptionStatus',
            'referringUrl' => 'relationships:string',
            'roleList' => 'core:RecordRefList',
            'categoryList' => 'relationships:CategoryList',
            'title' => 'relationships:string',
            'printOnCheckAs' => 'relationships:string',
            'taxIdNum' => 'relationships:string',
            'vatRegNumber' => 'relationships:string',
            'comments' => 'relationships:string',
            'bcn' => 'relationships:string',
            'image' => 'core:RecordRef',
            'taxFractionUnit' => 'relationshipsTypes:TaxFractionUnit',
            'emailPreference' => 'relationshipsTypes:EmailPreference',
            'taxRounding' => 'relationshipsTypes:TaxRounding',
            'department' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'homePhone' => 'relationships:string',
            'mobilePhone' => 'relationships:string',
            'altEmail' => 'relationships:string',
            'giveAccess' => 'relationships:boolean',
            'accessRole' => 'core:RecordRef',
            'sendEmail' => 'relationships:boolean',
            'password' => 'relationships:string',
            'password2' => 'relationships:string',
            'requirePwdChange' => 'relationships:boolean',
            'subPartnerLogin' => 'relationships:boolean',
            'loginAs' => 'relationships:string',
            'eligibleForCommission' => 'relationships:boolean',
            'contactRolesList' => 'relationships:ContactAccessRolesList',
            'promoCodeList' => 'relationships:PartnerPromoCodeList',
            'addressbookList' => 'relationships:PartnerAddressbookList',
            'subscriptionsList' => 'relationships:SubscriptionsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PartnerPromoCode => {
            'promoCode' => 'core:RecordRef',
            'discount' => 'relationships:string',
            'endDate' => 'relationships:dateTime',
        },
    
        PartnerPromoCodeList => {
            'promoCode' => 'relationships:PartnerPromoCode',
        },
    
        PartnerAddressbook => {
            'defaultShipping' => 'relationships:boolean',
            'defaultBilling' => 'relationships:boolean',
            'label' => 'relationships:string',
            'attention' => 'relationships:string',
            'addressee' => 'relationships:string',
            'phone' => 'relationships:string',
            'addr1' => 'relationships:string',
            'addr2' => 'relationships:string',
            'addr3' => 'relationships:string',
            'city' => 'relationships:string',
            'zip' => 'relationships:string',
            'country' => 'commonTyp:Country',
            'addrText' => 'relationships:string',
            'override' => 'relationships:boolean',
            'internalId' => 'relationships:string',
            'state' => 'relationships:string',
        },
    
        PartnerAddressbookList => {
            'addressbook' => 'relationships:PartnerAddressbook',
        },
    
        PartnerSearchAdvanced => {
            'criteria' => 'relationships:PartnerSearch',
            'columns' => 'relationships:PartnerSearchRow',
        },
    
        PartnerSearchRow => {
            'basic' => 'common:PartnerSearchRowBasic',
            'campaignResponseJoin' => 'common:CampaignSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'contactPrimaryJoin' => 'common:ContactSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'messagesFromJoin' => 'common:MessageSearchRowBasic',
            'messagesToJoin' => 'common:MessageSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        Vendor => {
            'customForm' => 'core:RecordRef',
            'entityId' => 'relationships:string',
            'altName' => 'relationships:string',
            'isPerson' => 'relationships:boolean',
            'phoneticName' => 'relationships:string',
            'salutation' => 'relationships:string',
            'firstName' => 'relationships:string',
            'middleName' => 'relationships:string',
            'lastName' => 'relationships:string',
            'companyName' => 'relationships:string',
            'phone' => 'relationships:string',
            'fax' => 'relationships:string',
            'email' => 'relationships:string',
            'url' => 'relationships:string',
            'defaultAddress' => 'relationships:string',
            'isInactive' => 'relationships:boolean',
            'lastModifiedDate' => 'relationships:dateTime',
            'dateCreated' => 'relationships:dateTime',
            'category' => 'core:RecordRef',
            'title' => 'relationships:string',
            'printOnCheckAs' => 'relationships:string',
            'altPhone' => 'relationships:string',
            'homePhone' => 'relationships:string',
            'mobilePhone' => 'relationships:string',
            'altEmail' => 'relationships:string',
            'comments' => 'relationships:string',
            'globalSubscriptionStatus' => 'commonTypes:GlobalSubscriptionStatus',
            'image' => 'core:RecordRef',
            'emailPreference' => 'relationshipsTypes:EmailPreference',
            'subsidiary' => 'core:RecordRef',
            'representingSubsidiary' => 'core:RecordRef',
            'accountNumber' => 'relationships:string',
            'legalName' => 'relationships:string',
            'vatRegNumber' => 'relationships:string',
            'expenseAccount' => 'core:RecordRef',
            'payablesAccount' => 'core:RecordRef',
            'terms' => 'core:RecordRef',
            'creditLimit' => 'relationships:double',
            'balancePrimary' => 'relationships:double',
            'openingBalance' => 'relationships:double',
            'openingBalanceDate' => 'relationships:dateTime',
            'openingBalanceAccount' => 'core:RecordRef',
            'balance' => 'relationships:double',
            'unbilledOrdersPrimary' => 'relationships:double',
            'bcn' => 'relationships:string',
            'unbilledOrders' => 'relationships:double',
            'currency' => 'core:RecordRef',
            'is1099Eligible' => 'relationships:boolean',
            'isJobResourceVend' => 'relationships:boolean',
            'laborCost' => 'relationships:double',
            'workCalendar' => 'core:RecordRef',
            'taxIdNum' => 'relationships:string',
            'taxItem' => 'core:RecordRef',
            'giveAccess' => 'relationships:boolean',
            'sendEmail' => 'relationships:boolean',
            'billPay' => 'relationships:boolean',
            'isAccountant' => 'relationships:boolean',
            'password' => 'relationships:string',
            'password2' => 'relationships:string',
            'requirePwdChange' => 'relationships:boolean',
            'eligibleForCommission' => 'relationships:boolean',
            'emailTransactions' => 'relationships:boolean',
            'printTransactions' => 'relationships:boolean',
            'faxTransactions' => 'relationships:boolean',
            'pricingScheduleList' => 'relationships:VendorPricingScheduleList',
            'subscriptionsList' => 'relationships:SubscriptionsList',
            'addressbookList' => 'relationships:VendorAddressbookList',
            'currencyList' => 'relationships:VendorCurrencyList',
            'rolesList' => 'relationships:VendorRolesList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorPricingSchedule => {
            'scheduleName' => 'relationships:string',
            'scheduleDiscount' => 'relationships:double',
        },
    
        VendorPricingScheduleList => {
            'pricingSchedule' => 'relationships:VendorPricingSchedule',
        },
    
        VendorAddressbook => {
            'defaultShipping' => 'relationships:boolean',
            'defaultBilling' => 'relationships:boolean',
            'label' => 'relationships:string',
            'attention' => 'relationships:string',
            'addressee' => 'relationships:string',
            'phone' => 'relationships:string',
            'addr1' => 'relationships:string',
            'addr2' => 'relationships:string',
            'addr3' => 'relationships:string',
            'city' => 'relationships:string',
            'zip' => 'relationships:string',
            'country' => 'commonTyp:Country',
            'addrText' => 'relationships:string',
            'override' => 'relationships:boolean',
            'internalId' => 'relationships:string',
            'state' => 'relationships:string',
        },
    
        VendorAddressbookList => {
            'addressbook' => 'relationships:VendorAddressbook',
        },
    
        VendorRoles => {
            'selectedRole' => 'core:RecordRef',
        },
    
        VendorRolesList => {
            'roles' => 'relationships:VendorRoles',
        },
    
        VendorSearchAdvanced => {
            'criteria' => 'relationships:VendorSearch',
            'columns' => 'relationships:VendorSearchRow',
        },
    
        VendorSearchRow => {
            'basic' => 'common:VendorSearchRowBasic',
            'campaignResponseJoin' => 'common:CampaignSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'contactPrimaryJoin' => 'common:ContactSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'messagesFromJoin' => 'common:MessageSearchRowBasic',
            'messagesToJoin' => 'common:MessageSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        EntityGroup => {
            'groupName' => 'relationships:string',
            'groupType' => 'relationshipsTypes:EntityGroupType',
            'email' => 'relationships:string',
            'groupOwner' => 'core:RecordRef',
            'isSavedSearch' => 'relationships:boolean',
            'parentGroupType' => 'relationshipsTypes:EntityGroupType',
            'savedSearch' => 'core:RecordRef',
            'isSalesTeam' => 'relationships:boolean',
            'comments' => 'relationships:string',
            'isPrivate' => 'relationships:boolean',
            'restrictionGroup' => 'core:RecordRef',
            'isInactive' => 'relationships:boolean',
            'isSalesRep' => 'relationships:boolean',
            'isSupportRep' => 'relationships:boolean',
            'isProductTeam' => 'relationships:boolean',
            'isFunctionalTeam' => 'relationships:boolean',
            'issueRole' => 'core:RecordRef',
            'isManufacturingWorkCenter' => 'relationships:boolean',
            'calendarName' => 'relationships:string',
            'calendarStartTime' => 'relationshipsTypes:EntityGroupDailyTime',
            'calendarEndTime' => 'relationshipsTypes:EntityGroupDailyTime',
            'calendarDefaultView' => 'relationshipsTypes:EntityGroupDefView',
            'calendarPeriod' => 'relationshipsTypes:EntityGroupPeriodSize',
            'subsidiary' => 'core:RecordRef',
            'machineResources' => 'relationships:long',
            'laborResources' => 'relationships:long',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        EntityGroupSearchAdvanced => {
            'criteria' => 'relationships:EntityGroupSearch',
            'columns' => 'relationships:EntityGroupSearchRow',
        },
    
        EntityGroupSearchRow => {
            'basic' => 'common:EntityGroupSearchRowBasic',
            'groupMemberJoin' => 'common:EntitySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Job => {
            'customForm' => 'core:RecordRef',
            'entityId' => 'relationships:string',
            'altName' => 'relationships:string',
            'companyName' => 'relationships:string',
            'phoneticName' => 'relationships:string',
            'entityStatus' => 'core:RecordRef',
            'defaultAddress' => 'relationships:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'relationships:boolean',
            'lastModifiedDate' => 'relationships:dateTime',
            'billPay' => 'relationships:boolean',
            'dateCreated' => 'relationships:dateTime',
            'category' => 'core:RecordRef',
            'workplace' => 'core:RecordRef',
            'language' => 'core:RecordRef',
            'comments' => 'relationships:string',
            'accountNumber' => 'relationships:string',
            'currency' => 'core:RecordRef',
            'fxRate' => 'relationships:double',
            'startDate' => 'relationships:dateTime',
            'endDate' => 'relationships:dateTime',
            'phone' => 'relationships:string',
            'altPhone' => 'relationships:string',
            'calculatedEndDate' => 'relationships:dateTime',
            'calculatedEndDateBaseline' => 'relationships:dateTime',
            'startDateBaseline' => 'relationships:dateTime',
            'projectedEndDate' => 'relationships:dateTime',
            'projectedEndDateBaseline' => 'relationships:dateTime',
            'lastBaselineDate' => 'relationships:dateTime',
            'jobType' => 'core:RecordRef',
            'percentComplete' => 'relationships:double',
            'estimatedCost' => 'relationships:double',
            'estimatedRevenue' => 'relationships:double',
            'estimatedTime' => 'core:Duration',
            'estimatedTimeOverride' => 'core:Duration',
            'fax' => 'relationships:string',
            'email' => 'relationships:string',
            'emailPreference' => 'relationshipsTypes:EmailPreference',
            'openingBalance' => 'relationships:double',
            'openingBalanceDate' => 'relationships:dateTime',
            'openingBalanceAccount' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'jobBillingType' => 'relationshipsTypes:JobBillingType',
            'billingSchedule' => 'core:RecordRef',
            'jobItem' => 'core:RecordRef',
            'percentTimeComplete' => 'relationships:double',
            'actualTime' => 'core:Duration',
            'allowTime' => 'relationships:boolean',
            'timeRemaining' => 'core:Duration',
            'limitTimeToAssignees' => 'relationships:boolean',
            'estimatedLaborCost' => 'relationships:double',
            'estimatedLaborCostBaseline' => 'relationships:double',
            'estimateRevRecTemplate' => 'core:RecordRef',
            'estimatedLaborRevenue' => 'relationships:double',
            'estimatedGrossProfit' => 'relationships:double',
            'estimatedGrossProfitPercent' => 'relationships:double',
            'allowAllResourcesForTasks' => 'relationships:boolean',
            'jobPrice' => 'relationships:double',
            'isUtilizedTime' => 'relationships:boolean',
            'isProductiveTime' => 'relationships:boolean',
            'isExemptTime' => 'relationships:boolean',
            'materializeTime' => 'relationships:boolean',
            'allowExpenses' => 'relationships:boolean',
            'allocatePayrollExpenses' => 'relationships:boolean',
            'includeCrmTasksInTotals' => 'relationships:boolean',
            'globalSubscriptionStatus' => 'commonTypes:GlobalSubscriptionStatus',
            'jobResourcesList' => 'relationships:JobResourcesList',
            'addressbookList' => 'relationships:JobAddressbookList',
            'milestonesList' => 'relationships:JobMilestonesList',
            'creditCardsList' => 'relationships:JobCreditCardsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        JobAddressbook => {
            'defaultShipping' => 'relationships:boolean',
            'defaultBilling' => 'relationships:boolean',
            'isResidential' => 'relationships:boolean',
            'label' => 'relationships:string',
            'attention' => 'relationships:string',
            'addressee' => 'relationships:string',
            'phone' => 'relationships:string',
            'addr1' => 'relationships:string',
            'addr2' => 'relationships:string',
            'addr3' => 'relationships:string',
            'city' => 'relationships:string',
            'zip' => 'relationships:string',
            'country' => 'commonTyp:Country',
            'addrText' => 'relationships:string',
            'override' => 'relationships:boolean',
            'internalId' => 'relationships:string',
            'state' => 'relationships:string',
        },
    
        JobAddressbookList => {
            'addressbook' => 'relationships:JobAddressbook',
        },
    
        JobResources => {
            'jobResource' => 'core:RecordRef',
            'email' => 'relationships:string',
            'role' => 'core:RecordRef',
        },
    
        JobResourcesList => {
            'jobResources' => 'relationships:JobResources',
        },
    
        JobMilestones => {
            'milestoneName' => 'relationships:string',
            'milestoneOrder' => 'relationships:string',
            'milestoneEstComplete' => 'relationships:dateTime',
            'milestoneCompleted' => 'relationships:boolean',
            'milestoneComments' => 'relationships:string',
        },
    
        JobMilestonesList => {
            'milestones' => 'relationships:JobMilestones',
        },
    
        JobCreditCards => {
            'internalId' => 'relationships:string',
            'ccNumber' => 'relationships:string',
            'ccExpireDate' => 'relationships:dateTime',
            'ccName' => 'relationships:string',
            'paymentMethod' => 'core:RecordRef',
            'ccMemo' => 'relationships:string',
            'ccDefault' => 'relationships:boolean',
            'debitCardIssueNo' => 'relationships:string',
            'validFrom' => 'relationships:dateTime',
        },
    
        JobCreditCardsList => {
            'creditCards' => 'relationships:JobCreditCards',
        },
    
        JobSearchAdvanced => {
            'criteria' => 'relationships:JobSearch',
            'columns' => 'relationships:JobSearchRow',
        },
    
        JobSearchRow => {
            'basic' => 'common:JobSearchRowBasic',
            'contactPrimaryJoin' => 'common:ContactSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'projectTaskJoin' => 'common:ProjectTaskSearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'timeJoin' => 'common:TimeBillSearchRowBasic',
        },
    
        JobType => {
            'name' => 'relationships:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'relationships:boolean',
        },
    
        JobStatus => {
            'name' => 'relationships:string',
            'description' => 'relationships:string',
            'isInactive' => 'relationships:boolean',
        },
    
        CustomerStatusSearchAdvanced => {
            'criteria' => 'relationships:CustomerStatusSearch',
            'columns' => 'relationships:CustomerStatusSearchRow',
        },
    
        CustomerStatusSearchRow => {
            'basic' => 'common:CustomerStatusSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        JobStatusSearchAdvanced => {
            'criteria' => 'relationships:JobStatusSearch',
            'columns' => 'relationships:JobStatusSearchRow',
        },
    
        JobStatusSearchRow => {
            'basic' => 'common:JobStatusSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        JobTypeSearchAdvanced => {
            'criteria' => 'relationships:JobTypeSearch',
            'columns' => 'relationships:JobTypeSearchRow',
        },
    
        JobTypeSearchRow => {
            'basic' => 'common:JobTypeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        OriginatingLeadSearchRow => {
            'basic' => 'common:OriginatingLeadSearchRowBasic',
        },
    
        CustomerCurrency => {
            'currency' => 'core:RecordRef',
            'balance' => 'relationships:double',
            'consolBalance' => 'relationships:double',
            'depositBalance' => 'relationships:double',
            'consolDepositBalance' => 'relationships:double',
            'overdueBalance' => 'relationships:double',
            'consolOverdueBalance' => 'relationships:double',
            'unbilledOrders' => 'relationships:double',
            'consolUnbilledOrders' => 'relationships:double',
            'overrideCurrencyFormat' => 'relationships:boolean',
            'displaySymbol' => 'relationships:string',
            'symbolPlacement' => 'commonTyp:CurrencySymbolPlacement',
        },
    
        CustomerCurrencyList => {
            'currency' => 'relationships:CustomerCurrency',
        },
    
        VendorCurrency => {
            'currency' => 'core:RecordRef',
            'balance' => 'relationships:double',
            'unbilledOrders' => 'relationships:double',
        },
    
        VendorCurrencyList => {
            'vendorCurrency' => 'relationships:VendorCurrency',
        },
    
        SupportCase => {
            'escalationMessage' => 'support:string',
            'lastReopenedDate' => 'support:dateTime',
            'endDate' => 'support:dateTime',
            'incomingMessage' => 'support:string',
            'insertSolution' => 'core:RecordRef',
            'outgoingMessage' => 'support:string',
            'searchSolution' => 'support:string',
            'emailForm' => 'support:boolean',
            'newSolutionFromMsg' => 'support:string',
            'internalOnly' => 'support:boolean',
            'customForm' => 'core:RecordRef',
            'title' => 'support:string',
            'caseNumber' => 'support:string',
            'startDate' => 'support:dateTime',
            'createdDate' => 'support:dateTime',
            'lastModifiedDate' => 'support:dateTime',
            'lastMessageDate' => 'support:dateTime',
            'company' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'contact' => 'core:RecordRef',
            'email' => 'support:string',
            'phone' => 'support:string',
            'product' => 'core:RecordRef',
            'module' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'serialNumber' => 'core:RecordRef',
            'inboundEmail' => 'support:string',
            'issue' => 'core:RecordRef',
            'status' => 'core:RecordRef',
            'isInactive' => 'support:boolean',
            'priority' => 'core:RecordRef',
            'origin' => 'core:RecordRef',
            'category' => 'core:RecordRef',
            'assigned' => 'core:RecordRef',
            'helpDesk' => 'support:boolean',
            'emailEmployeesList' => 'support:EmailEmployeesList',
            'escalateToList' => 'support:SupportCaseEscalateToList',
            'timeItemList' => 'support:SupportCaseTimeItemList',
            'solutionsList' => 'support:SupportCaseSolutionsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        EmailEmployeesList => {
            'emailEmployees' => 'core:RecordRef',
        },
    
        SupportCaseEscalateTo => {
            'escalatee' => 'core:RecordRef',
            'email' => 'support:string',
            'phone' => 'support:string',
        },
    
        SupportCaseEscalateToList => {
            'escalateTo' => 'support:SupportCaseEscalateTo',
        },
    
        SupportCaseSolutions => {
            'solution' => 'core:RecordRef',
            'message' => 'support:string',
            'dateApplied' => 'support:dateTime',
        },
    
        SupportCaseSolutionsList => {
            'solutions' => 'support:SupportCaseSolutions',
        },
    
        SupportCaseTimeItemList => {
            'timeItem' => 'common:TimeItem',
        },
    
        SupportCaseSearchAdvanced => {
            'criteria' => 'support:SupportCaseSearch',
            'columns' => 'support:SupportCaseSearchRow',
        },
    
        SupportCaseSearchRow => {
            'basic' => 'common:SupportCaseSearchRowBasic',
            'contactJoin' => 'common:ContactSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'issueJoin' => 'common:IssueSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'timeJoin' => 'common:TimeBillSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        SupportCaseStatus => {
            'name' => 'support:string',
            'insertBefore' => 'core:RecordRef',
            'stage' => 'supportTypes:SupportCaseStatusStage',
            'caseOnHold' => 'support:boolean',
            'autoCloseCase' => 'support:boolean',
            'description' => 'support:string',
            'isInactive' => 'support:boolean',
        },
    
        SupportCaseType => {
            'name' => 'support:string',
            'insertBefore' => 'core:RecordRef',
            'description' => 'support:string',
            'isInactive' => 'support:boolean',
        },
    
        SupportCaseOrigin => {
            'name' => 'support:string',
            'insertBefore' => 'core:RecordRef',
            'description' => 'support:string',
            'isInactive' => 'support:boolean',
        },
    
        SupportCaseIssue => {
            'name' => 'support:string',
            'insertBefore' => 'core:RecordRef',
            'description' => 'support:string',
            'isInactive' => 'support:boolean',
        },
    
        SupportCasePriority => {
            'name' => 'support:string',
            'insertBefore' => 'core:RecordRef',
            'description' => 'support:string',
            'isInactive' => 'support:boolean',
        },
    
        Solution => {
            'customForm' => 'core:RecordRef',
            'solutionCode' => 'support:string',
            'title' => 'support:string',
            'message' => 'support:string',
            'status' => 'supportTypes:SolutionStatus',
            'displayOnline' => 'support:boolean',
            'assigned' => 'core:RecordRef',
            'isInactive' => 'support:boolean',
            'longDescription' => 'support:string',
            'topicsList' => 'support:SolutionTopicsList',
            'createdDate' => 'support:dateTime',
            'lastModifiedDate' => 'support:dateTime',
            'solutionsList' => 'support:SolutionsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SolutionTopics => {
            'topic' => 'core:RecordRef',
        },
    
        SolutionTopicsList => {
            'topics' => 'support:SolutionTopics',
        },
    
        Solutions => {
            'solution' => 'core:RecordRef',
            'message' => 'support:string',
        },
    
        SolutionsList => {
            'solutions' => 'support:Solutions',
        },
    
        SolutionSearchAdvanced => {
            'criteria' => 'support:SolutionSearch',
            'columns' => 'support:SolutionSearchRow',
        },
    
        SolutionSearchRow => {
            'basic' => 'common:SolutionSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'relatedSolutionJoin' => 'common:SolutionSearchRowBasic',
            'topicJoin' => 'common:TopicSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        Topic => {
            'title' => 'support:string',
            'parentTopic' => 'core:RecordRef',
            'description' => 'support:string',
            'isInactive' => 'support:boolean',
            'longDescription' => 'support:string',
            'solutionList' => 'support:TopicSolutionList',
        },
    
        TopicSolution => {
            'solution' => 'core:RecordRef',
            'message' => 'support:string',
        },
    
        TopicSolutionList => {
            'solution' => 'support:TopicSolution',
        },
    
        TopicSearchAdvanced => {
            'criteria' => 'support:TopicSearch',
            'columns' => 'support:TopicSearchRow',
        },
    
        TopicSearchRow => {
            'basic' => 'common:TopicSearchRowBasic',
            'solutionJoin' => 'common:SolutionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Issue => {
            'customForm' => 'core:RecordRef',
            'issueNumber' => 'support:string',
            'createdDate' => 'support:dateTime',
            'issueType' => 'core:RecordRef',
            'product' => 'core:RecordRef',
            'module' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'productTeam' => 'core:RecordRef',
            'source' => 'core:RecordRef',
            'reportedBy' => 'core:RecordRef',
            'reproduce' => 'core:RecordRef',
            'duplicateOf' => 'core:RecordRef',
            'severity' => 'core:RecordRef',
            'priority' => 'core:RecordRef',
            'isShowStopper' => 'support:boolean',
            'assigned' => 'core:RecordRef',
            'reviewer' => 'core:RecordRef',
            'isReviewed' => 'support:boolean',
            'issueStatus' => 'core:RecordRef',
            'lastModifiedDate' => 'support:dateTime',
            'issueTagsList' => 'core:RecordRefList',
            'issueAbstract' => 'support:string',
            'newDetails' => 'support:string',
            'isOwner' => 'support:boolean',
            'trackCode' => 'supportTypes:IssueTrackCode',
            'emailAssignee' => 'support:boolean',
            'emailEmployeesList' => 'support:EmailEmployeesList',
            'emailCellsList' => 'core:RecordRefList',
            'externalAbstract' => 'support:string',
            'externalDetails' => 'support:string',
            'brokenInVersionList' => 'support:IssueVersionList',
            'targetVersionList' => 'support:IssueVersionList',
            'fixedInVersionList' => 'support:IssueVersionList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        IssueVersion => {
            'primary' => 'support:boolean',
            'version' => 'core:RecordRef',
            'build' => 'core:RecordRef',
        },
    
        IssueVersionList => {
            'issueVersion' => 'support:IssueVersion',
        },
    
        IssueSearchAdvanced => {
            'criteria' => 'support:IssueSearch',
            'columns' => 'support:IssueSearchRow',
        },
    
        IssueSearchRow => {
            'basic' => 'common:IssueSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        ClassTranslation => {
            'locale' => 'accounting:string',
            'language' => 'accounting:string',
            'name' => 'accounting:string',
        },
    
        ClassTranslationList => {
            'classTranslation' => 'accounting:ClassTranslation',
        },
    
        ContactCategory => {
            'name' => 'accounting:string',
            'private' => 'accounting:boolean',
            'sync' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        CustomerCategory => {
            'name' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        SalesRole => {
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'isSalesRep' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        PriceLevel => {
            'name' => 'accounting:string',
            'discountpct' => 'accounting:double',
            'updateExistingPrices' => 'accounting:boolean',
            'isOnline' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        WinLossReason => {
            'name' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        Term => {
            'name' => 'accounting:string',
            'dateDriven' => 'accounting:boolean',
            'daysUntilNetDue' => 'accounting:long',
            'discountPercent' => 'accounting:double',
            'daysUntilExpiry' => 'accounting:long',
            'dayOfMonthNetDue' => 'accounting:long',
            'dueNextMonthIfWithinDays' => 'accounting:long',
            'discountPercentDateDriven' => 'accounting:double',
            'dayDiscountExpires' => 'accounting:long',
            'preferred' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        NoteType => {
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        PaymentMethod => {
            'name' => 'accounting:string',
            'creditCard' => 'accounting:boolean',
            'undepFunds' => 'accounting:boolean',
            'account' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'isOnline' => 'accounting:boolean',
            'isDebitCard' => 'accounting:boolean',
            'merchantAccountsList' => 'core:RecordRefList',
            'payPalEmailAddress' => 'accounting:string',
            'expressCheckoutArrangement' => 'accounting:string',
            'useExpressCheckout' => 'accounting:boolean',
        },
    
        LeadSource => {
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        Price => {
            'value' => 'accounting:double',
            'quantity' => 'accounting:double',
        },
    
        PriceList => {
            'price' => 'accounting:Price',
        },
    
        Pricing => {
            'currency' => 'core:RecordRef',
            'priceLevel' => 'core:RecordRef',
            'discount' => 'accounting:double',
            'priceList' => 'accounting:PriceList',
        },
    
        PricingMatrix => {
            'pricing' => 'accounting:Pricing',
        },
    
        Rate => {
            'value' => 'accounting:double',
            'priceLevel' => 'core:RecordRef',
        },
    
        RateList => {
            'rate' => 'accounting:Rate',
        },
    
        BillingRates => {
            'currency' => 'core:RecordRef',
            'billingClass' => 'core:RecordRef',
            'rateList' => 'accounting:RateList',
        },
    
        BillingRatesMatrix => {
            'billingRates' => 'accounting:BillingRates',
        },
    
        Translation => {
            'locale' => 'commonTyp:Language',
            'language' => 'accounting:string',
            'displayName' => 'accounting:string',
            'description' => 'accounting:string',
            'salesDescription' => 'accounting:string',
            'storeDisplayName' => 'accounting:string',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'pageTitle' => 'accounting:string',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
        },
    
        TranslationList => {
            'translation' => 'accounting:Translation',
        },
    
        ItemOptionsList => {
            'itemOptions' => 'core:RecordRef',
        },
    
        ItemVendor => {
            'vendor' => 'core:RecordRef',
            'vendorCode' => 'accounting:string',
            'vendorCurrencyName' => 'accounting:string',
            'vendorCurrency' => 'core:RecordRef',
            'purchasePrice' => 'accounting:double',
            'preferredVendor' => 'accounting:boolean',
            'schedule' => 'core:RecordRef',
            'subsidiary' => 'accounting:string',
        },
    
        ItemVendorList => {
            'itemVendor' => 'accounting:ItemVendor',
        },
    
        SiteCategory => {
            'website' => 'core:RecordRef',
            'category' => 'core:RecordRef',
            'isDefault' => 'accounting:boolean',
            'categoryDescription' => 'accounting:string',
        },
    
        SiteCategoryList => {
            'siteCategory' => 'accounting:SiteCategory',
        },
    
        ProductFeedList => {
            'productFeed' => 'accountingTypes:ItemProductFeed',
        },
    
        ItemMember => {
            'memberDescr' => 'accounting:string',
            'quantity' => 'accounting:double',
            'memberUnit' => 'accounting:string',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'taxSchedule' => 'core:RecordRef',
            'taxcode' => 'accounting:string',
            'item' => 'core:RecordRef',
            'taxrate' => 'accounting:double',
            'effectiveDate' => 'accounting:dateTime',
            'obsoleteDate' => 'accounting:dateTime',
            'effectiveRevision' => 'core:RecordRef',
            'obsoleteRevision' => 'core:RecordRef',
            'lineNumber' => 'accounting:long',
        },
    
        ItemMemberList => {
            'itemMember' => 'accounting:ItemMember',
        },
    
        InventoryItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'copyDescription' => 'accounting:boolean',
            'expenseAccount' => 'core:RecordRef',
            'dateConvertedToInv' => 'accounting:dateTime',
            'originalItemType' => 'accountingTypes:ItemType',
            'originalItemSubtype' => 'accountingTypes:ItemSubType',
            'cogsAccount' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'assetAccount' => 'core:RecordRef',
            'matchBillToReceipt' => 'accounting:boolean',
            'billQtyVarianceAcct' => 'core:RecordRef',
            'billPriceVarianceAcct' => 'core:RecordRef',
            'billExchRateVarianceAcct' => 'core:RecordRef',
            'gainLossAccount' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'shippingCostUnits' => 'accounting:string',
            'handlingCost' => 'accounting:double',
            'handlingCostUnits' => 'accounting:string',
            'weight' => 'accounting:double',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'weightUnits' => 'accounting:string',
            'costingMethodDisplay' => 'accounting:string',
            'unitsType' => 'core:RecordRef',
            'stockUnit' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'trackLandedCost' => 'accounting:boolean',
            'isDropShipItem' => 'accounting:boolean',
            'isSpecialOrderItem' => 'accounting:boolean',
            'stockDescription' => 'accounting:string',
            'deferredRevenueAccount' => 'core:RecordRef',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'revRecSchedule' => 'core:RecordRef',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufacturerAddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'accountingTypes:ScheduleBCode',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'minimumQuantityUnits' => 'accounting:string',
            'softDescriptor' => 'core:RecordRef',
            'shipPackage' => 'core:RecordRef',
            'shipIndividually' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'purchasePriceVarianceAcct' => 'core:RecordRef',
            'quantityPricingSchedule' => 'core:RecordRef',
            'reorderPointUnits' => 'accounting:string',
            'useMarginalRates' => 'accounting:boolean',
            'preferredStockLevelUnits' => 'accounting:string',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'transferPrice' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'costEstimateUnits' => 'accounting:string',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'preferredLocation' => 'core:RecordRef',
            'reorderMultiple' => 'accounting:long',
            'cost' => 'accounting:double',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'costUnits' => 'accounting:string',
            'totalValue' => 'accounting:double',
            'averageCost' => 'accounting:double',
            'useBins' => 'accounting:boolean',
            'quantityReorderUnits' => 'accounting:string',
            'leadTime' => 'accounting:long',
            'autoLeadTime' => 'accounting:boolean',
            'lastPurchasePrice' => 'accounting:double',
            'autoPreferredStockLevel' => 'accounting:boolean',
            'preferredStockLevelDays' => 'accounting:double',
            'safetyStockLevel' => 'accounting:double',
            'safetyStockLevelDays' => 'accounting:long',
            'backwardConsumptionDays' => 'accounting:long',
            'seasonalDemand' => 'accounting:boolean',
            'safetyStockLevelUnits' => 'accounting:string',
            'demandModifier' => 'accounting:double',
            'autoReorderPoint' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'urlComponent' => 'accounting:string',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'costingMethod' => 'accountingTypes:ItemCostingMethod',
            'currency' => 'accounting:string',
            'preferredStockLevel' => 'accounting:double',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'defaultReturnCost' => 'accounting:double',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'periodicLotSizeType' => 'accountingTypes:PeriodicLotSizeType',
            'supplyType' => 'core:RecordRef',
            'periodicLotSizeDays' => 'accounting:long',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'forwardConsumptionDays' => 'accounting:long',
            'demandSource' => 'core:RecordRef',
            'quantityBackOrdered' => 'accounting:double',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityOnHand' => 'accounting:double',
            'onHandValueMli' => 'accounting:double',
            'quantityOnOrder' => 'accounting:double',
            'rate' => 'accounting:double',
            'reorderPoint' => 'accounting:double',
            'quantityCommittedUnits' => 'accounting:string',
            'salesTaxCode' => 'core:RecordRef',
            'quantityAvailableUnits' => 'accounting:string',
            'quantityOnHandUnits' => 'accounting:string',
            'vendor' => 'core:RecordRef',
            'quantityOnOrderUnits' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'subsidiaryList' => 'core:RecordRefList',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'translationsList' => 'accounting:TranslationList',
            'binNumberList' => 'accounting:InventoryItemBinNumberList',
            'locationsList' => 'accounting:InventoryItemLocationsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        MatrixOptionList => {
            'matrixOption' => 'core:SelectCustomFieldRef',
        },
    
        InventoryItemBinNumber => {
            'binNumber' => 'core:RecordRef',
            'onHand' => 'accounting:string',
            'onHandAvail' => 'accounting:string',
            'location' => 'accounting:string',
            'preferredBin' => 'accounting:boolean',
        },
    
        InventoryItemBinNumberList => {
            'binNumber' => 'accounting:InventoryItemBinNumber',
        },
    
        InventoryItemLocations => {
            'location' => 'accounting:string',
            'quantityOnHand' => 'accounting:double',
            'onHandValueMli' => 'accounting:double',
            'averageCostMli' => 'accounting:double',
            'lastPurchasePriceMli' => 'accounting:double',
            'reorderPoint' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'leadTime' => 'accounting:long',
            'defaultReturnCost' => 'accounting:double',
            'safetyStockLevel' => 'accounting:double',
            'cost' => 'accounting:double',
            'buildTime' => 'accounting:double',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'isWip' => 'accounting:boolean',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'quantityOnOrder' => 'accounting:double',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'locationId' => 'core:RecordRef',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'periodicLotSizeType' => 'accountingTypes:PeriodicLotSizeType',
            'periodicLotSizeDays' => 'accounting:long',
            'supplyType' => 'core:RecordRef',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'demandSource' => 'core:RecordRef',
            'backwardConsumptionDays' => 'accounting:long',
            'forwardConsumptionDays' => 'accounting:long',
        },
    
        InventoryItemLocationsList => {
            'locations' => 'accounting:InventoryItemLocations',
        },
    
        PresentationItemList => {
            'presentationItem' => 'common:PresentationItem',
        },
    
        DescriptionItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'description' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        DiscountItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'description' => 'accounting:string',
            'nonPosting' => 'accounting:boolean',
            'account' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'rate' => 'accounting:string',
            'isPreTax' => 'accounting:boolean',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'taxSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'expenseAccount' => 'core:RecordRef',
            'incomeAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        DownloadItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'quantityPricingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'onSpecial' => 'accounting:boolean',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'department' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'incomeAccount' => 'core:RecordRef',
            'numOfAllowedDownloads' => 'accounting:long',
            'daysBeforeExpiration' => 'accounting:long',
            'immediateDownload' => 'accounting:boolean',
            'isTaxable' => 'accounting:boolean',
            'issueProduct' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'billingSchedule' => 'core:RecordRef',
            'isFulfillable' => 'accounting:boolean',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'featuredDescription' => 'accounting:string',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        MarkupItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'description' => 'accounting:string',
            'nonPosting' => 'accounting:boolean',
            'account' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'rate' => 'accounting:string',
            'isPreTax' => 'accounting:boolean',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'taxSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'expenseAccount' => 'core:RecordRef',
            'incomeAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaymentItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'description' => 'accounting:string',
            'paymentMethod' => 'core:RecordRef',
            'undepFunds' => 'accounting:boolean',
            'includeChildren' => 'accounting:boolean',
            'issueProduct' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'displayName' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SubtotalItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'displayName' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'description' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        NonInventoryPurchaseItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'expenseAccount' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'unitsType' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'taxSchedule' => 'core:RecordRef',
            'deferralAccount' => 'core:RecordRef',
            'amortizationTemplate' => 'core:RecordRef',
            'residual' => 'accounting:string',
            'amortizationPeriod' => 'accounting:long',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'currency' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'purchaseTaxCode' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'vendor' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        NonInventorySaleItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'taxSchedule' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'shippingCostUnits' => 'accounting:string',
            'handlingCost' => 'accounting:double',
            'handlingCostUnits' => 'accounting:string',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'weight' => 'accounting:double',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'weightUnits' => 'accounting:string',
            'costEstimateUnits' => 'accounting:string',
            'unitsType' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'stockDescription' => 'accounting:string',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufacturerAddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'accountingTypes:ScheduleBCode',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'accounting:string',
            'shipPackage' => 'core:RecordRef',
            'shipIndividually' => 'accounting:boolean',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'minimumQuantityUnits' => 'accounting:string',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'urlComponent' => 'accounting:string',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'subsidiaryList' => 'core:RecordRefList',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        NonInventoryResaleItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'copyDescription' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'expenseAccount' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'taxSchedule' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'isDropShipItem' => 'accounting:boolean',
            'isSpecialOrderItem' => 'accounting:boolean',
            'shippingCost' => 'accounting:double',
            'shippingCostUnits' => 'accounting:string',
            'handlingCost' => 'accounting:double',
            'handlingCostUnits' => 'accounting:string',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'weight' => 'accounting:double',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'weightUnits' => 'accounting:string',
            'costEstimateUnits' => 'accounting:string',
            'unitsType' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'deferralAccount' => 'core:RecordRef',
            'amortizationTemplate' => 'core:RecordRef',
            'residual' => 'accounting:string',
            'amortizationPeriod' => 'accounting:long',
            'stockDescription' => 'accounting:string',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufacturerAddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'accountingTypes:ScheduleBCode',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'accounting:string',
            'shipPackage' => 'core:RecordRef',
            'shipIndividually' => 'accounting:boolean',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'minimumQuantityUnits' => 'accounting:string',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'urlComponent' => 'accounting:string',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'subsidiaryList' => 'core:RecordRefList',
            'currency' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'translationsList' => 'accounting:TranslationList',
            'vendor' => 'core:RecordRef',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        OtherChargeResaleItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'manufacturingChargeItem' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'expenseAccount' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'taxSchedule' => 'core:RecordRef',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'unitsType' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'costEstimateUnits' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'deferralAccount' => 'core:RecordRef',
            'amortizationTemplate' => 'core:RecordRef',
            'residual' => 'accounting:string',
            'amortizationPeriod' => 'accounting:long',
            'minimumQuantity' => 'accounting:long',
            'minimumQuantityUnits' => 'accounting:string',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'accounting:string',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'currency' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'vendor' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        OtherChargePurchaseItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'manufacturingChargeItem' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'expenseAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'unitsType' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'issueProduct' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'location' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'deferralAccount' => 'core:RecordRef',
            'amortizationTemplate' => 'core:RecordRef',
            'residual' => 'accounting:string',
            'amortizationPeriod' => 'accounting:long',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'currency' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'purchaseTaxCode' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'vendor' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ServiceResaleItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'manufacturingChargeItem' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'expenseAccount' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'isTaxable' => 'accounting:boolean',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'unitsType' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'costEstimateUnits' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'deferralAccount' => 'core:RecordRef',
            'amortizationTemplate' => 'core:RecordRef',
            'residual' => 'accounting:string',
            'amortizationPeriod' => 'accounting:long',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'accounting:string',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricingGroup' => 'core:RecordRef',
            'minimumQuantityUnits' => 'accounting:string',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'createJob' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'urlComponent' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'itemTaskTemplatesList' => 'accounting:ServiceItemTaskTemplatesList',
            'featuredDescription' => 'accounting:string',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'currency' => 'accounting:string',
            'billingRatesMatrix' => 'accounting:BillingRatesMatrix',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'translationsList' => 'accounting:TranslationList',
            'vendor' => 'core:RecordRef',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ServicePurchaseItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'purchaseDescription' => 'accounting:string',
            'manufacturingChargeItem' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'expenseAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'unitsType' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'taxSchedule' => 'core:RecordRef',
            'deferralAccount' => 'core:RecordRef',
            'amortizationTemplate' => 'core:RecordRef',
            'residual' => 'accounting:string',
            'amortizationPeriod' => 'accounting:long',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'currency' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'purchaseTaxCode' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'vendor' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ServiceSaleItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'taxSchedule' => 'core:RecordRef',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'unitsType' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'costEstimateUnits' => 'accounting:string',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'accounting:string',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricingGroup' => 'core:RecordRef',
            'minimumQuantityUnits' => 'accounting:string',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'createJob' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'urlComponent' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'itemTaskTemplatesList' => 'accounting:ServiceItemTaskTemplatesList',
            'featuredDescription' => 'accounting:string',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'billingRatesMatrix' => 'accounting:BillingRatesMatrix',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        OtherChargeSaleItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'salesDescription' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'incomeAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'taxSchedule' => 'core:RecordRef',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'unitsType' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'costEstimateUnits' => 'accounting:string',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'minimumQuantity' => 'accounting:long',
            'minimumQuantityUnits' => 'accounting:string',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'accounting:string',
            'isFulfillable' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        Currency => {
            'name' => 'accounting:string',
            'symbol' => 'accounting:string',
            'isBaseCurrency' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'overrideCurrencyFormat' => 'accounting:boolean',
            'displaySymbol' => 'accounting:string',
            'symbolPlacement' => 'commonTypes:CurrencySymbolPlacement',
            'locale' => 'accountingTypes:CurrencyLocale',
            'formatSample' => 'accounting:string',
            'exchangeRate' => 'accounting:double',
            'fxRateUpdateTimezone' => 'accountingTypes:CurrencyFxRateUpdateTimezone',
            'inclInFxRateUpdates' => 'accounting:boolean',
            'currencyPrecision' => 'accountingTypes:CurrencyCurrencyPrecision',
        },
    
        ExpenseCategory => {
            'customForm' => 'core:RecordRef',
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'expenseAcct' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        Account => {
            'acctType' => 'accountingTypes:AccountType',
            'acctNumber' => 'accounting:string',
            'acctName' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'accounting:string',
            'generalRate' => 'accountingTypes:ConsolidatedRate',
            'parent' => 'core:RecordRef',
            'cashFlowRate' => 'accountingTypes:ConsolidatedRate',
            'billableExpensesAcct' => 'core:RecordRef',
            'deferralAcct' => 'core:RecordRef',
            'description' => 'accounting:string',
            'curDocNum' => 'accounting:long',
            'isInactive' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'inventory' => 'accounting:boolean',
            'eliminate' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'category1099misc' => 'core:RecordRef',
            'openingBalance' => 'accounting:double',
            'tranDate' => 'accounting:dateTime',
            'revalue' => 'accounting:boolean',
            'translationsList' => 'accounting:AccountTranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        AccountTranslationList => {
            'translation' => 'accounting:ClassTranslation',
        },
    
        AccountSearchAdvanced => {
            'criteria' => 'accounting:AccountSearch',
            'columns' => 'accounting:AccountSearchRow',
        },
    
        AccountSearchRow => {
            'basic' => 'common:AccountSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Department => {
            'name' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'classTranslationList' => 'accounting:ClassTranslationList',
            'subsidiaryList' => 'core:RecordRefList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        DepartmentSearchAdvanced => {
            'criteria' => 'accounting:DepartmentSearch',
            'columns' => 'accounting:DepartmentSearchRow',
        },
    
        DepartmentSearchRow => {
            'basic' => 'common:DepartmentSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Classification => {
            'name' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'classTranslationList' => 'accounting:ClassTranslationList',
            'subsidiaryList' => 'core:RecordRefList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ClassificationSearchAdvanced => {
            'criteria' => 'accounting:ClassificationSearch',
            'columns' => 'accounting:ClassificationSearchRow',
        },
    
        ClassificationSearchRow => {
            'basic' => 'common:ClassificationSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Location => {
            'name' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'isInactive' => 'accounting:boolean',
            'tranPrefix' => 'accounting:string',
            'attention' => 'accounting:string',
            'addressee' => 'accounting:string',
            'addrPhone' => 'accounting:string',
            'addr1' => 'accounting:string',
            'addr2' => 'accounting:string',
            'addr3' => 'accounting:string',
            'city' => 'accounting:string',
            'state' => 'accounting:string',
            'zip' => 'accounting:string',
            'country' => 'commonTypes:Country',
            'addrText' => 'accounting:string',
            'override' => 'accounting:boolean',
            'logo' => 'core:RecordRef',
            'makeInventoryAvailable' => 'accounting:boolean',
            'makeInventoryAvailableStore' => 'accounting:boolean',
            'classTranslationList' => 'accounting:ClassTranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        LocationSearchAdvanced => {
            'criteria' => 'accounting:LocationSearch',
            'columns' => 'accounting:LocationSearchRow',
        },
    
        LocationSearchRow => {
            'basic' => 'common:LocationSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        UnitsType => {
            'name' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
            'uomList' => 'accounting:UnitsTypeUomList',
        },
    
        UnitsTypeUom => {
            'internalId' => 'accounting:string',
            'unitName' => 'accounting:string',
            'pluralName' => 'accounting:string',
            'abbreviation' => 'accounting:string',
            'pluralAbbreviation' => 'accounting:string',
            'conversionRate' => 'accounting:double',
            'baseUnit' => 'accounting:boolean',
        },
    
        UnitsTypeUomList => {
            'uom' => 'accounting:UnitsTypeUom',
        },
    
        ItemSearchAdvanced => {
            'criteria' => 'accounting:ItemSearch',
            'columns' => 'accounting:ItemSearchRow',
        },
    
        ItemSearchRow => {
            'basic' => 'common:ItemSearchRowBasic',
            'binNumberJoin' => 'common:BinSearchRowBasic',
            'correlatedItemJoin' => 'common:ItemSearchRowBasic',
            'effectiveRevisionJoin' => 'common:ItemRevisionSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'inventoryDetailJoin' => 'common:InventoryDetailSearchRowBasic',
            'inventoryLocationJoin' => 'common:LocationSearchRowBasic',
            'inventoryNumberJoin' => 'common:InventoryNumberSearchRowBasic',
            'memberItemJoin' => 'common:ItemSearchRowBasic',
            'obsoleteRevisionJoin' => 'common:ItemRevisionSearchRowBasic',
            'parentJoin' => 'common:ItemSearchRowBasic',
            'preferredLocationJoin' => 'common:LocationSearchRowBasic',
            'preferredVendorJoin' => 'common:VendorSearchRowBasic',
            'shopperJoin' => 'common:CustomerSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
            'vendorJoin' => 'common:VendorSearchRowBasic',
        },
    
        ContactRole => {
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        Bin => {
            'binNumber' => 'accounting:string',
            'location' => 'core:RecordRef',
            'memo' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        BinSearchAdvanced => {
            'criteria' => 'accounting:BinSearch',
            'columns' => 'accounting:BinSearchRow',
        },
    
        BinSearchRow => {
            'basic' => 'common:BinSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        SalesTaxItem => {
            'itemId' => 'accounting:string',
            'displayName' => 'accounting:string',
            'description' => 'accounting:string',
            'rate' => 'accounting:string',
            'taxType' => 'core:RecordRef',
            'taxAgency' => 'core:RecordRef',
            'purchaseAccount' => 'core:RecordRef',
            'saleAccount' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'effectiveFrom' => 'accounting:dateTime',
            'validUntil' => 'accounting:dateTime',
            'eccode' => 'accounting:boolean',
            'reverseCharge' => 'accounting:boolean',
            'parent' => 'core:RecordRef',
            'exempt' => 'accounting:boolean',
            'isDefault' => 'accounting:boolean',
            'excludeFromTaxReports' => 'accounting:boolean',
            'available' => 'accountingTypes:SalesTaxItemAvailable',
            'export' => 'accounting:boolean',
            'taxAccount' => 'core:RecordRef',
            'county' => 'accounting:string',
            'city' => 'accounting:string',
            'state' => 'accounting:string',
            'zip' => 'accounting:string',
            'nexusCountry' => 'core:RecordRef',
        },
    
        TaxGroup => {
            'itemId' => 'accounting:string',
            'description' => 'accounting:string',
            'state' => 'accounting:string',
            'taxitem1' => 'core:RecordRef',
            'unitprice1' => 'accounting:string',
            'taxitem2' => 'core:RecordRef',
            'unitprice2' => 'accounting:string',
            'piggyback' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'rate' => 'accounting:double',
            'taxType' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'county' => 'accounting:string',
            'city' => 'accounting:string',
            'zip' => 'accounting:string',
            'nexusCountry' => 'core:RecordRef',
            'isDefault' => 'accounting:boolean',
            'taxItemList' => 'accounting:TaxGroupTaxItemList',
        },
    
        TaxGroupTaxItem => {
            'taxName' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'basis' => 'accounting:double',
            'taxType' => 'accounting:string',
        },
    
        TaxGroupTaxItemList => {
            'taxItem' => 'accounting:TaxGroupTaxItem',
        },
    
        TaxType => {
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'nexusesTaxList' => 'accounting:TaxTypeNexusesTaxList',
        },
    
        TaxTypeNexusesTax => {
            'nexus' => 'core:RecordRef',
            'description' => 'accounting:string',
            'saleTaxAcct' => 'core:RecordRef',
            'purchTaxAcct' => 'core:RecordRef',
        },
    
        TaxTypeNexusesTaxList => {
            'nexusesTax' => 'accounting:TaxTypeNexusesTax',
        },
    
        SerializedInventoryItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'includeChildren' => 'accounting:boolean',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'costingMethod' => 'accountingTypes:ItemCostingMethod',
            'subsidiaryList' => 'core:RecordRefList',
            'purchaseDescription' => 'accounting:string',
            'copyDescription' => 'accounting:boolean',
            'issueProduct' => 'core:RecordRef',
            'currency' => 'accounting:string',
            'cogsAccount' => 'core:RecordRef',
            'vendor' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'incomeAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'taxSchedule' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'assetAccount' => 'core:RecordRef',
            'matchBillToReceipt' => 'accounting:boolean',
            'billQtyVarianceAcct' => 'core:RecordRef',
            'billPriceVarianceAcct' => 'core:RecordRef',
            'billExchRateVarianceAcct' => 'core:RecordRef',
            'gainLossAccount' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'handlingCost' => 'accounting:double',
            'weight' => 'accounting:double',
            'costingMethodDisplay' => 'accounting:string',
            'shippingCostUnits' => 'accounting:string',
            'handlingCostUnits' => 'accounting:string',
            'unitsType' => 'core:RecordRef',
            'stockUnit' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'minimumQuantityUnits' => 'accounting:string',
            'safetyStockLevelUnits' => 'accounting:string',
            'billingSchedule' => 'core:RecordRef',
            'trackLandedCost' => 'accounting:boolean',
            'isDropShipItem' => 'accounting:boolean',
            'isSpecialOrderItem' => 'accounting:boolean',
            'stockDescription' => 'accounting:string',
            'deferredRevenueAccount' => 'core:RecordRef',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'revRecSchedule' => 'core:RecordRef',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufacturerAddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'accountingTypes:ScheduleBCode',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'shipPackage' => 'core:RecordRef',
            'shipIndividually' => 'accounting:boolean',
            'softDescriptor' => 'core:RecordRef',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'transferPrice' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'preferredLocation' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'quantityReorderUnits' => 'accounting:string',
            'reorderMultiple' => 'accounting:long',
            'totalValue' => 'accounting:double',
            'useBins' => 'accounting:boolean',
            'leadTime' => 'accounting:long',
            'autoLeadTime' => 'accounting:boolean',
            'autoReorderPoint' => 'accounting:boolean',
            'autoPreferredStockLevel' => 'accounting:boolean',
            'preferredStockLevelDays' => 'accounting:double',
            'averageCost' => 'accounting:double',
            'safetyStockLevel' => 'accounting:double',
            'lastPurchasePrice' => 'accounting:double',
            'safetyStockLevelDays' => 'accounting:long',
            'backwardConsumptionDays' => 'accounting:long',
            'seasonalDemand' => 'accounting:boolean',
            'demandModifier' => 'accounting:double',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'weightUnits' => 'accounting:string',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'quantityOnHand' => 'accounting:double',
            'quantityOnHandUnits' => 'accounting:string',
            'onHandValueMli' => 'accounting:double',
            'serialNumbers' => 'accounting:string',
            'reorderPoint' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'reorderPointUnits' => 'accounting:string',
            'defaultReturnCost' => 'accounting:double',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'periodicLotSizeType' => 'accountingTypes:PeriodicLotSizeType',
            'supplyType' => 'core:RecordRef',
            'periodicLotSizeDays' => 'accounting:long',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'forwardConsumptionDays' => 'accounting:long',
            'demandSource' => 'core:RecordRef',
            'quantityOnOrder' => 'accounting:double',
            'preferredStockLevelUnits' => 'accounting:string',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'purchaseTaxCode' => 'core:RecordRef',
            'purchasePriceVarianceAcct' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'onSpecial' => 'accounting:boolean',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'specialsDescription' => 'accounting:string',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'relatedItemsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'urlComponent' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'itemNumberOptionsList' => 'core:RecordRefList',
            'numbersList' => 'accounting:SerializedInventoryItemNumbersList',
            'binNumberList' => 'accounting:InventoryItemBinNumberList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'locationsList' => 'accounting:SerializedInventoryItemLocationsList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SerializedInventoryItemLocations => {
            'location' => 'accounting:string',
            'quantityOnHand' => 'accounting:double',
            'onHandValueMli' => 'accounting:double',
            'serialNumbers' => 'accounting:string',
            'averageCostMli' => 'accounting:double',
            'lastPurchasePriceMli' => 'accounting:double',
            'reorderPoint' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'leadTime' => 'accounting:long',
            'defaultReturnCost' => 'accounting:double',
            'isWip' => 'accounting:boolean',
            'safetyStockLevel' => 'accounting:double',
            'cost' => 'accounting:double',
            'buildTime' => 'accounting:double',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'quantityOnOrder' => 'accounting:double',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'locationId' => 'core:RecordRef',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'periodicLotSizeType' => 'accountingTypes:PeriodicLotSizeType',
            'periodicLotSizeDays' => 'accounting:long',
            'supplyType' => 'core:RecordRef',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'demandSource' => 'core:RecordRef',
            'backwardConsumptionDays' => 'accounting:long',
            'forwardConsumptionDays' => 'accounting:long',
        },
    
        SerializedInventoryItemLocationsList => {
            'locations' => 'accounting:SerializedInventoryItemLocations',
        },
    
        SerializedInventoryItemNumbers => {
            'serialNumber' => 'core:RecordRef',
        },
    
        SerializedInventoryItemNumbersList => {
            'numbers' => 'accounting:SerializedInventoryItemNumbers',
        },
    
        LotNumberedInventoryItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'matrixType' => 'accountingTypes:ItemMatrixType',
            'includeChildren' => 'accounting:boolean',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'costingMethod' => 'accountingTypes:ItemCostingMethod',
            'subsidiaryList' => 'core:RecordRefList',
            'purchaseDescription' => 'accounting:string',
            'copyDescription' => 'accounting:boolean',
            'currency' => 'accounting:string',
            'cogsAccount' => 'core:RecordRef',
            'vendor' => 'core:RecordRef',
            'salesDescription' => 'accounting:string',
            'incomeAccount' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'isTaxable' => 'accounting:boolean',
            'assetAccount' => 'core:RecordRef',
            'matchBillToReceipt' => 'accounting:boolean',
            'billQtyVarianceAcct' => 'core:RecordRef',
            'billPriceVarianceAcct' => 'core:RecordRef',
            'billExchRateVarianceAcct' => 'core:RecordRef',
            'gainLossAccount' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'handlingCost' => 'accounting:double',
            'weight' => 'accounting:double',
            'costingMethodDisplay' => 'accounting:string',
            'shippingCostUnits' => 'accounting:string',
            'handlingCostUnits' => 'accounting:string',
            'unitsType' => 'core:RecordRef',
            'stockUnit' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'minimumQuantityUnits' => 'accounting:string',
            'safetyStockLevelUnits' => 'accounting:string',
            'billingSchedule' => 'core:RecordRef',
            'trackLandedCost' => 'accounting:boolean',
            'isDropShipItem' => 'accounting:boolean',
            'isSpecialOrderItem' => 'accounting:boolean',
            'stockDescription' => 'accounting:string',
            'deferredRevenueAccount' => 'core:RecordRef',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'revRecSchedule' => 'core:RecordRef',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufacturerAddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'accountingTypes:ScheduleBCode',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'shipPackage' => 'core:RecordRef',
            'shipIndividually' => 'accounting:boolean',
            'softDescriptor' => 'core:RecordRef',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'purchasePriceVarianceAcct' => 'core:RecordRef',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'costEstimate' => 'accounting:double',
            'transferPrice' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'preferredLocation' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'cost' => 'accounting:double',
            'costUnits' => 'accounting:string',
            'reorderMultiple' => 'accounting:long',
            'quantityReorderUnits' => 'accounting:string',
            'totalValue' => 'accounting:double',
            'useBins' => 'accounting:boolean',
            'averageCost' => 'accounting:double',
            'leadTime' => 'accounting:long',
            'autoLeadTime' => 'accounting:boolean',
            'lastPurchasePrice' => 'accounting:double',
            'autoReorderPoint' => 'accounting:boolean',
            'autoPreferredStockLevel' => 'accounting:boolean',
            'preferredStockLevelDays' => 'accounting:double',
            'safetyStockLevel' => 'accounting:double',
            'safetyStockLevelDays' => 'accounting:long',
            'backwardConsumptionDays' => 'accounting:long',
            'seasonalDemand' => 'accounting:boolean',
            'demandModifier' => 'accounting:double',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'weightUnits' => 'accounting:string',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'quantityOnHand' => 'accounting:double',
            'quantityOnHandUnits' => 'accounting:string',
            'expirationDate' => 'accounting:dateTime',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'onHandValueMli' => 'accounting:double',
            'serialNumbers' => 'accounting:string',
            'reorderPoint' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'reorderPointUnits' => 'accounting:string',
            'defaultReturnCost' => 'accounting:double',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'periodicLotSizeType' => 'accountingTypes:PeriodicLotSizeType',
            'supplyType' => 'core:RecordRef',
            'periodicLotSizeDays' => 'accounting:long',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'forwardConsumptionDays' => 'accounting:long',
            'demandSource' => 'core:RecordRef',
            'quantityOnOrder' => 'accounting:double',
            'preferredStockLevelUnits' => 'accounting:string',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'purchaseTaxCode' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'salesTaxCode' => 'core:RecordRef',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'specialsDescription' => 'accounting:string',
            'relatedItemsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'urlComponent' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'matrixOptionList' => 'accounting:MatrixOptionList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'itemNumberOptionsList' => 'core:RecordRefList',
            'numbersList' => 'accounting:LotNumberedInventoryItemNumbersList',
            'binNumberList' => 'accounting:InventoryItemBinNumberList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'locationsList' => 'accounting:LotNumberedInventoryItemLocationsList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        LotNumberedInventoryItemLocations => {
            'location' => 'accounting:string',
            'quantityOnHand' => 'accounting:double',
            'onHandValueMli' => 'accounting:double',
            'serialNumbers' => 'accounting:string',
            'expirationDate' => 'accounting:dateTime',
            'averageCostMli' => 'accounting:double',
            'lastPurchasePriceMli' => 'accounting:double',
            'reorderPoint' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'leadTime' => 'accounting:long',
            'defaultReturnCost' => 'accounting:double',
            'safetyStockLevel' => 'accounting:double',
            'cost' => 'accounting:double',
            'buildTime' => 'accounting:double',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'isWip' => 'accounting:boolean',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'quantityOnOrder' => 'accounting:double',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'locationId' => 'core:RecordRef',
            'locationlookup' => 'core:RecordRef',
            'location_display' => 'accounting:string',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'periodicLotSizeType' => 'accountingTypes:PeriodicLotSizeType',
            'periodicLotSizeDays' => 'accounting:long',
            'supplyType' => 'core:RecordRef',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'demandSource' => 'core:RecordRef',
            'backwardConsumptionDays' => 'accounting:long',
            'forwardConsumptionDays' => 'accounting:long',
        },
    
        LotNumberedInventoryItemLocationsList => {
            'locations' => 'accounting:LotNumberedInventoryItemLocations',
        },
    
        LotNumberedInventoryItemNumbers => {
            'serialNumber' => 'core:RecordRef',
            'quantityOnHand' => 'accounting:double',
            'expirationDate' => 'accounting:dateTime',
        },
    
        LotNumberedInventoryItemNumbersList => {
            'numbers' => 'accounting:LotNumberedInventoryItemNumbers',
        },
    
        GiftCertificateItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'includeChildren' => 'accounting:boolean',
            'parent' => 'core:RecordRef',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'salesDescription' => 'accounting:string',
            'incomeAccount' => 'core:RecordRef',
            'liabilityAccount' => 'core:RecordRef',
            'daysBeforeExpiration' => 'accounting:long',
            'isTaxable' => 'accounting:boolean',
            'rate' => 'accounting:double',
            'urlComponent' => 'accounting:string',
            'salesTaxCode' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'taxSchedule' => 'core:RecordRef',
            'costEstimate' => 'accounting:double',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'billingSchedule' => 'core:RecordRef',
            'issueProduct' => 'core:RecordRef',
            'isFulfillable' => 'accounting:boolean',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'relatedItemsDescription' => 'accounting:string',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'authCodesList' => 'accounting:GiftCertificateItemAuthCodesList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'translationsList' => 'accounting:TranslationList',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        GiftCertificateItemAuthCodes => {
            'authCode' => 'accounting:string',
            'used' => 'accounting:boolean',
        },
    
        GiftCertificateItemAuthCodesList => {
            'authCodes' => 'accounting:GiftCertificateItemAuthCodes',
        },
    
        Subsidiary => {
            'name' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
            'showSubsidiaryName' => 'accounting:boolean',
            'url' => 'accounting:string',
            'logo' => 'core:RecordRef',
            'tranPrefix' => 'accounting:string',
            'pageLogo' => 'core:RecordRef',
            'attention' => 'accounting:string',
            'addressee' => 'accounting:string',
            'addrPhone' => 'accounting:string',
            'addr1' => 'accounting:string',
            'addr2' => 'accounting:string',
            'addr3' => 'accounting:string',
            'city' => 'accounting:string',
            'state' => 'accounting:string',
            'zip' => 'accounting:string',
            'country' => 'commonTypes:Country',
            'addrText' => 'accounting:string',
            'override' => 'accounting:boolean',
            'shipAddr' => 'accounting:string',
            'returnAddr' => 'accounting:string',
            'companyNameForSupportMessages' => 'accounting:string',
            'mainSupportEmailAddress' => 'accounting:string',
            'anonymousCustomerInboundEmail' => 'core:RecordRef',
            'anonymousCustomerOnlineForms' => 'core:RecordRef',
            'caseCreationTemplate' => 'core:RecordRef',
            'caseUpdateTemplate' => 'core:RecordRef',
            'caseAutomaticClosureTemplate' => 'core:RecordRef',
            'caseAssignmentTemplate' => 'core:RecordRef',
            'employeeCaseUpdateTemplate' => 'core:RecordRef',
            'caseCopyEmployeeTemplate' => 'core:RecordRef',
            'caseEscalationTemplate' => 'core:RecordRef',
            'returnAddress1' => 'accounting:string',
            'returnAddress2' => 'accounting:string',
            'returnCity' => 'accounting:string',
            'returnState' => 'accounting:string',
            'returnCountry' => 'commonTypes:Country',
            'returnZip' => 'accounting:string',
            'legalName' => 'accounting:string',
            'isElimination' => 'accounting:boolean',
            'fiscalCalendar' => 'core:RecordRef',
            'taxFiscalCalendar' => 'core:RecordRef',
            'allowPayroll' => 'accounting:boolean',
            'email' => 'accounting:string',
            'currency' => 'core:RecordRef',
            'fax' => 'accounting:string',
            'edition' => 'accounting:string',
            'federalIdNumber' => 'accounting:string',
            'addrLanguage' => 'accounting:string',
            'nonConsol' => 'accounting:string',
            'consol' => 'accounting:string',
            'shipAddress1' => 'accounting:string',
            'shipAddress2' => 'accounting:string',
            'shipCity' => 'accounting:string',
            'shipState' => 'accounting:string',
            'shipCountry' => 'commonTypes:Country',
            'shipZip' => 'accounting:string',
            'state1TaxNumber' => 'accounting:string',
            'ssnOrTin' => 'accounting:string',
            'interCoAccount' => 'core:RecordRef',
            'nexusList' => 'accounting:SubsidiaryNexusList',
            'checkLayout' => 'core:RecordRef',
            'inboundEmail' => 'accounting:string',
            'classTranslationList' => 'accounting:ClassTranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SubsidiaryNexus => {
            'nexusId' => 'core:RecordRef',
            'country' => 'accounting:string',
        },
    
        SubsidiaryNexusList => {
            'nexus' => 'accounting:SubsidiaryNexus',
        },
    
        SubsidiarySearchAdvanced => {
            'criteria' => 'accounting:SubsidiarySearch',
            'columns' => 'accounting:SubsidiarySearchRow',
        },
    
        SubsidiarySearchRow => {
            'basic' => 'common:SubsidiarySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        GiftCertificate => {
            'giftCertCode' => 'accounting:string',
            'sender' => 'accounting:string',
            'name' => 'accounting:string',
            'email' => 'accounting:string',
            'message' => 'accounting:string',
            'expirationDate' => 'accounting:dateTime',
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'originalAmount' => 'accounting:double',
            'amountRemaining' => 'accounting:double',
        },
    
        GiftCertificateSearchAdvanced => {
            'criteria' => 'accounting:GiftCertificateSearch',
            'columns' => 'accounting:GiftCertificateSearchRow',
        },
    
        GiftCertificateSearchRow => {
            'basic' => 'common:GiftCertificateSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        PartnerCategory => {
            'name' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'isInactive' => 'accounting:boolean',
        },
    
        VendorCategory => {
            'name' => 'accounting:string',
            'isTaxAgency' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        KitItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'printItems' => 'accounting:boolean',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'subsidiaryList' => 'core:RecordRefList',
            'class' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'location' => 'core:RecordRef',
            'description' => 'accounting:string',
            'incomeAccount' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'handlingCost' => 'accounting:double',
            'isTaxable' => 'accounting:boolean',
            'salesTaxCode' => 'core:RecordRef',
            'weight' => 'accounting:double',
            'weightUnit' => 'core:RecordRef',
            'rate' => 'accounting:double',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'stockDescription' => 'accounting:string',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufactureraddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'core:RecordRef',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'issueProduct' => 'core:RecordRef',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'core:RecordRef',
            'isFulfillable' => 'accounting:boolean',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'useMarginalRates' => 'accounting:boolean',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'costEstimate' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'shipIndividually' => 'accounting:boolean',
            'shipPackage' => 'core:RecordRef',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'outOfStockMessage' => 'accounting:string',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'urlComponent' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'nexTagCategory' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'relatedItemsDescription' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'memberList' => 'accounting:ItemMemberList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        AssemblyItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'printItems' => 'accounting:boolean',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'department' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'description' => 'accounting:string',
            'cogsAccount' => 'core:RecordRef',
            'incomeAccount' => 'core:RecordRef',
            'assetAccount' => 'core:RecordRef',
            'matchBillToReceipt' => 'accounting:boolean',
            'billQtyVarianceAcct' => 'core:RecordRef',
            'billPriceVarianceAcct' => 'core:RecordRef',
            'billExchRateVarianceAcct' => 'core:RecordRef',
            'gainLossAccount' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'wipVarianceAcct' => 'core:RecordRef',
            'purchaseTaxCode' => 'core:RecordRef',
            'scrapAcct' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'wipAcct' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'handlingCost' => 'accounting:double',
            'weight' => 'accounting:double',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'isTaxable' => 'accounting:boolean',
            'costingMethod' => 'accountingTypes:ItemCostingMethod',
            'rate' => 'accounting:double',
            'costingMethodDisplay' => 'accounting:string',
            'unitsType' => 'core:RecordRef',
            'stockUnit' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'trackLandedCost' => 'accounting:boolean',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'stockDescription' => 'accounting:string',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufactureraddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'effectiveBomControl' => 'accountingTypes:AssemblyItemEffectiveBomControl',
            'defaultRevision' => 'accounting:string',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'core:RecordRef',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'issueProduct' => 'core:RecordRef',
            'minimumQuantity' => 'accounting:long',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'core:RecordRef',
            'isSpecialWorkOrderItem' => 'accounting:boolean',
            'costCategory' => 'core:RecordRef',
            'pricesIncludeTax' => 'accounting:boolean',
            'prodQtyVarianceAcct' => 'core:RecordRef',
            'prodPriceVarianceAcct' => 'core:RecordRef',
            'purchasePriceVarianceAcct' => 'core:RecordRef',
            'quantityPricingSchedule' => 'core:RecordRef',
            'buildEntireAssembly' => 'accounting:boolean',
            'quantityOnHand' => 'accounting:double',
            'useMarginalRates' => 'accounting:boolean',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'costEstimate' => 'accounting:double',
            'transferPrice' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'unbuildVarianceAccount' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'preferredLocation' => 'core:RecordRef',
            'totalValue' => 'accounting:double',
            'useBins' => 'accounting:boolean',
            'averageCost' => 'accounting:double',
            'leadTime' => 'accounting:long',
            'autoLeadTime' => 'accounting:boolean',
            'buildTime' => 'accounting:long',
            'lastPurchasePrice' => 'accounting:double',
            'purchaseDescription' => 'accounting:string',
            'safetyStockLevel' => 'accounting:double',
            'safetyStockLevelDays' => 'accounting:long',
            'seasonalDemand' => 'accounting:boolean',
            'reorderMultiple' => 'accounting:long',
            'cost' => 'accounting:double',
            'reorderPoint' => 'accounting:double',
            'demandModifier' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'autoReorderPoint' => 'accounting:boolean',
            'autoPreferredStockLevel' => 'accounting:boolean',
            'preferredStockLevelDays' => 'accounting:double',
            'quantityCommitted' => 'accounting:double',
            'shipIndividually' => 'accounting:boolean',
            'quantityAvailable' => 'accounting:double',
            'shipPackage' => 'core:RecordRef',
            'quantityBackOrdered' => 'accounting:double',
            'storeDisplayName' => 'accounting:string',
            'defaultReturnCost' => 'accounting:double',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'supplyType' => 'core:RecordRef',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'demandSource' => 'core:RecordRef',
            'quantityOnOrder' => 'accounting:double',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'urlComponent' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'relatedItemsDescription' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'itemNumberOptionsList' => 'core:RecordRefList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'memberList' => 'accounting:ItemMemberList',
            'locationsList' => 'accounting:InventoryItemLocationsList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'binNumberList' => 'accounting:InventoryItemBinNumberList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SerializedAssemblyItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'printItems' => 'accounting:boolean',
            'isOnline' => 'accounting:boolean',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'availableToPartners' => 'accounting:boolean',
            'includeChildren' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'description' => 'accounting:string',
            'cogsAccount' => 'core:RecordRef',
            'incomeAccount' => 'core:RecordRef',
            'assetAccount' => 'core:RecordRef',
            'matchBillToReceipt' => 'accounting:boolean',
            'billQtyVarianceAcct' => 'core:RecordRef',
            'billPriceVarianceAcct' => 'core:RecordRef',
            'billExchRateVarianceAcct' => 'core:RecordRef',
            'gainLossAccount' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'costCategory' => 'core:RecordRef',
            'purchaseTaxCode' => 'core:RecordRef',
            'prodQtyVarianceAcct' => 'core:RecordRef',
            'prodPriceVarianceAcct' => 'core:RecordRef',
            'purchasePriceVarianceAcct' => 'core:RecordRef',
            'wipVarianceAcct' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'scrapAcct' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'wipAcct' => 'core:RecordRef',
            'shippingCostUnits' => 'accounting:string',
            'handlingCost' => 'accounting:double',
            'weight' => 'accounting:double',
            'handlingCostUnits' => 'accounting:string',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'weightUnits' => 'accounting:string',
            'costingMethod' => 'accountingTypes:ItemCostingMethod',
            'isTaxable' => 'accounting:boolean',
            'costingMethodDisplay' => 'accounting:string',
            'rate' => 'accounting:double',
            'unitsType' => 'core:RecordRef',
            'stockUnit' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'trackLandedCost' => 'accounting:boolean',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'stockDescription' => 'accounting:string',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufactureraddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'effectiveBomControl' => 'accountingTypes:AssemblyItemEffectiveBomControl',
            'minimumQuantityUnits' => 'accounting:string',
            'defaultRevision' => 'accounting:string',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'manufacturerTaxId' => 'accounting:string',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'core:RecordRef',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'issueProduct' => 'core:RecordRef',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'core:RecordRef',
            'isSpecialWorkOrderItem' => 'accounting:boolean',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'buildEntireAssembly' => 'accounting:boolean',
            'quantityOnHand' => 'accounting:double',
            'quantityOnHandUnits' => 'accounting:string',
            'useMarginalRates' => 'accounting:boolean',
            'reorderMultiple' => 'accounting:long',
            'cost' => 'accounting:double',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'costEstimate' => 'accounting:double',
            'transferPrice' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'unbuildVarianceAccount' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'preferredLocation' => 'core:RecordRef',
            'totalValue' => 'accounting:double',
            'useBins' => 'accounting:boolean',
            'averageCost' => 'accounting:double',
            'lastPurchasePrice' => 'accounting:double',
            'purchaseDescription' => 'accounting:string',
            'leadTime' => 'accounting:long',
            'autoLeadTime' => 'accounting:boolean',
            'buildTime' => 'accounting:long',
            'safetyStockLevel' => 'accounting:double',
            'safetyStockLevelUnits' => 'accounting:string',
            'safetyStockLevelDays' => 'accounting:long',
            'seasonalDemand' => 'accounting:boolean',
            'serialNumbers' => 'accounting:string',
            'reorderPoint' => 'accounting:double',
            'reorderPointUnits' => 'accounting:string',
            'preferredStockLevel' => 'accounting:double',
            'preferredStockLevelUnits' => 'accounting:string',
            'demandModifier' => 'accounting:double',
            'autoReorderPoint' => 'accounting:boolean',
            'autoPreferredStockLevel' => 'accounting:boolean',
            'preferredStockLevelDays' => 'accounting:double',
            'defaultReturnCost' => 'accounting:double',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'supplyType' => 'core:RecordRef',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'demandSource' => 'core:RecordRef',
            'shipIndividually' => 'accounting:boolean',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'quantityOnOrder' => 'accounting:double',
            'shipPackage' => 'core:RecordRef',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'urlComponent' => 'accounting:string',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'shopzillaCategoryId' => 'accounting:long',
            'outOfStockMessage' => 'accounting:string',
            'nexTagCategory' => 'accounting:string',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'productFeedList' => 'accounting:ProductFeedList',
            'relatedItemsDescription' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'itemNumberOptionsList' => 'core:RecordRefList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'memberList' => 'accounting:ItemMemberList',
            'locationsList' => 'accounting:SerializedInventoryItemLocationsList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'binNumberList' => 'accounting:InventoryItemBinNumberList',
            'numbersList' => 'accounting:SerializedInventoryItemNumbersList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        LotNumberedAssemblyItem => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'printItems' => 'accounting:boolean',
            'isOnline' => 'accounting:boolean',
            'isGcoCompliant' => 'accounting:boolean',
            'offerSupport' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'availableToPartners' => 'accounting:boolean',
            'subsidiaryList' => 'core:RecordRefList',
            'department' => 'core:RecordRef',
            'includeChildren' => 'accounting:boolean',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'description' => 'accounting:string',
            'cogsAccount' => 'core:RecordRef',
            'incomeAccount' => 'core:RecordRef',
            'assetAccount' => 'core:RecordRef',
            'matchBillToReceipt' => 'accounting:boolean',
            'billQtyVarianceAcct' => 'core:RecordRef',
            'billPriceVarianceAcct' => 'core:RecordRef',
            'billExchRateVarianceAcct' => 'core:RecordRef',
            'gainLossAccount' => 'core:RecordRef',
            'salesTaxCode' => 'core:RecordRef',
            'purchaseTaxCode' => 'core:RecordRef',
            'prodQtyVarianceAcct' => 'core:RecordRef',
            'prodPriceVarianceAcct' => 'core:RecordRef',
            'purchasePriceVarianceAcct' => 'core:RecordRef',
            'wipVarianceAcct' => 'core:RecordRef',
            'taxSchedule' => 'core:RecordRef',
            'scrapAcct' => 'core:RecordRef',
            'shippingCost' => 'accounting:double',
            'wipAcct' => 'core:RecordRef',
            'handlingCost' => 'accounting:double',
            'weight' => 'accounting:double',
            'weightUnit' => 'accountingTypes:ItemWeightUnit',
            'costingMethod' => 'accountingTypes:ItemCostingMethod',
            'isTaxable' => 'accounting:boolean',
            'costingMethodDisplay' => 'accounting:string',
            'rate' => 'accounting:double',
            'unitsType' => 'core:RecordRef',
            'stockUnit' => 'core:RecordRef',
            'purchaseUnit' => 'core:RecordRef',
            'saleUnit' => 'core:RecordRef',
            'trackLandedCost' => 'accounting:boolean',
            'billingSchedule' => 'core:RecordRef',
            'deferredRevenueAccount' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'stockDescription' => 'accounting:string',
            'producer' => 'accounting:boolean',
            'manufacturer' => 'accounting:string',
            'mpn' => 'accounting:string',
            'multManufactureAddr' => 'accounting:boolean',
            'manufactureraddr1' => 'accounting:string',
            'manufacturerCity' => 'accounting:string',
            'manufacturerState' => 'accounting:string',
            'manufacturerZip' => 'accounting:string',
            'countryOfManufacture' => 'commonTypes:Country',
            'effectiveBomControl' => 'accountingTypes:AssemblyItemEffectiveBomControl',
            'manufacturerTaxId' => 'accounting:string',
            'defaultRevision' => 'accounting:string',
            'defaultItemShipMethod' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'scheduleBNumber' => 'accounting:string',
            'scheduleBQuantity' => 'accounting:long',
            'scheduleBCode' => 'core:RecordRef',
            'manufacturerTariff' => 'accounting:string',
            'preferenceCriterion' => 'accountingTypes:ItemPreferenceCriterion',
            'issueProduct' => 'core:RecordRef',
            'minimumQuantity' => 'accounting:long',
            'enforceMinQtyInternally' => 'accounting:boolean',
            'softDescriptor' => 'core:RecordRef',
            'isSpecialWorkOrderItem' => 'accounting:boolean',
            'pricesIncludeTax' => 'accounting:boolean',
            'quantityPricingSchedule' => 'core:RecordRef',
            'buildEntireAssembly' => 'accounting:boolean',
            'quantityOnHand' => 'accounting:double',
            'useMarginalRates' => 'accounting:boolean',
            'reorderMultiple' => 'accounting:long',
            'cost' => 'accounting:double',
            'costEstimateType' => 'commonTypes:ItemCostEstimateType',
            'isHazmatItem' => 'accounting:boolean',
            'hazmatId' => 'accounting:string',
            'hazmatShippingName' => 'accounting:string',
            'hazmatHazardClass' => 'accounting:string',
            'hazmatPackingGroup' => 'accountingTypes:HazmatPackingGroup',
            'hazmatItemUnits' => 'accounting:string',
            'hazmatItemUnitsQty' => 'accounting:double',
            'costEstimate' => 'accounting:double',
            'transferPrice' => 'accounting:double',
            'overallQuantityPricingType' => 'accountingTypes:ItemOverallQuantityPricingType',
            'pricingGroup' => 'core:RecordRef',
            'vsoePrice' => 'accounting:double',
            'vsoeSopGroup' => 'commonTypes:VsoeSopGroup',
            'vsoeDeferral' => 'commonTypes:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTypes:VsoePermitDiscount',
            'vsoeDelivered' => 'accounting:boolean',
            'unbuildVarianceAccount' => 'core:RecordRef',
            'dropshipExpenseAccount' => 'core:RecordRef',
            'preferredLocation' => 'core:RecordRef',
            'totalValue' => 'accounting:double',
            'useBins' => 'accounting:boolean',
            'averageCost' => 'accounting:double',
            'lastPurchasePrice' => 'accounting:double',
            'purchaseDescription' => 'accounting:string',
            'leadTime' => 'accounting:long',
            'autoLeadTime' => 'accounting:boolean',
            'buildTime' => 'accounting:long',
            'safetyStockLevel' => 'accounting:double',
            'safetyStockLevelDays' => 'accounting:long',
            'seasonalDemand' => 'accounting:boolean',
            'serialNumbers' => 'accounting:string',
            'reorderPoint' => 'accounting:double',
            'preferredStockLevel' => 'accounting:double',
            'expirationDate' => 'accounting:dateTime',
            'lastInvtCountDate' => 'accounting:dateTime',
            'nextInvtCountDate' => 'accounting:dateTime',
            'invtCountInterval' => 'accounting:long',
            'invtClassification' => 'accountingTypes:ItemInvtClassification',
            'demandModifier' => 'accounting:double',
            'autoReorderPoint' => 'accounting:boolean',
            'autoPreferredStockLevel' => 'accounting:boolean',
            'preferredStockLevelDays' => 'accounting:double',
            'shipIndividually' => 'accounting:boolean',
            'shipPackage' => 'core:RecordRef',
            'defaultReturnCost' => 'accounting:double',
            'supplyReplenishmentMethod' => 'core:RecordRef',
            'alternateDemandSourceItem' => 'core:RecordRef',
            'fixedLotSize' => 'accounting:double',
            'supplyType' => 'core:RecordRef',
            'supplyLotSizingMethod' => 'core:RecordRef',
            'demandSource' => 'core:RecordRef',
            'quantityCommitted' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityBackOrdered' => 'accounting:double',
            'quantityOnOrder' => 'accounting:double',
            'storeDisplayName' => 'accounting:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'storeDescription' => 'accounting:string',
            'storeDetailedDescription' => 'accounting:string',
            'storeItemTemplate' => 'core:RecordRef',
            'pageTitle' => 'accounting:string',
            'metaTagHtml' => 'accounting:string',
            'excludeFromSitemap' => 'accounting:boolean',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'urlComponent' => 'accounting:string',
            'searchKeywords' => 'accounting:string',
            'isDonationItem' => 'accounting:boolean',
            'showDefaultDonationAmount' => 'accounting:boolean',
            'maxDonationAmount' => 'accounting:double',
            'dontShowPrice' => 'accounting:boolean',
            'noPriceMessage' => 'accounting:string',
            'outOfStockMessage' => 'accounting:string',
            'shoppingDotComCategory' => 'accounting:string',
            'outOfStockBehavior' => 'accountingTypes:ItemOutOfStockBehavior',
            'shopzillaCategoryId' => 'accounting:long',
            'nexTagCategory' => 'accounting:string',
            'productFeedList' => 'accounting:ProductFeedList',
            'relatedItemsDescription' => 'accounting:string',
            'onSpecial' => 'accounting:boolean',
            'specialsDescription' => 'accounting:string',
            'featuredDescription' => 'accounting:string',
            'itemOptionsList' => 'accounting:ItemOptionsList',
            'itemNumberOptionsList' => 'core:RecordRefList',
            'itemVendorList' => 'accounting:ItemVendorList',
            'pricingMatrix' => 'accounting:PricingMatrix',
            'memberList' => 'accounting:ItemMemberList',
            'locationsList' => 'accounting:LotNumberedInventoryItemLocationsList',
            'siteCategoryList' => 'accounting:SiteCategoryList',
            'binNumberList' => 'accounting:InventoryItemBinNumberList',
            'numbersList' => 'accounting:LotNumberedInventoryItemNumbersList',
            'translationsList' => 'accounting:TranslationList',
            'presentationItemList' => 'accounting:PresentationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ServiceItemTaskTemplates => {
            'taskName' => 'accounting:string',
            'taskStartOffset' => 'accounting:long',
            'taskDuration' => 'core:Duration',
        },
    
        ServiceItemTaskTemplatesList => {
            'taskTemplates' => 'accounting:ServiceItemTaskTemplates',
        },
    
        State => {
            'country' => 'commonTypes:Country',
            'fullName' => 'accounting:string',
            'shortname' => 'accounting:string',
        },
    
        AccountingPeriod => {
            'periodName' => 'accounting:string',
            'parent' => 'core:RecordRef',
            'startDate' => 'accounting:dateTime',
            'endDate' => 'accounting:dateTime',
            'fiscalCalendar' => 'core:RecordRef',
            'closedOnDate' => 'accounting:dateTime',
            'isAdjust' => 'accounting:boolean',
            'fiscalCalendarsList' => 'accounting:AccountingPeriodFiscalCalendarsList',
            'isQuarter' => 'accounting:boolean',
            'isYear' => 'accounting:boolean',
            'closed' => 'accounting:boolean',
            'apLocked' => 'accounting:boolean',
            'arLocked' => 'accounting:boolean',
            'payrollLocked' => 'accounting:boolean',
            'allLocked' => 'accounting:boolean',
            'allowNonGLChanges' => 'accounting:boolean',
        },
    
        BudgetCategory => {
            'name' => 'accounting:string',
            'budgetType' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        AccountingPeriodSearchAdvanced => {
            'criteria' => 'accounting:AccountingPeriodSearch',
            'columns' => 'accounting:AccountingPeriodSearchRow',
        },
    
        AccountingPeriodSearchRow => {
            'basic' => 'common:AccountingPeriodSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        ContactCategorySearchAdvanced => {
            'criteria' => 'accounting:ContactCategorySearch',
            'columns' => 'accounting:ContactCategorySearchRow',
        },
    
        ContactCategorySearchRow => {
            'basic' => 'common:ContactCategorySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ContactRoleSearchAdvanced => {
            'criteria' => 'accounting:ContactRoleSearch',
            'columns' => 'accounting:ContactRoleSearchRow',
        },
    
        ContactRoleSearchRow => {
            'basic' => 'common:ContactRoleSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        CustomerCategorySearchAdvanced => {
            'criteria' => 'accounting:CustomerCategorySearch',
            'columns' => 'accounting:CustomerCategorySearchRow',
        },
    
        CustomerCategorySearchRow => {
            'basic' => 'common:CustomerCategorySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ExpenseCategorySearchAdvanced => {
            'criteria' => 'accounting:ExpenseCategorySearch',
            'columns' => 'accounting:ExpenseCategorySearchRow',
        },
    
        ExpenseCategorySearchRow => {
            'basic' => 'common:ExpenseCategorySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        NoteTypeSearchAdvanced => {
            'criteria' => 'accounting:NoteTypeSearch',
            'columns' => 'accounting:NoteTypeSearchRow',
        },
    
        NoteTypeSearchRow => {
            'basic' => 'common:NoteTypeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        PartnerCategorySearchAdvanced => {
            'criteria' => 'accounting:PartnerCategorySearch',
            'columns' => 'accounting:PartnerCategorySearchRow',
        },
    
        PartnerCategorySearchRow => {
            'basic' => 'common:PartnerCategorySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        PaymentMethodSearchAdvanced => {
            'criteria' => 'accounting:PaymentMethodSearch',
            'columns' => 'accounting:PaymentMethodSearchRow',
        },
    
        PaymentMethodSearchRow => {
            'basic' => 'common:PaymentMethodSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        PriceLevelSearchAdvanced => {
            'criteria' => 'accounting:PriceLevelSearch',
            'columns' => 'accounting:PriceLevelSearchRow',
        },
    
        PriceLevelSearchRow => {
            'basic' => 'common:PriceLevelSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        SalesRoleSearchAdvanced => {
            'criteria' => 'accounting:SalesRoleSearch',
            'columns' => 'accounting:SalesRoleSearchRow',
        },
    
        SalesRoleSearchRow => {
            'basic' => 'common:SalesRoleSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        TermSearchAdvanced => {
            'criteria' => 'accounting:TermSearch',
            'columns' => 'accounting:TermSearchRow',
        },
    
        TermSearchRow => {
            'basic' => 'common:TermSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        VendorCategorySearchAdvanced => {
            'criteria' => 'accounting:VendorCategorySearch',
            'columns' => 'accounting:VendorCategorySearchRow',
        },
    
        VendorCategorySearchRow => {
            'basic' => 'common:VendorCategorySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        WinLossReasonSearchAdvanced => {
            'criteria' => 'accounting:WinLossReasonSearch',
            'columns' => 'accounting:WinLossReasonSearchRow',
        },
    
        WinLossReasonSearchRow => {
            'basic' => 'common:WinLossReasonSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        UnitsTypeSearchAdvanced => {
            'criteria' => 'accounting:UnitsTypeSearch',
            'columns' => 'accounting:UnitsTypeSearchRow',
        },
    
        UnitsTypeSearchRow => {
            'basic' => 'common:UnitsTypeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        PricingGroup => {
            'name' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        PricingGroupSearchAdvanced => {
            'criteria' => 'accounting:PricingGroupSearch',
            'columns' => 'accounting:PricingGroupSearchRow',
        },
    
        PricingGroupSearchRow => {
            'basic' => 'common:PricingGroupSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        InventoryNumber => {
            'inventoryNumber' => 'accounting:string',
            'item' => 'core:RecordRef',
            'status' => 'accounting:string',
            'units' => 'accounting:string',
            'expirationDate' => 'accounting:dateTime',
            'memo' => 'accounting:string',
            'locationsList' => 'accounting:InventoryNumberLocationsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InventoryNumberLocations => {
            'location' => 'accounting:string',
            'quantityOnHand' => 'accounting:double',
            'quantityAvailable' => 'accounting:double',
            'quantityOnOrder' => 'accounting:double',
            'quantityInTransit' => 'accounting:double',
        },
    
        InventoryNumberLocationsList => {
            'locations' => 'accounting:InventoryNumberLocations',
        },
    
        InventoryNumberSearchAdvanced => {
            'criteria' => 'accounting:InventoryNumberSearch',
            'columns' => 'accounting:InventoryNumberSearchRow',
        },
    
        InventoryNumberSearchRow => {
            'basic' => 'common:InventoryNumberSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        RevRecSchedule => {
            'name' => 'accounting:string',
            'amortizationType' => 'accountingTypes:RevRecScheduleAmortizationType',
            'recurrenceType' => 'accountingTypes:RevRecScheduleRecurrenceType',
            'recogIntervalSrc' => 'accountingTypes:RevRecScheduleRecogIntervalSrc',
            'amortizationPeriod' => 'accounting:long',
            'periodOffset' => 'accounting:long',
            'revRecOffset' => 'accounting:long',
            'initialAmount' => 'accounting:double',
            'isInactive' => 'accounting:boolean',
            'recurrenceList' => 'accounting:RevRecScheduleRecurrenceList',
        },
    
        RevRecScheduleRecurrence => {
            'incomeaccount' => 'core:RecordRef',
            'periodOffset' => 'accounting:long',
            'recamount' => 'accounting:string',
        },
    
        RevRecScheduleRecurrenceList => {
            'revRecScheduleRecurrence' => 'accounting:RevRecScheduleRecurrence',
        },
    
        RevRecTemplate => {
            'name' => 'accounting:string',
            'amortizationType' => 'accountingTypes:RevRecScheduleAmortizationType',
            'recurrenceType' => 'accountingTypes:RevRecScheduleRecurrenceType',
            'recogIntervalSrc' => 'accountingTypes:RevRecScheduleRecogIntervalSrc',
            'amortizationPeriod' => 'accounting:long',
            'periodOffset' => 'accounting:long',
            'revRecOffset' => 'accounting:long',
            'initialAmount' => 'accounting:double',
            'isInactive' => 'accounting:boolean',
            'recurrenceList' => 'accounting:RevRecTemplateRecurrenceList',
        },
    
        RevRecTemplateRecurrence => {
            'incomeaccount' => 'core:RecordRef',
            'periodOffset' => 'accounting:long',
            'recamount' => 'accounting:string',
        },
    
        RevRecTemplateRecurrenceList => {
            'revRecTemplateRecurrence' => 'accounting:RevRecTemplateRecurrence',
        },
    
        RevRecScheduleSearchAdvanced => {
            'criteria' => 'accounting:RevRecScheduleSearch',
            'columns' => 'accounting:RevRecScheduleSearchRow',
        },
    
        RevRecScheduleSearchRow => {
            'basic' => 'common:RevRecScheduleSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        RevRecTemplateSearchAdvanced => {
            'criteria' => 'accounting:RevRecTemplateSearch',
            'columns' => 'accounting:RevRecTemplateSearchRow',
        },
    
        RevRecTemplateSearchRow => {
            'basic' => 'common:RevRecTemplateSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        CostCategory => {
            'name' => 'accounting:string',
            'account' => 'core:RecordRef',
            'itemCostType' => 'accountingTypes:CostCategoryItemCostType',
            'isInactive' => 'accounting:boolean',
        },
    
        Nexus => {
            'country' => 'commonTypes:Country',
            'state' => 'core:RecordRef',
            'taxAgency' => 'core:RecordRef',
            'taxAgencyPst' => 'core:RecordRef',
            'taxCode' => 'core:RecordRef',
            'description' => 'accounting:string',
        },
    
        NexusSearchAdvanced => {
            'criteria' => 'accounting:NexusSearch',
            'columns' => 'accounting:NexusSearchRow',
        },
    
        NexusSearchRow => {
            'basic' => 'common:NexusSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        CustomerMessage => {
            'name' => 'accounting:string',
            'description' => 'accounting:string',
            'preferred' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
        },
    
        OtherNameCategory => {
            'name' => 'accounting:string',
            'isInactive' => 'accounting:boolean',
        },
    
        OtherNameCategorySearchAdvanced => {
            'criteria' => 'accounting:OtherNameCategorySearch',
            'columns' => 'accounting:OtherNameCategorySearchRow',
        },
    
        OtherNameCategorySearchRow => {
            'basic' => 'common:OtherNameCategorySearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        CustomerMessageSearchAdvanced => {
            'criteria' => 'accounting:CustomerMessageSearch',
            'columns' => 'accounting:CustomerMessageSearchRow',
        },
    
        CustomerMessageSearchRow => {
            'basic' => 'common:CustomerMessageSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ItemGroup => {
            'createdDate' => 'accounting:dateTime',
            'lastModifiedDate' => 'accounting:dateTime',
            'customForm' => 'core:RecordRef',
            'includeStartEndLines' => 'accounting:boolean',
            'isVsoeBundle' => 'accounting:boolean',
            'defaultItemShipMethod' => 'core:RecordRef',
            'availableToPartners' => 'accounting:boolean',
            'isInactive' => 'accounting:boolean',
            'itemId' => 'accounting:string',
            'upcCode' => 'accounting:string',
            'displayName' => 'accounting:string',
            'vendorName' => 'accounting:string',
            'issueProduct' => 'core:RecordRef',
            'parent' => 'core:RecordRef',
            'description' => 'accounting:string',
            'subsidiaryList' => 'core:RecordRefList',
            'includeChildren' => 'accounting:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'itemCarrier' => 'accountingTypes:ItemCarrier',
            'itemShipMethodList' => 'core:RecordRefList',
            'printItems' => 'accounting:boolean',
            'memberList' => 'accounting:ItemMemberList',
            'translationsList' => 'accounting:TranslationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CurrencyRate => {
            'baseCurrency' => 'core:RecordRef',
            'transactionCurrency' => 'core:RecordRef',
            'exchangeRate' => 'accounting:double',
            'effectiveDate' => 'accounting:dateTime',
        },
    
        CurrencyRateSearchAdvanced => {
            'criteria' => 'accounting:CurrencyRateSearch',
            'columns' => 'accounting:CurrencyRateSearchRow',
        },
    
        CurrencyRateSearchRow => {
            'basic' => 'common:CurrencyRateSearchRowBasic',
        },
    
        ItemRevision => {
            'item' => 'core:RecordRef',
            'name' => 'accounting:string',
            'effectiveDate' => 'accounting:dateTime',
            'obsoleteDate' => 'accounting:dateTime',
            'memo' => 'accounting:string',
            'inactive' => 'accounting:boolean',
        },
    
        ItemRevisionSearchAdvanced => {
            'criteria' => 'accounting:ItemRevisionSearch',
            'columns' => 'accounting:ItemRevisionSearchRow',
        },
    
        ItemRevisionSearchRow => {
            'basic' => 'common:ItemRevisionSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        AccountingPeriodFiscalCalendars => {
            'fiscalCalendar' => 'core:RecordRef',
            'parent' => 'core:RecordRef',
        },
    
        AccountingPeriodFiscalCalendarsList => {
            'accountingPeriodFiscalCalendars' => 'accounting:AccountingPeriodFiscalCalendars',
        },
    
        Opportunity => {
            'customForm' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'estimatedBudget' => 'sales:double',
            'entity' => 'core:RecordRef',
            'job' => 'core:RecordRef',
            'title' => 'sales:string',
            'tranId' => 'sales:string',
            'source' => 'sales:string',
            'salesRep' => 'core:RecordRef',
            'contribPct' => 'sales:string',
            'partner' => 'core:RecordRef',
            'salesGroup' => 'core:RecordRef',
            'syncSalesTeams' => 'sales:boolean',
            'leadSource' => 'core:RecordRef',
            'entityStatus' => 'core:RecordRef',
            'probability' => 'sales:double',
            'tranDate' => 'sales:dateTime',
            'expectedCloseDate' => 'sales:dateTime',
            'daysOpen' => 'sales:long',
            'forecastType' => 'core:RecordRef',
            'currencyName' => 'sales:string',
            'exchangeRate' => 'sales:double',
            'projectedTotal' => 'sales:double',
            'rangeLow' => 'sales:double',
            'rangeHigh' => 'sales:double',
            'projAltSalesAmt' => 'sales:double',
            'altSalesRangeLow' => 'sales:double',
            'altSalesRangeHigh' => 'sales:double',
            'weightedTotal' => 'sales:double',
            'actionItem' => 'sales:string',
            'winLossReason' => 'core:RecordRef',
            'memo' => 'sales:string',
            'taxTotal' => 'sales:double',
            'isBudgetApproved' => 'sales:boolean',
            'tax2Total' => 'sales:double',
            'salesReadiness' => 'core:RecordRef',
            'totalCostEstimate' => 'sales:double',
            'buyingTimeFrame' => 'core:RecordRef',
            'estGrossProfit' => 'sales:double',
            'buyingReason' => 'core:RecordRef',
            'estGrossProfitPercent' => 'sales:double',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'sales:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'sales:string',
            'class' => 'core:RecordRef',
            'closeDate' => 'sales:dateTime',
            'createdDate' => 'sales:dateTime',
            'lastModifiedDate' => 'sales:dateTime',
            'department' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'status' => 'sales:string',
            'vatRegNum' => 'sales:string',
            'syncPartnerTeams' => 'sales:boolean',
            'salesTeamList' => 'sales:OpportunitySalesTeamList',
            'partnersList' => 'sales:OpportunityPartnersList',
            'itemList' => 'sales:OpportunityItemList',
            'competitorsList' => 'sales:OpportunityCompetitorsList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        OpportunitySalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'sales:boolean',
            'contribution' => 'sales:double',
        },
    
        OpportunitySalesTeamList => {
            'salesTeam' => 'sales:OpportunitySalesTeam',
        },
    
        OpportunityItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'line' => 'sales:long',
            'quantityAvailable' => 'sales:double',
            'quantityOnHand' => 'sales:double',
            'quantity' => 'sales:double',
            'units' => 'core:RecordRef',
            'description' => 'sales:string',
            'price' => 'core:RecordRef',
            'rate' => 'sales:string',
            'amount' => 'sales:double',
            'altSalesAmt' => 'sales:double',
            'revRecTermInMonths' => 'sales:long',
            'options' => 'core:CustomFieldList',
            'fromJob' => 'sales:boolean',
            'department' => 'core:RecordRef',
            'isEstimate' => 'sales:boolean',
            'location' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'sales:double',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
            'expectedShipDate' => 'sales:dateTime',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        OpportunityItemList => {
            'item' => 'sales:OpportunityItem',
        },
    
        OpportunityCompetitors => {
            'competitor' => 'core:RecordRef',
            'url' => 'sales:string',
            'notes' => 'sales:string',
            'strategy' => 'sales:string',
            'winner' => 'sales:boolean',
        },
    
        OpportunityCompetitorsList => {
            'competitors' => 'sales:OpportunityCompetitors',
        },
    
        OpportunitySearchAdvanced => {
            'criteria' => 'sales:OpportunitySearch',
            'columns' => 'sales:OpportunitySearchRow',
        },
    
        OpportunitySearchRow => {
            'basic' => 'common:OpportunitySearchRowBasic',
            'actualJoin' => 'common:TransactionSearchRowBasic',
            'callJoin' => 'common:PhoneCallSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'decisionMakerJoin' => 'common:ContactSearchRowBasic',
            'estimateJoin' => 'common:TransactionSearchRowBasic',
            'eventJoin' => 'common:CalendarEventSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'leadSourceJoin' => 'common:CampaignSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'orderJoin' => 'common:TransactionSearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'partnerJoin' => 'common:PartnerSearchRowBasic',
            'salesRepJoin' => 'common:EmployeeSearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        OpportunityPartnersList => {
            'partners' => 'common:Partners',
        },
    
        SalesOrder => {
            'createdDate' => 'sales:dateTime',
            'customForm' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'job' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'drAccount' => 'core:RecordRef',
            'fxAccount' => 'core:RecordRef',
            'tranDate' => 'sales:dateTime',
            'tranId' => 'sales:string',
            'source' => 'sales:string',
            'createdFrom' => 'core:RecordRef',
            'orderStatus' => 'salesTypes:SalesOrderOrderStatus',
            'opportunity' => 'core:RecordRef',
            'salesRep' => 'core:RecordRef',
            'contribPct' => 'sales:string',
            'partner' => 'core:RecordRef',
            'salesGroup' => 'core:RecordRef',
            'syncSalesTeams' => 'sales:boolean',
            'leadSource' => 'core:RecordRef',
            'startDate' => 'sales:dateTime',
            'endDate' => 'sales:dateTime',
            'otherRefNum' => 'sales:string',
            'memo' => 'sales:string',
            'salesEffectiveDate' => 'sales:dateTime',
            'excludeCommission' => 'sales:boolean',
            'totalCostEstimate' => 'sales:double',
            'estGrossProfit' => 'sales:double',
            'estGrossProfitPercent' => 'sales:double',
            'exchangeRate' => 'sales:double',
            'promoCode' => 'core:RecordRef',
            'currencyName' => 'sales:string',
            'discountItem' => 'core:RecordRef',
            'discountRate' => 'sales:string',
            'isTaxable' => 'sales:boolean',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'sales:double',
            'toBePrinted' => 'sales:boolean',
            'toBeEmailed' => 'sales:boolean',
            'email' => 'sales:string',
            'toBeFaxed' => 'sales:boolean',
            'fax' => 'sales:string',
            'messageSel' => 'core:RecordRef',
            'message' => 'sales:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'sales:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'sales:string',
            'fob' => 'sales:string',
            'shipDate' => 'sales:dateTime',
            'actualShipDate' => 'sales:dateTime',
            'shipMethod' => 'core:RecordRef',
            'shippingCost' => 'sales:double',
            'shippingTax1Rate' => 'sales:double',
            'isMultiShipTo' => 'sales:boolean',
            'shippingTax2Rate' => 'sales:string',
            'shippingTaxCode' => 'core:RecordRef',
            'handlingTaxCode' => 'core:RecordRef',
            'handlingTax1Rate' => 'sales:double',
            'handlingTax2Rate' => 'sales:string',
            'handlingCost' => 'sales:double',
            'trackingNumbers' => 'sales:string',
            'linkedTrackingNumbers' => 'sales:string',
            'shipComplete' => 'sales:boolean',
            'paymentMethod' => 'core:RecordRef',
            'shopperIpAddress' => 'sales:string',
            'saveOnAuthDecline' => 'sales:boolean',
            'creditCard' => 'core:RecordRef',
            'revenueStatus' => 'commonTypes:RevenueStatus',
            'recognizedRevenue' => 'sales:double',
            'deferredRevenue' => 'sales:double',
            'revRecOnRevCommitment' => 'sales:boolean',
            'revCommitStatus' => 'commonTypes:RevenueCommitStatus',
            'ccNumber' => 'sales:string',
            'ccExpireDate' => 'sales:dateTime',
            'ccName' => 'sales:string',
            'ccStreet' => 'sales:string',
            'ccZipCode' => 'sales:string',
            'payPalStatus' => 'sales:string',
            'creditCardProcessor' => 'core:RecordRef',
            'payPalTranId' => 'sales:string',
            'ccApproved' => 'sales:boolean',
            'getAuth' => 'sales:boolean',
            'authCode' => 'sales:string',
            'ccAvsStreetMatch' => 'commonTypes:AvsMatchCode',
            'ccAvsZipMatch' => 'commonTypes:AvsMatchCode',
            'ccSecurityCodeMatch' => 'commonTypes:AvsMatchCode',
            'altSalesTotal' => 'sales:double',
            'ignoreAvs' => 'sales:boolean',
            'paymentEventResult' => 'salesTypes:TransactionPaymentEventResult',
            'paymentEventHoldReason' => 'salesTypes:TransactionPaymentEventHoldReason',
            'paymentEventType' => 'salesTypes:TransactionPaymentEventType',
            'paymentEventDate' => 'sales:dateTime',
            'paymentEventUpdatedBy' => 'sales:string',
            'subTotal' => 'sales:double',
            'discountTotal' => 'sales:double',
            'taxTotal' => 'sales:double',
            'altShippingCost' => 'sales:double',
            'altHandlingCost' => 'sales:double',
            'total' => 'sales:double',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'paypalAuthId' => 'sales:string',
            'balance' => 'sales:double',
            'paypalProcess' => 'sales:boolean',
            'billingSchedule' => 'core:RecordRef',
            'ccSecurityCode' => 'sales:string',
            'threeDStatusCode' => 'sales:string',
            'class' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'intercoTransaction' => 'core:RecordRef',
            'intercoStatus' => 'commonTypes:IntercoStatus',
            'debitCardIssueNo' => 'sales:string',
            'lastModifiedDate' => 'sales:dateTime',
            'location' => 'core:RecordRef',
            'pnRefNum' => 'sales:string',
            'status' => 'sales:string',
            'tax2Total' => 'sales:double',
            'terms' => 'core:RecordRef',
            'validFrom' => 'sales:dateTime',
            'vatRegNum' => 'sales:string',
            'giftCertApplied' => 'sales:double',
            'tranIsVsoeBundle' => 'sales:boolean',
            'vsoeAutoCalc' => 'sales:boolean',
            'syncPartnerTeams' => 'sales:boolean',
            'salesTeamList' => 'sales:SalesOrderSalesTeamList',
            'partnersList' => 'sales:SalesOrderPartnersList',
            'giftCertRedemptionList' => 'sales:GiftCertRedemptionList',
            'itemList' => 'sales:SalesOrderItemList',
            'shipGroupList' => 'sales:SalesOrderShipGroupList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SalesOrderSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'sales:boolean',
            'contribution' => 'sales:double',
        },
    
        SalesOrderSalesTeamList => {
            'salesTeam' => 'sales:SalesOrderSalesTeam',
        },
    
        SalesOrderItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'quantityAvailable' => 'sales:double',
            'quantityOnHand' => 'sales:double',
            'quantity' => 'sales:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'description' => 'sales:string',
            'price' => 'core:RecordRef',
            'rate' => 'sales:string',
            'serialNumbers' => 'sales:string',
            'amount' => 'sales:double',
            'isTaxable' => 'sales:boolean',
            'commitInventory' => 'salesTypes:SalesOrderItemCommitInventory',
            'licenseCode' => 'sales:string',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'createPo' => 'salesTypes:SalesOrderItemCreatePo',
            'createdPo' => 'core:RecordRef',
            'altSalesAmt' => 'sales:double',
            'createWo' => 'sales:boolean',
            'poVendor' => 'core:RecordRef',
            'poCurrency' => 'sales:string',
            'poRate' => 'sales:double',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecTermInMonths' => 'sales:long',
            'revRecEndDate' => 'sales:dateTime',
            'deferRevRec' => 'sales:boolean',
            'isClosed' => 'sales:boolean',
            'billingSchedule' => 'core:RecordRef',
            'fromJob' => 'sales:boolean',
            'grossAmt' => 'sales:double',
            'isEstimate' => 'sales:boolean',
            'line' => 'sales:long',
            'percentComplete' => 'sales:double',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'sales:double',
            'quantityBackOrdered' => 'sales:double',
            'quantityBilled' => 'sales:double',
            'quantityCommitted' => 'sales:double',
            'quantityFulfilled' => 'sales:double',
            'quantityPacked' => 'sales:double',
            'quantityPicked' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
            'giftCertFrom' => 'sales:string',
            'giftCertRecipientName' => 'sales:string',
            'giftCertRecipientEmail' => 'sales:string',
            'giftCertMessage' => 'sales:string',
            'giftCertNumber' => 'sales:string',
            'shipGroup' => 'sales:long',
            'itemIsFulfilled' => 'sales:boolean',
            'shipAddress' => 'core:RecordRef',
            'shipMethod' => 'core:RecordRef',
            'vsoeSopGroup' => 'commonTyp:VsoeSopGroup',
            'vsoeIsEstimate' => 'sales:boolean',
            'vsoePrice' => 'sales:double',
            'vsoeAmount' => 'sales:double',
            'vsoeAllocation' => 'sales:double',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'sales:boolean',
            'expectedShipDate' => 'sales:dateTime',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        SalesOrderItemList => {
            'item' => 'sales:SalesOrderItem',
        },
    
        SalesOrderPartnersList => {
            'partners' => 'common:Partners',
        },
    
        SalesOrderShipGroupList => {
            'shipGroup' => 'sales:TransactionShipGroup',
        },
    
        TransactionSearchAdvanced => {
            'criteria' => 'sales:TransactionSearch',
            'columns' => 'sales:TransactionSearchRow',
        },
    
        TransactionSearchRow => {
            'basic' => 'common:TransactionSearchRowBasic',
            'accountJoin' => 'common:AccountSearchRowBasic',
            'accountingPeriodJoin' => 'common:AccountingPeriodSearchRowBasic',
            'appliedToTransactionJoin' => 'common:TransactionSearchRowBasic',
            'applyingTransactionJoin' => 'common:TransactionSearchRowBasic',
            'billingTransactionJoin' => 'common:TransactionSearchRowBasic',
            'binNumberJoin' => 'common:BinSearchRowBasic',
            'callJoin' => 'common:PhoneCallSearchRowBasic',
            'classJoin' => 'common:ClassificationSearchRowBasic',
            'cogsPurchaseJoin' => 'common:TransactionSearchRowBasic',
            'cogsSaleJoin' => 'common:TransactionSearchRowBasic',
            'contactPrimaryJoin' => 'common:ContactSearchRowBasic',
            'createdFromJoin' => 'common:TransactionSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'customerMainJoin' => 'common:CustomerSearchRowBasic',
            'departmentJoin' => 'common:DepartmentSearchRowBasic',
            'depositTransactionJoin' => 'common:TransactionSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'eventJoin' => 'common:CalendarEventSearchRowBasic',
            'expenseCategoryJoin' => 'common:ExpenseCategorySearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'fulfillingTransactionJoin' => 'common:TransactionSearchRowBasic',
            'inventoryDetailJoin' => 'common:InventoryDetailSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'itemNumberJoin' => 'common:InventoryNumberSearchRowBasic',
            'jobJoin' => 'common:JobSearchRowBasic',
            'jobMainJoin' => 'common:JobSearchRowBasic',
            'leadSourceJoin' => 'common:CampaignSearchRowBasic',
            'locationJoin' => 'common:LocationSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'opportunityJoin' => 'common:OpportunitySearchRowBasic',
            'paidTransactionJoin' => 'common:TransactionSearchRowBasic',
            'payingTransactionJoin' => 'common:TransactionSearchRowBasic',
            'purchaseOrderJoin' => 'common:TransactionSearchRowBasic',
            'requestorJoin' => 'common:EmployeeSearchRowBasic',
            'revCommittingTransactionJoin' => 'common:TransactionSearchRowBasic',
            'revisionJoin' => 'common:ItemRevisionSearchRowBasic',
            'rgPostingTransactionJoin' => 'common:TransactionSearchRowBasic',
            'salesOrderJoin' => 'common:TransactionSearchRowBasic',
            'salesRepJoin' => 'common:EmployeeSearchRowBasic',
            'subsidiaryJoin' => 'common:SubsidiarySearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
            'vendorJoin' => 'common:VendorSearchRowBasic',
        },
    
        ItemFulfillment => {
            'createdDate' => 'sales:dateTime',
            'lastModifiedDate' => 'sales:dateTime',
            'customForm' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'createdFrom' => 'core:RecordRef',
            'createdFromShipGroup' => 'sales:long',
            'partner' => 'core:RecordRef',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'sales:string',
            'shipStatus' => 'salesTypes:ItemFulfillmentShipStatus',
            'saturdayDeliveryUps' => 'sales:boolean',
            'sendShipNotifyEmailUps' => 'sales:boolean',
            'sendBackupEmailUps' => 'sales:boolean',
            'shipNotifyEmailAddressUps' => 'sales:string',
            'shipNotifyEmailAddress2Ups' => 'sales:string',
            'backupEmailAddressUps' => 'sales:string',
            'shipNotifyEmailMessageUps' => 'sales:string',
            'thirdPartyAcctUps' => 'sales:string',
            'thirdPartyZipcodeUps' => 'sales:string',
            'thirdPartyCountryUps' => 'commonTypes:Country',
            'thirdPartyTypeUps' => 'salesTypes:ItemFulfillmentThirdPartyTypeUps',
            'partiesToTransactionUps' => 'sales:boolean',
            'exportTypeUps' => 'salesTypes:ItemFulfillmentExportTypeUps',
            'methodOfTransportUps' => 'salesTypes:ItemFulfillmentMethodOfTransportUps',
            'carrierIdUps' => 'sales:string',
            'entryNumberUps' => 'sales:string',
            'inbondCodeUps' => 'sales:string',
            'isRoutedExportTransactionUps' => 'sales:boolean',
            'licenseNumberUps' => 'sales:string',
            'licenseDateUps' => 'sales:dateTime',
            'licenseExceptionUps' => 'salesTypes:ItemFulfillmentLicenseExceptionUps',
            'eccNumberUps' => 'sales:string',
            'recipientTaxIdUps' => 'sales:string',
            'blanketStartDateUps' => 'sales:dateTime',
            'blanketEndDateUps' => 'sales:dateTime',
            'shipmentWeightUps' => 'sales:double',
            'saturdayDeliveryFedEx' => 'sales:boolean',
            'saturdayPickupFedex' => 'sales:boolean',
            'sendShipNotifyEmailFedEx' => 'sales:boolean',
            'sendBackupEmailFedEx' => 'sales:boolean',
            'signatureHomeDeliveryFedEx' => 'sales:boolean',
            'shipNotifyEmailAddressFedEx' => 'sales:string',
            'backupEmailAddressFedEx' => 'sales:string',
            'shipDateFedEx' => 'sales:dateTime',
            'homeDeliveryTypeFedEx' => 'salesTypes:ItemFulfillmentHomeDeliveryTypeFedEx',
            'homeDeliveryDateFedEx' => 'sales:dateTime',
            'bookingConfirmationNumFedEx' => 'sales:string',
            'intlExemptionNumFedEx' => 'sales:string',
            'b13aFilingOptionFedEx' => 'salesTypes:ItemFulfillmentB13AFilingOptionFedEx',
            'b13aStatementDataFedEx' => 'sales:string',
            'thirdPartyAcctFedEx' => 'sales:string',
            'thirdPartyCountryFedEx' => 'commonTypes:Country',
            'thirdPartyTypeFedEx' => 'salesTypes:ItemFulfillmentThirdPartyTypeFedEx',
            'shipmentWeightFedEx' => 'sales:double',
            'termsOfSaleFedEx' => 'salesTypes:ItemFulfillmentTermsOfSaleFedEx',
            'termsFreightChargeFedEx' => 'sales:double',
            'termsInsuranceChargeFedEx' => 'sales:double',
            'insideDeliveryFedEx' => 'sales:boolean',
            'insidePickupFedEx' => 'sales:boolean',
            'ancillaryEndorsementFedEx' => 'salesTypes:ItemFulfillmentAncillaryEndorsementFedEx',
            'holdAtLocationFedEx' => 'sales:boolean',
            'halPhoneFedEx' => 'sales:string',
            'halAddr1FedEx' => 'sales:string',
            'halAddr2FedEx' => 'sales:string',
            'halAddr3FedEx' => 'sales:string',
            'halCityFedEx' => 'sales:string',
            'halZipFedEx' => 'sales:string',
            'halStateFedEx' => 'sales:string',
            'halCountryFedEx' => 'sales:string',
            'hazmatTypeFedEx' => 'salesTypes:ItemFulfillmentHazmatTypeFedEx',
            'accessibilityTypeFedEx' => 'salesTypes:ItemFulfillmentAccessibilityTypeFedEx',
            'isCargoAircraftOnlyFedEx' => 'sales:boolean',
            'tranDate' => 'sales:dateTime',
            'tranId' => 'sales:string',
            'shipMethod' => 'core:RecordRef',
            'generateIntegratedShipperLabel' => 'sales:boolean',
            'shippingCost' => 'sales:double',
            'handlingCost' => 'sales:double',
            'memo' => 'sales:string',
            'transferLocation' => 'core:RecordRef',
            'packageList' => 'sales:ItemFulfillmentPackageList',
            'packageUpsList' => 'sales:ItemFulfillmentPackageUpsList',
            'packageUspsList' => 'sales:ItemFulfillmentPackageUspsList',
            'packageFedExList' => 'sales:ItemFulfillmentPackageFedExList',
            'itemList' => 'sales:ItemFulfillmentItemList',
            'shipGroupList' => 'sales:ItemFulfillmentShipGroupList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ItemFulfillmentItem => {
            'jobName' => 'sales:string',
            'itemReceive' => 'sales:boolean',
            'itemName' => 'sales:string',
            'description' => 'sales:string',
            'location' => 'core:RecordRef',
            'onHand' => 'sales:double',
            'quantity' => 'sales:double',
            'unitsDisplay' => 'sales:string',
            'createPo' => 'sales:string',
            'inventoryDetail' => 'common:InventoryDetail',
            'binNumbers' => 'sales:string',
            'serialNumbers' => 'sales:string',
            'poNum' => 'sales:string',
            'item' => 'core:RecordRef',
            'orderLine' => 'sales:long',
            'quantityRemaining' => 'sales:double',
            'options' => 'core:CustomFieldList',
            'shipGroup' => 'sales:long',
            'itemIsFulfilled' => 'sales:boolean',
            'shipAddress' => 'core:RecordRef',
            'shipMethod' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ItemFulfillmentItemList => {
            'item' => 'sales:ItemFulfillmentItem',
        },
    
        ItemFulfillmentPackage => {
            'packageWeight' => 'sales:double',
            'packageDescr' => 'sales:string',
            'packageTrackingNumber' => 'sales:string',
        },
    
        ItemFulfillmentPackageList => {
            'package' => 'sales:ItemFulfillmentPackage',
        },
    
        ItemFulfillmentPackageUps => {
            'packageWeightUps' => 'sales:double',
            'packageDescrUps' => 'sales:string',
            'packageTrackingNumberUps' => 'sales:string',
            'packagingUps' => 'salesTypes:ItemFulfillmentPackageUpsPackagingUps',
            'useInsuredValueUps' => 'sales:boolean',
            'insuredValueUps' => 'sales:double',
            'reference1Ups' => 'sales:string',
            'reference2Ups' => 'sales:string',
            'packageLengthUps' => 'sales:long',
            'packageWidthUps' => 'sales:long',
            'packageHeightUps' => 'sales:long',
            'additionalHandlingUps' => 'sales:boolean',
            'useCodUps' => 'sales:boolean',
            'codAmountUps' => 'sales:double',
            'codMethodUps' => 'salesTypes:ItemFulfillmentPackageUpsCodMethodUps',
            'deliveryConfUps' => 'salesTypes:ItemFulfillmentPackageUpsDeliveryConfUps',
        },
    
        ItemFulfillmentPackageUpsList => {
            'packageUps' => 'sales:ItemFulfillmentPackageUps',
        },
    
        ItemFulfillmentPackageUsps => {
            'packageWeightUsps' => 'sales:double',
            'packageDescrUsps' => 'sales:string',
            'packageTrackingNumberUsps' => 'sales:string',
            'packagingUsps' => 'salesTypes:ItemFulfillmentPackageUspsPackagingUsps',
            'useInsuredValueUsps' => 'sales:boolean',
            'insuredValueUsps' => 'sales:double',
            'reference1Usps' => 'sales:string',
            'reference2Usps' => 'sales:string',
            'packageLengthUsps' => 'sales:long',
            'packageWidthUsps' => 'sales:long',
            'packageHeightUsps' => 'sales:long',
            'deliveryConfUsps' => 'salesTypes:ItemFulfillmentPackageUspsDeliveryConfUsps',
        },
    
        ItemFulfillmentPackageUspsList => {
            'packageUsps' => 'sales:ItemFulfillmentPackageUsps',
        },
    
        ItemFulfillmentPackageFedEx => {
            'packageWeightFedEx' => 'sales:double',
            'dryIceWeightFedEx' => 'sales:double',
            'packageTrackingNumberFedEx' => 'sales:string',
            'packagingFedEx' => 'salesTypes:ItemFulfillmentPackageFedExPackagingFedEx',
            'admPackageTypeFedEx' => 'salesTypes:ItemFulfillmentPackageFedExAdmPackageTypeFedEx',
            'isNonStandardContainerFedEx' => 'sales:boolean',
            'isAlcoholFedEx' => 'sales:boolean',
            'isNonHazLithiumFedEx' => 'sales:boolean',
            'insuredValueFedEx' => 'sales:double',
            'useInsuredValueFedEx' => 'sales:boolean',
            'reference1FedEx' => 'sales:string',
            'priorityAlertTypeFedEx' => 'salesTypes:ItemFulfillmentPackageFedExPriorityAlertTypeFedEx',
            'priorityAlertContentFedEx' => 'sales:string',
            'packageLengthFedEx' => 'sales:long',
            'packageWidthFedEx' => 'sales:long',
            'packageHeightFedEx' => 'sales:long',
            'useCodFedEx' => 'sales:boolean',
            'codAmountFedEx' => 'sales:double',
            'codMethodFedEx' => 'salesTypes:ItemFulfillmentPackageFedExCodMethodFedEx',
            'codFreightTypeFedEx' => 'salesTypes:ItemFulfillmentPackageFedExCodFreightTypeFedEx',
            'deliveryConfFedEx' => 'salesTypes:ItemFulfillmentPackageFedExDeliveryConfFedEx',
            'signatureOptionsFedEx' => 'salesTypes:ItemFulfillmentPackageFedExSignatureOptionsFedEx',
            'signatureReleaseFedEx' => 'sales:string',
            'authorizationNumberFedEx' => 'sales:string',
        },
    
        ItemFulfillmentPackageFedExList => {
            'packageFedEx' => 'sales:ItemFulfillmentPackageFedEx',
        },
    
        ItemFulfillmentShipGroupList => {
            'shipGroup' => 'sales:TransactionShipGroup',
        },
    
        Invoice => {
            'createdDate' => 'sales:dateTime',
            'lastModifiedDate' => 'sales:dateTime',
            'customForm' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'tranDate' => 'sales:dateTime',
            'tranId' => 'sales:string',
            'source' => 'sales:string',
            'createdFrom' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'opportunity' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'terms' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'dueDate' => 'sales:dateTime',
            'discountDate' => 'sales:dateTime',
            'discountAmount' => 'sales:double',
            'salesRep' => 'core:RecordRef',
            'contribPct' => 'sales:string',
            'partner' => 'core:RecordRef',
            'leadSource' => 'core:RecordRef',
            'startDate' => 'sales:dateTime',
            'endDate' => 'sales:dateTime',
            'otherRefNum' => 'sales:string',
            'memo' => 'sales:string',
            'salesEffectiveDate' => 'sales:dateTime',
            'excludeCommission' => 'sales:boolean',
            'totalCostEstimate' => 'sales:double',
            'estGrossProfit' => 'sales:double',
            'estGrossProfitPercent' => 'sales:double',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'amountPaid' => 'sales:double',
            'amountRemaining' => 'sales:double',
            'balance' => 'sales:double',
            'account' => 'core:RecordRef',
            'onCreditHold' => 'sales:string',
            'exchangeRate' => 'sales:double',
            'currencyName' => 'sales:string',
            'promoCode' => 'core:RecordRef',
            'discountItem' => 'core:RecordRef',
            'discountRate' => 'sales:string',
            'isTaxable' => 'sales:boolean',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'sales:double',
            'toBePrinted' => 'sales:boolean',
            'toBeEmailed' => 'sales:boolean',
            'toBeFaxed' => 'sales:boolean',
            'fax' => 'sales:string',
            'messageSel' => 'core:RecordRef',
            'message' => 'sales:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'sales:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'sales:string',
            'fob' => 'sales:string',
            'shipDate' => 'sales:dateTime',
            'shipMethod' => 'core:RecordRef',
            'shippingCost' => 'sales:double',
            'shippingTax1Rate' => 'sales:double',
            'shippingTax2Rate' => 'sales:string',
            'shippingTaxCode' => 'core:RecordRef',
            'handlingTaxCode' => 'core:RecordRef',
            'handlingTax1Rate' => 'sales:double',
            'handlingCost' => 'sales:double',
            'handlingTax2Rate' => 'sales:string',
            'trackingNumbers' => 'sales:string',
            'linkedTrackingNumbers' => 'sales:string',
            'salesGroup' => 'core:RecordRef',
            'subTotal' => 'sales:double',
            'revenueStatus' => 'commonTypes:RevenueStatus',
            'recognizedRevenue' => 'sales:double',
            'deferredRevenue' => 'sales:double',
            'revRecOnRevCommitment' => 'sales:boolean',
            'syncSalesTeams' => 'sales:boolean',
            'discountTotal' => 'sales:double',
            'taxTotal' => 'sales:double',
            'altShippingCost' => 'sales:double',
            'altHandlingCost' => 'sales:double',
            'total' => 'sales:double',
            'status' => 'sales:string',
            'job' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'email' => 'sales:string',
            'tax2Total' => 'sales:double',
            'vatRegNum' => 'sales:string',
            'expCostDiscount' => 'core:RecordRef',
            'itemCostDiscount' => 'core:RecordRef',
            'timeDiscount' => 'core:RecordRef',
            'expCostDiscRate' => 'sales:string',
            'itemCostDiscRate' => 'sales:string',
            'timeDiscRate' => 'sales:string',
            'expCostDiscAmount' => 'sales:double',
            'expCostTaxRate1' => 'sales:double',
            'expCostTaxRate2' => 'sales:double',
            'itemCostDiscAmount' => 'sales:double',
            'expCostTaxCode' => 'core:RecordRef',
            'expCostDiscTax1Amt' => 'sales:double',
            'itemCostTaxRate1' => 'sales:double',
            'timeDiscAmount' => 'sales:double',
            'itemCostTaxCode' => 'core:RecordRef',
            'expCostDiscTaxable' => 'sales:boolean',
            'itemCostDiscTaxable' => 'sales:boolean',
            'itemCostTaxRate2' => 'sales:double',
            'itemCostDiscTax1Amt' => 'sales:double',
            'itemCostDiscPrint' => 'sales:boolean',
            'timeDiscTaxable' => 'sales:boolean',
            'timeTaxRate1' => 'sales:double',
            'expCostDiscPrint' => 'sales:boolean',
            'timeTaxCode' => 'core:RecordRef',
            'timeDiscPrint' => 'sales:boolean',
            'giftCertApplied' => 'sales:double',
            'timeDiscTax1Amt' => 'sales:double',
            'tranIsVsoeBundle' => 'sales:boolean',
            'timeTaxRate2' => 'sales:double',
            'vsoeAutoCalc' => 'sales:boolean',
            'syncPartnerTeams' => 'sales:boolean',
            'salesTeamList' => 'sales:InvoiceSalesTeamList',
            'partnersList' => 'sales:InvoicePartnersList',
            'itemList' => 'sales:InvoiceItemList',
            'itemCostList' => 'sales:InvoiceItemCostList',
            'giftCertRedemptionList' => 'sales:GiftCertRedemptionList',
            'expCostList' => 'sales:InvoiceExpCostList',
            'timeList' => 'sales:InvoiceTimeList',
            'shipGroupList' => 'sales:InvoiceShipGroupList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InvoiceSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'sales:boolean',
            'contribution' => 'sales:double',
        },
    
        InvoiceSalesTeamList => {
            'salesTeam' => 'sales:InvoiceSalesTeam',
        },
    
        InvoiceItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'line' => 'sales:long',
            'description' => 'sales:string',
            'amount' => 'sales:double',
            'isTaxable' => 'sales:boolean',
            'options' => 'core:CustomFieldList',
            'deferRevRec' => 'sales:boolean',
            'quantity' => 'sales:double',
            'currentPercent' => 'sales:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'sales:string',
            'binNumbers' => 'sales:string',
            'price' => 'core:RecordRef',
            'rate' => 'sales:string',
            'percentComplete' => 'sales:double',
            'quantityOnHand' => 'sales:double',
            'quantityAvailable' => 'sales:double',
            'quantityOrdered' => 'sales:double',
            'quantityRemaining' => 'sales:double',
            'quantityFulfilled' => 'sales:double',
            'amountOrdered' => 'sales:double',
            'department' => 'core:RecordRef',
            'orderLine' => 'sales:long',
            'licenseCode' => 'sales:string',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
            'giftCertFrom' => 'sales:string',
            'giftCertRecipientName' => 'sales:string',
            'giftCertRecipientEmail' => 'sales:string',
            'giftCertMessage' => 'sales:string',
            'giftCertNumber' => 'sales:string',
            'shipGroup' => 'sales:long',
            'itemIsFulfilled' => 'sales:boolean',
            'shipAddress' => 'core:RecordRef',
            'shipMethod' => 'core:RecordRef',
            'vsoeSopGroup' => 'commonTyp:VsoeSopGroup',
            'vsoeIsEstimate' => 'sales:boolean',
            'vsoePrice' => 'sales:double',
            'vsoeAmount' => 'sales:double',
            'vsoeAllocation' => 'sales:double',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'sales:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InvoiceItemList => {
            'item' => 'sales:InvoiceItem',
        },
    
        InvoiceItemCost => {
            'apply' => 'sales:boolean',
            'doc' => 'sales:long',
            'line' => 'sales:long',
            'billedDate' => 'sales:dateTime',
            'itemDisp' => 'sales:string',
            'memo' => 'sales:string',
            'jobDisp' => 'sales:string',
            'department' => 'sales:string',
            'class' => 'sales:string',
            'location' => 'sales:string',
            'unitDisp' => 'sales:string',
            'options' => 'core:CustomFieldList',
            'itemCostCount' => 'sales:string',
            'quantity' => 'sales:string',
            'serialNumbers' => 'sales:string',
            'cost' => 'sales:double',
            'amount' => 'sales:double',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
        },
    
        InvoiceItemCostList => {
            'itemCost' => 'sales:InvoiceItemCost',
        },
    
        InvoiceExpCost => {
            'apply' => 'sales:boolean',
            'doc' => 'sales:long',
            'line' => 'sales:long',
            'billedDate' => 'sales:dateTime',
            'jobDisp' => 'sales:string',
            'employeeDisp' => 'sales:string',
            'categoryDisp' => 'sales:string',
            'memo' => 'sales:string',
            'department' => 'sales:string',
            'class' => 'sales:string',
            'location' => 'sales:string',
            'originalAmount' => 'sales:double',
            'amount' => 'sales:double',
            'taxableDisp' => 'sales:string',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
        },
    
        InvoiceExpCostList => {
            'expCost' => 'sales:InvoiceExpCost',
        },
    
        InvoiceTime => {
            'apply' => 'sales:boolean',
            'doc' => 'sales:long',
            'line' => 'sales:long',
            'billedDate' => 'sales:dateTime',
            'employeeDisp' => 'sales:string',
            'itemDisp' => 'sales:string',
            'jobDisp' => 'sales:string',
            'department' => 'sales:string',
            'class' => 'sales:string',
            'location' => 'sales:string',
            'quantity' => 'sales:string',
            'rate' => 'sales:double',
            'unitDisp' => 'sales:string',
            'amount' => 'sales:double',
            'memo' => 'sales:string',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
        },
    
        InvoiceTimeList => {
            'time' => 'sales:InvoiceTime',
        },
    
        InvoicePartnersList => {
            'partners' => 'common:Partners',
        },
    
        InvoiceShipGroupList => {
            'shipGroup' => 'sales:TransactionShipGroup',
        },
    
        CashSale => {
            'createdDate' => 'sales:dateTime',
            'lastModifiedDate' => 'sales:dateTime',
            'customForm' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'tranDate' => 'sales:dateTime',
            'tranId' => 'sales:string',
            'source' => 'sales:string',
            'postingPeriod' => 'core:RecordRef',
            'createdFrom' => 'core:RecordRef',
            'opportunity' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'salesRep' => 'core:RecordRef',
            'contribPct' => 'sales:string',
            'partner' => 'core:RecordRef',
            'leadSource' => 'core:RecordRef',
            'startDate' => 'sales:dateTime',
            'endDate' => 'sales:dateTime',
            'otherRefNum' => 'sales:string',
            'memo' => 'sales:string',
            'salesEffectiveDate' => 'sales:dateTime',
            'excludeCommission' => 'sales:boolean',
            'revRecSchedule' => 'core:RecordRef',
            'undepFunds' => 'sales:boolean',
            'currency' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'totalCostEstimate' => 'sales:double',
            'estGrossProfit' => 'sales:double',
            'estGrossProfitPercent' => 'sales:double',
            'exchangeRate' => 'sales:double',
            'currencyName' => 'sales:string',
            'promoCode' => 'core:RecordRef',
            'discountItem' => 'core:RecordRef',
            'discountRate' => 'sales:string',
            'isTaxable' => 'sales:boolean',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'sales:double',
            'toBePrinted' => 'sales:boolean',
            'toBeEmailed' => 'sales:boolean',
            'toBeFaxed' => 'sales:boolean',
            'fax' => 'sales:string',
            'messageSel' => 'core:RecordRef',
            'message' => 'sales:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'sales:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'sales:string',
            'fob' => 'sales:string',
            'shipDate' => 'sales:dateTime',
            'shipMethod' => 'core:RecordRef',
            'shippingCost' => 'sales:double',
            'shippingTax1Rate' => 'sales:double',
            'shippingTax2Rate' => 'sales:string',
            'shippingTaxCode' => 'core:RecordRef',
            'handlingTaxCode' => 'core:RecordRef',
            'handlingTax1Rate' => 'sales:double',
            'handlingCost' => 'sales:double',
            'handlingTax2Rate' => 'sales:string',
            'linkedTrackingNumbers' => 'sales:string',
            'trackingNumbers' => 'sales:string',
            'salesGroup' => 'core:RecordRef',
            'revenueStatus' => 'commonTypes:RevenueStatus',
            'recognizedRevenue' => 'sales:double',
            'deferredRevenue' => 'sales:double',
            'revRecOnRevCommitment' => 'sales:boolean',
            'syncSalesTeams' => 'sales:boolean',
            'paymentMethod' => 'core:RecordRef',
            'payPalStatus' => 'sales:string',
            'creditCard' => 'core:RecordRef',
            'ccNumber' => 'sales:string',
            'ccExpireDate' => 'sales:dateTime',
            'ccName' => 'sales:string',
            'ccStreet' => 'sales:string',
            'ccZipCode' => 'sales:string',
            'creditCardProcessor' => 'core:RecordRef',
            'ccApproved' => 'sales:boolean',
            'authCode' => 'sales:string',
            'ccAvsStreetMatch' => 'commonTypes:AvsMatchCode',
            'ccAvsZipMatch' => 'commonTypes:AvsMatchCode',
            'payPalTranId' => 'sales:string',
            'subTotal' => 'sales:double',
            'ccIsPurchaseCardBin' => 'sales:boolean',
            'ignoreAvs' => 'sales:boolean',
            'ccProcessAsPurchaseCard' => 'sales:boolean',
            'itemCostDiscount' => 'core:RecordRef',
            'itemCostDiscRate' => 'sales:string',
            'itemCostDiscAmount' => 'sales:double',
            'itemCostTaxRate1' => 'sales:double',
            'itemCostTaxRate2' => 'sales:double',
            'itemCostDiscTaxable' => 'sales:boolean',
            'itemCostTaxCode' => 'core:RecordRef',
            'itemCostDiscTax1Amt' => 'sales:double',
            'itemCostDiscPrint' => 'sales:boolean',
            'expCostDiscount' => 'core:RecordRef',
            'expCostDiscRate' => 'sales:string',
            'expCostDiscAmount' => 'sales:double',
            'expCostDiscTaxable' => 'sales:boolean',
            'expCostDiscprint' => 'sales:boolean',
            'expCostTaxRate1' => 'sales:double',
            'timeDiscount' => 'core:RecordRef',
            'expCostTaxCode' => 'core:RecordRef',
            'timeDiscRate' => 'sales:string',
            'expCostTaxRate2' => 'sales:double',
            'expCostDiscTax1Amt' => 'sales:double',
            'timeDiscAmount' => 'sales:double',
            'timeDiscTaxable' => 'sales:boolean',
            'timeDiscPrint' => 'sales:boolean',
            'discountTotal' => 'sales:double',
            'taxTotal' => 'sales:double',
            'timeTaxRate1' => 'sales:double',
            'altShippingCost' => 'sales:double',
            'timeTaxCode' => 'core:RecordRef',
            'altHandlingCost' => 'sales:double',
            'total' => 'sales:double',
            'timeDiscTax1Amt' => 'sales:double',
            'ccSecurityCode' => 'sales:string',
            'timeTaxRate2' => 'sales:double',
            'ccSecurityCodeMatch' => 'commonTypes:AvsMatchCode',
            'chargeIt' => 'sales:boolean',
            'debitCardIssueNo' => 'sales:string',
            'threeDStatusCode' => 'sales:string',
            'pnRefNum' => 'sales:string',
            'paypalAuthId' => 'sales:string',
            'status' => 'sales:string',
            'paypalProcess' => 'sales:boolean',
            'job' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'email' => 'sales:string',
            'tax2Total' => 'sales:double',
            'validFrom' => 'sales:dateTime',
            'vatRegNum' => 'sales:string',
            'giftCertApplied' => 'sales:double',
            'tranIsVsoeBundle' => 'sales:boolean',
            'vsoeAutoCalc' => 'sales:boolean',
            'syncPartnerTeams' => 'sales:boolean',
            'salesTeamList' => 'sales:CashSaleSalesTeamList',
            'partnersList' => 'sales:CashSalePartnersList',
            'itemList' => 'sales:CashSaleItemList',
            'itemCostList' => 'sales:CashSaleItemCostList',
            'giftCertRedemptionList' => 'sales:GiftCertRedemptionList',
            'expCostList' => 'sales:CashSaleExpCostList',
            'timeList' => 'sales:CashSaleTimeList',
            'shipGroupList' => 'sales:CashSaleShipGroupList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CashSaleSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'sales:boolean',
            'contribution' => 'sales:double',
        },
    
        CashSaleSalesTeamList => {
            'salesTeam' => 'sales:CashSaleSalesTeam',
        },
    
        CashSaleItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'line' => 'sales:long',
            'quantityAvailable' => 'sales:double',
            'quantityOnHand' => 'sales:double',
            'quantityFulfilled' => 'sales:double',
            'quantity' => 'sales:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'sales:string',
            'binNumbers' => 'sales:string',
            'description' => 'sales:string',
            'price' => 'core:RecordRef',
            'rate' => 'sales:string',
            'amount' => 'sales:double',
            'orderLine' => 'sales:long',
            'licenseCode' => 'sales:string',
            'isTaxable' => 'sales:boolean',
            'options' => 'core:CustomFieldList',
            'deferRevRec' => 'sales:boolean',
            'currentPercent' => 'sales:double',
            'department' => 'core:RecordRef',
            'percentComplete' => 'sales:double',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'sales:double',
            'amountOrdered' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'quantityOrdered' => 'sales:double',
            'quantityRemaining' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
            'giftCertFrom' => 'sales:string',
            'giftCertRecipientName' => 'sales:string',
            'giftCertRecipientEmail' => 'sales:string',
            'giftCertMessage' => 'sales:string',
            'giftCertNumber' => 'sales:string',
            'shipGroup' => 'sales:long',
            'itemIsFulfilled' => 'sales:boolean',
            'shipAddress' => 'core:RecordRef',
            'shipMethod' => 'core:RecordRef',
            'vsoeSopGroup' => 'commonTyp:VsoeSopGroup',
            'vsoeIsEstimate' => 'sales:boolean',
            'vsoePrice' => 'sales:double',
            'vsoeAmount' => 'sales:double',
            'vsoeAllocation' => 'sales:double',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'sales:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CashSaleItemList => {
            'item' => 'sales:CashSaleItem',
        },
    
        CashSaleItemCost => {
            'apply' => 'sales:boolean',
            'doc' => 'sales:long',
            'line' => 'sales:long',
            'billedDate' => 'sales:dateTime',
            'itemDisp' => 'sales:string',
            'memo' => 'sales:string',
            'jobDisp' => 'sales:string',
            'department' => 'sales:string',
            'class' => 'sales:string',
            'location' => 'sales:string',
            'unitDisp' => 'sales:string',
            'options' => 'core:CustomFieldList',
            'itemCostCount' => 'sales:string',
            'quantity' => 'sales:string',
            'serialNumbers' => 'sales:string',
            'cost' => 'sales:double',
            'amount' => 'sales:double',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
        },
    
        CashSaleItemCostList => {
            'itemCost' => 'sales:CashSaleItemCost',
        },
    
        CashSaleExpCost => {
            'apply' => 'sales:boolean',
            'doc' => 'sales:long',
            'line' => 'sales:long',
            'billedDate' => 'sales:dateTime',
            'jobDisp' => 'sales:string',
            'employeeDisp' => 'sales:string',
            'categoryDisp' => 'sales:string',
            'memo' => 'sales:string',
            'department' => 'sales:string',
            'class' => 'sales:string',
            'location' => 'sales:string',
            'originalAmount' => 'sales:double',
            'amount' => 'sales:double',
            'taxableDisp' => 'sales:string',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
        },
    
        CashSaleExpCostList => {
            'expCost' => 'sales:CashSaleExpCost',
        },
    
        CashSaleTime => {
            'apply' => 'sales:boolean',
            'doc' => 'sales:long',
            'line' => 'sales:long',
            'billedDate' => 'sales:dateTime',
            'employeeDisp' => 'sales:string',
            'itemDisp' => 'sales:string',
            'jobDisp' => 'sales:string',
            'department' => 'sales:string',
            'class' => 'sales:string',
            'location' => 'sales:string',
            'quantity' => 'sales:string',
            'rate' => 'sales:double',
            'unitDisp' => 'sales:string',
            'amount' => 'sales:double',
            'memo' => 'sales:string',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'sales:dateTime',
            'revRecEndDate' => 'sales:dateTime',
            'grossAmt' => 'sales:double',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
        },
    
        CashSaleTimeList => {
            'time' => 'sales:CashSaleTime',
        },
    
        CashSalePartnersList => {
            'partners' => 'common:Partners',
        },
    
        CashSaleShipGroupList => {
            'shipGroup' => 'sales:TransactionShipGroup',
        },
    
        Estimate => {
            'createdDate' => 'sales:dateTime',
            'lastModifiedDate' => 'sales:dateTime',
            'entity' => 'core:RecordRef',
            'job' => 'core:RecordRef',
            'tranDate' => 'sales:dateTime',
            'tranId' => 'sales:string',
            'source' => 'sales:string',
            'customForm' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'title' => 'sales:string',
            'entityStatus' => 'core:RecordRef',
            'probability' => 'sales:double',
            'includeInForecast' => 'sales:boolean',
            'forecastType' => 'core:RecordRef',
            'opportunity' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'terms' => 'core:RecordRef',
            'dueDate' => 'sales:dateTime',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'billingSchedule' => 'core:RecordRef',
            'status' => 'sales:string',
            'salesRep' => 'core:RecordRef',
            'partner' => 'core:RecordRef',
            'contribPct' => 'sales:string',
            'leadSource' => 'core:RecordRef',
            'expectedCloseDate' => 'sales:dateTime',
            'otherRefNum' => 'sales:string',
            'memo' => 'sales:string',
            'endDate' => 'sales:dateTime',
            'startDate' => 'sales:dateTime',
            'totalCostEstimate' => 'sales:double',
            'estGrossProfit' => 'sales:double',
            'estGrossProfitPercent' => 'sales:double',
            'createdFrom' => 'core:RecordRef',
            'exchangeRate' => 'sales:double',
            'currencyName' => 'sales:string',
            'promoCode' => 'core:RecordRef',
            'discountItem' => 'core:RecordRef',
            'discountRate' => 'sales:string',
            'isTaxable' => 'sales:boolean',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'sales:double',
            'vatRegNum' => 'sales:string',
            'toBePrinted' => 'sales:boolean',
            'toBeEmailed' => 'sales:boolean',
            'email' => 'sales:string',
            'toBeFaxed' => 'sales:boolean',
            'fax' => 'sales:string',
            'visibleToCustomer' => 'sales:boolean',
            'messageSel' => 'core:RecordRef',
            'message' => 'sales:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'sales:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'sales:string',
            'fob' => 'sales:string',
            'shipDate' => 'sales:dateTime',
            'shipMethod' => 'core:RecordRef',
            'shippingCost' => 'sales:double',
            'shippingTax1Rate' => 'sales:double',
            'shippingTaxCode' => 'core:RecordRef',
            'shippingTax2Rate' => 'sales:string',
            'handlingTaxCode' => 'core:RecordRef',
            'handlingTax1Rate' => 'sales:double',
            'handlingCost' => 'sales:double',
            'trackingNumbers' => 'sales:string',
            'handlingTax2Rate' => 'sales:string',
            'linkedTrackingNumbers' => 'sales:string',
            'salesGroup' => 'core:RecordRef',
            'syncSalesTeams' => 'sales:boolean',
            'altSalesTotal' => 'sales:double',
            'subTotal' => 'sales:double',
            'discountTotal' => 'sales:double',
            'taxTotal' => 'sales:double',
            'altShippingCost' => 'sales:double',
            'altHandlingCost' => 'sales:double',
            'total' => 'sales:double',
            'tax2Total' => 'sales:double',
            'itemList' => 'sales:EstimateItemList',
            'salesTeamList' => 'sales:EstimateSalesTeamList',
            'syncPartnerTeams' => 'sales:boolean',
            'partnersList' => 'sales:EstimatePartnersList',
            'shipGroupList' => 'sales:EstimateShipGroupList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        EstimateItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'line' => 'sales:long',
            'quantityAvailable' => 'sales:double',
            'quantityOnHand' => 'sales:double',
            'quantity' => 'sales:double',
            'units' => 'core:RecordRef',
            'description' => 'sales:string',
            'serialNumbers' => 'sales:string',
            'price' => 'core:RecordRef',
            'rate' => 'sales:string',
            'amount' => 'sales:double',
            'options' => 'core:CustomFieldList',
            'revRecTermInMonths' => 'sales:long',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'isTaxable' => 'sales:boolean',
            'altSalesAmt' => 'sales:double',
            'fromJob' => 'sales:boolean',
            'grossAmt' => 'sales:double',
            'isEstimate' => 'sales:boolean',
            'tax1Amt' => 'sales:double',
            'taxCode' => 'core:RecordRef',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'sales:double',
            'taxRate1' => 'sales:double',
            'taxRate2' => 'sales:double',
            'shipGroup' => 'sales:long',
            'itemIsFulfilled' => 'sales:boolean',
            'shipAddress' => 'core:RecordRef',
            'shipMethod' => 'core:RecordRef',
            'expectedShipDate' => 'sales:dateTime',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        EstimateItemList => {
            'item' => 'sales:EstimateItem',
        },
    
        EstimateSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'sales:boolean',
            'contribution' => 'sales:double',
        },
    
        EstimateSalesTeamList => {
            'salesTeam' => 'sales:EstimateSalesTeam',
        },
    
        EstimatePartnersList => {
            'partners' => 'common:Partners',
        },
    
        EstimateShipGroupList => {
            'shipGroup' => 'sales:TransactionShipGroup',
        },
    
        GiftCertRedemption => {
            'authCode' => 'core:RecordRef',
            'authCodeApplied' => 'sales:double',
            'authCodeAmtRemaining' => 'sales:double',
            'giftCertAvailable' => 'sales:double',
        },
    
        GiftCertRedemptionList => {
            'giftCertRedemption' => 'sales:GiftCertRedemption',
        },
    
        TransactionShipGroup => {
            'id' => 'sales:long',
            'isFulfilled' => 'sales:boolean',
            'weight' => 'sales:double',
            'sourceAddressRef' => 'core:RecordRef',
            'sourceAddress' => 'sales:string',
            'destinationAddressRef' => 'core:RecordRef',
            'destinationAddress' => 'sales:string',
            'shippingMethodRef' => 'core:RecordRef',
            'shippingMethod' => 'sales:string',
            'isHandlingTaxable' => 'sales:boolean',
            'handlingTaxCode' => 'core:RecordRef',
            'handlingTaxRate' => 'sales:string',
            'handlingTax2Rate' => 'sales:string',
            'handlingRate' => 'sales:double',
            'handlingTaxAmt' => 'sales:double',
            'handlingTax2Amt' => 'sales:double',
            'isShippingTaxable' => 'sales:boolean',
            'shippingTaxCode' => 'core:RecordRef',
            'shippingTaxRate' => 'sales:string',
            'shippingTax2Rate' => 'sales:string',
            'shippingRate' => 'sales:double',
            'shippingTaxAmt' => 'sales:double',
            'shippingTax2Amt' => 'sales:double',
        },
    
        PurchLandedCostList => {
            'landedCost' => 'common:LandedCost',
        },
    
        VendorBill => {
            'createdDate' => 'purchases:dateTime',
            'lastModifiedDate' => 'purchases:dateTime',
            'customForm' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'approvalStatus' => 'core:RecordRef',
            'nextApprover' => 'core:RecordRef',
            'vatRegNum' => 'purchases:string',
            'postingPeriod' => 'core:RecordRef',
            'tranDate' => 'purchases:dateTime',
            'currencyName' => 'purchases:string',
            'exchangeRate' => 'purchases:double',
            'terms' => 'core:RecordRef',
            'dueDate' => 'purchases:dateTime',
            'discountDate' => 'purchases:dateTime',
            'tranId' => 'purchases:string',
            'userTotal' => 'purchases:double',
            'discountAmount' => 'purchases:double',
            'taxTotal' => 'purchases:double',
            'memo' => 'purchases:string',
            'tax2Total' => 'purchases:double',
            'creditLimit' => 'purchases:double',
            'currency' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'status' => 'purchases:string',
            'landedCostMethod' => 'commonTypes:LandedCostMethod',
            'expenseList' => 'purchases:VendorBillExpenseList',
            'itemList' => 'purchases:VendorBillItemList',
            'landedCostsList' => 'purchases:PurchLandedCostList',
            'customFieldList' => 'core:CustomFieldList',
            'purchaseOrderList' => 'core:RecordRefList',
        },
    
        VendorBillExpense => {
            'orderDoc' => 'purchases:long',
            'orderLine' => 'purchases:long',
            'line' => 'purchases:long',
            'category' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'amount' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'memo' => 'purchases:string',
            'grossAmt' => 'purchases:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'amortizationSched' => 'core:RecordRef',
            'amortizStartDate' => 'purchases:dateTime',
            'amortizationEndDate' => 'purchases:dateTime',
            'amortizationResidual' => 'purchases:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorBillExpenseList => {
            'expense' => 'purchases:VendorBillExpense',
        },
    
        VendorBillItem => {
            'item' => 'core:RecordRef',
            'vendorName' => 'purchases:string',
            'line' => 'purchases:long',
            'orderDoc' => 'purchases:long',
            'orderLine' => 'purchases:long',
            'quantity' => 'purchases:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'description' => 'purchases:string',
            'serialNumbers' => 'purchases:string',
            'binNumbers' => 'purchases:string',
            'expirationDate' => 'purchases:dateTime',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'rate' => 'purchases:string',
            'amount' => 'purchases:double',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'landedCostCategory' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'billVarianceStatus' => 'purchasesTypes:TransactionBillVarianceStatus',
            'billreceiptsList' => 'core:RecordRefList',
            'amortizationSched' => 'core:RecordRef',
            'amortizStartDate' => 'purchases:dateTime',
            'amortizationEndDate' => 'purchases:dateTime',
            'amortizationResidual' => 'purchases:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorBillItemList => {
            'item' => 'purchases:VendorBillItem',
        },
    
        PurchaseOrder => {
            'createdDate' => 'purchases:dateTime',
            'lastModifiedDate' => 'purchases:dateTime',
            'customForm' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'vatRegNum' => 'purchases:string',
            'employee' => 'core:RecordRef',
            'supervisorApproval' => 'purchases:boolean',
            'tranDate' => 'purchases:dateTime',
            'tranId' => 'purchases:string',
            'createdFrom' => 'core:RecordRef',
            'terms' => 'core:RecordRef',
            'dueDate' => 'purchases:dateTime',
            'otherRefNum' => 'purchases:string',
            'memo' => 'purchases:string',
            'approvalStatus' => 'core:RecordRef',
            'exchangeRate' => 'purchases:double',
            'nextApprover' => 'core:RecordRef',
            'source' => 'purchases:string',
            'currencyName' => 'purchases:string',
            'toBePrinted' => 'purchases:boolean',
            'toBeEmailed' => 'purchases:boolean',
            'email' => 'purchases:string',
            'toBeFaxed' => 'purchases:boolean',
            'fax' => 'purchases:string',
            'message' => 'purchases:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'purchases:string',
            'currency' => 'core:RecordRef',
            'shipTo' => 'core:RecordRef',
            'subTotal' => 'purchases:double',
            'taxTotal' => 'purchases:double',
            'tax2Total' => 'purchases:double',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'purchases:string',
            'fob' => 'purchases:string',
            'shipDate' => 'purchases:dateTime',
            'shipMethod' => 'core:RecordRef',
            'trackingNumbers' => 'purchases:string',
            'linkedTrackingNumbers' => 'purchases:string',
            'total' => 'purchases:double',
            'class' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'intercoTransaction' => 'core:RecordRef',
            'intercoStatus' => 'commonTypes:IntercoStatus',
            'status' => 'purchases:string',
            'orderStatus' => 'purchasesTypes:PurchaseOrderOrderStatus',
            'itemList' => 'purchases:PurchaseOrderItemList',
            'expenseList' => 'purchases:PurchaseOrderExpenseList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PurchaseOrderExpense => {
            'line' => 'purchases:long',
            'category' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'amount' => 'purchases:double',
            'memo' => 'purchases:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isClosed' => 'purchases:boolean',
            'isBillable' => 'purchases:boolean',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PurchaseOrderExpenseList => {
            'expense' => 'purchases:PurchaseOrderExpense',
        },
    
        PurchaseOrderItem => {
            'item' => 'core:RecordRef',
            'line' => 'purchases:long',
            'vendorName' => 'purchases:string',
            'quantityReceived' => 'purchases:double',
            'quantityBilled' => 'purchases:double',
            'quantityAvailable' => 'purchases:double',
            'quantityOnHand' => 'purchases:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'quantity' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'purchases:string',
            'description' => 'purchases:string',
            'rate' => 'purchases:string',
            'amount' => 'purchases:double',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'landedCostCategory' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'billVarianceStatus' => 'purchasesTypes:TransactionBillVarianceStatus',
            'matchBillToReceipt' => 'purchases:boolean',
            'expectedReceiptDate' => 'purchases:dateTime',
            'isClosed' => 'purchases:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PurchaseOrderItemList => {
            'item' => 'purchases:PurchaseOrderItem',
        },
    
        ItemReceipt => {
            'createdDate' => 'purchases:dateTime',
            'lastModifiedDate' => 'purchases:dateTime',
            'customForm' => 'core:RecordRef',
            'exchangeRate' => 'purchases:double',
            'entity' => 'core:RecordRef',
            'currencyName' => 'purchases:string',
            'subsidiary' => 'core:RecordRef',
            'createdFrom' => 'core:RecordRef',
            'tranDate' => 'purchases:dateTime',
            'partner' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'tranId' => 'purchases:string',
            'memo' => 'purchases:string',
            'currency' => 'core:RecordRef',
            'landedCostMethod' => 'commonTypes:LandedCostMethod',
            'itemList' => 'purchases:ItemReceiptItemList',
            'expenseList' => 'purchases:ItemReceiptExpenseList',
            'landedCostsList' => 'purchases:PurchLandedCostList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ItemReceiptItem => {
            'itemReceive' => 'purchases:boolean',
            'jobName' => 'purchases:string',
            'item' => 'core:RecordRef',
            'orderLine' => 'purchases:long',
            'line' => 'purchases:long',
            'itemName' => 'purchases:string',
            'description' => 'purchases:string',
            'location' => 'core:RecordRef',
            'onHand' => 'purchases:double',
            'quantityRemaining' => 'purchases:double',
            'quantity' => 'purchases:double',
            'unitsDisplay' => 'purchases:string',
            'unitCostOverride' => 'purchases:double',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'purchases:string',
            'binNumbers' => 'purchases:string',
            'expirationDate' => 'purchases:dateTime',
            'rate' => 'purchases:string',
            'currency' => 'purchases:string',
            'restock' => 'purchases:boolean',
            'billVarianceStatus' => 'purchasesTypes:TransactionBillVarianceStatus',
            'isDropShipment' => 'purchases:boolean',
            'options' => 'core:CustomFieldList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ItemReceiptItemList => {
            'item' => 'purchases:ItemReceiptItem',
        },
    
        ItemReceiptExpense => {
            'markReceived' => 'purchases:boolean',
            'orderLine' => 'purchases:long',
            'line' => 'purchases:long',
            'account' => 'purchases:string',
            'memo' => 'purchases:string',
            'amount' => 'purchases:double',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ItemReceiptExpenseList => {
            'expense' => 'purchases:ItemReceiptExpense',
        },
    
        VendorPayment => {
            'createdDate' => 'purchases:dateTime',
            'lastModifiedDate' => 'purchases:dateTime',
            'customForm' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'balance' => 'purchases:double',
            'apAcct' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'address' => 'purchases:string',
            'tranDate' => 'purchases:dateTime',
            'voidJournal' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'currencyName' => 'purchases:string',
            'exchangeRate' => 'purchases:double',
            'toAch' => 'purchases:boolean',
            'toBePrinted' => 'purchases:boolean',
            'printVoucher' => 'purchases:boolean',
            'tranId' => 'purchases:string',
            'total' => 'purchases:double',
            'currency' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'memo' => 'purchases:string',
            'subsidiary' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'status' => 'purchases:string',
            'applyList' => 'purchases:VendorPaymentApplyList',
            'creditList' => 'purchases:VendorPaymentCreditList',
            'billPay' => 'purchases:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorPaymentApply => {
            'apply' => 'purchases:boolean',
            'doc' => 'purchases:long',
            'line' => 'purchases:long',
            'job' => 'purchases:string',
            'applyDate' => 'purchases:dateTime',
            'type' => 'purchases:string',
            'refNum' => 'purchases:string',
            'total' => 'purchases:double',
            'due' => 'purchases:double',
            'currency' => 'purchases:string',
            'discDate' => 'purchases:dateTime',
            'discAmt' => 'purchases:double',
            'disc' => 'purchases:double',
            'amount' => 'purchases:double',
        },
    
        VendorPaymentApplyList => {
            'apply' => 'purchases:VendorPaymentApply',
        },
    
        VendorPaymentCredit => {
            'apply' => 'purchases:boolean',
            'doc' => 'purchases:long',
            'line' => 'purchases:long',
            'creditDate' => 'purchases:dateTime',
            'type' => 'purchases:string',
            'refNum' => 'purchases:string',
            'appliedTo' => 'purchases:string',
            'total' => 'purchases:double',
            'due' => 'purchases:double',
            'currency' => 'purchases:string',
            'amount' => 'purchases:double',
        },
    
        VendorPaymentCreditList => {
            'credit' => 'purchases:VendorPaymentCredit',
        },
    
        VendorCredit => {
            'createdDate' => 'purchases:dateTime',
            'lastModifiedDate' => 'purchases:dateTime',
            'customForm' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'unApplied' => 'purchases:double',
            'autoApply' => 'purchases:boolean',
            'applied' => 'purchases:double',
            'tranId' => 'purchases:string',
            'createdFrom' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'total' => 'purchases:double',
            'userTotal' => 'purchases:double',
            'currency' => 'core:RecordRef',
            'currencyName' => 'purchases:string',
            'tranDate' => 'purchases:dateTime',
            'exchangeRate' => 'purchases:double',
            'postingPeriod' => 'core:RecordRef',
            'memo' => 'purchases:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'expenseList' => 'purchases:VendorCreditExpenseList',
            'itemList' => 'purchases:VendorCreditItemList',
            'applyList' => 'purchases:VendorCreditApplyList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorCreditExpense => {
            'orderLine' => 'purchases:long',
            'line' => 'purchases:long',
            'category' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'amount' => 'purchases:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'memo' => 'purchases:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'amortizationSched' => 'core:RecordRef',
            'amortizStartDate' => 'purchases:dateTime',
            'amortizationEndDate' => 'purchases:dateTime',
            'amortizationResidual' => 'purchases:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorCreditExpenseList => {
            'expense' => 'purchases:VendorCreditExpense',
        },
    
        VendorCreditItem => {
            'item' => 'core:RecordRef',
            'vendorName' => 'purchases:string',
            'line' => 'purchases:long',
            'orderLine' => 'purchases:long',
            'quantity' => 'purchases:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbersList' => 'core:RecordRefList',
            'description' => 'purchases:string',
            'rate' => 'purchases:string',
            'amount' => 'purchases:double',
            'binNumbers' => 'purchases:string',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'amortizationSched' => 'core:RecordRef',
            'amortizStartDate' => 'purchases:dateTime',
            'amortizationEndDate' => 'purchases:dateTime',
            'amortizationResidual' => 'purchases:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorCreditItemList => {
            'item' => 'purchases:VendorCreditItem',
        },
    
        VendorCreditApply => {
            'apply' => 'purchases:boolean',
            'applyDate' => 'purchases:dateTime',
            'doc' => 'purchases:long',
            'line' => 'purchases:long',
            'type' => 'purchases:string',
            'refNum' => 'purchases:string',
            'total' => 'purchases:double',
            'due' => 'purchases:double',
            'currency' => 'purchases:string',
            'amount' => 'purchases:double',
        },
    
        VendorCreditApplyList => {
            'apply' => 'purchases:VendorCreditApply',
        },
    
        VendorReturnAuthorization => {
            'createdDate' => 'purchases:dateTime',
            'lastModifiedDate' => 'purchases:dateTime',
            'customForm' => 'core:RecordRef',
            'tranId' => 'purchases:string',
            'createdFrom' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'orderStatus' => 'purchasesTypes:VendorReturnAuthorizationOrderStatus',
            'tranDate' => 'purchases:dateTime',
            'userTotal' => 'purchases:double',
            'currency' => 'core:RecordRef',
            'currencyName' => 'purchases:string',
            'memo' => 'purchases:string',
            'exchangeRate' => 'purchases:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'intercoTransaction' => 'core:RecordRef',
            'intercoStatus' => 'commonTypes:IntercoStatus',
            'expenseList' => 'purchases:VendorReturnAuthorizationExpenseList',
            'itemList' => 'purchases:VendorReturnAuthorizationItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorReturnAuthorizationExpense => {
            'orderLine' => 'purchases:long',
            'line' => 'purchases:long',
            'category' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'amount' => 'purchases:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'memo' => 'purchases:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'amortizationSched' => 'core:RecordRef',
            'amortizStartDate' => 'purchases:dateTime',
            'amortizationEndDate' => 'purchases:dateTime',
            'amortizationResidual' => 'purchases:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorReturnAuthorizationExpenseList => {
            'expense' => 'purchases:VendorReturnAuthorizationExpense',
        },
    
        VendorReturnAuthorizationItem => {
            'item' => 'core:RecordRef',
            'vendorName' => 'purchases:string',
            'line' => 'purchases:long',
            'orderLine' => 'purchases:long',
            'quantity' => 'purchases:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbersList' => 'core:RecordRefList',
            'description' => 'purchases:string',
            'binNumbers' => 'purchases:string',
            'rate' => 'purchases:string',
            'amount' => 'purchases:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'purchases:double',
            'taxRate2' => 'purchases:double',
            'grossAmt' => 'purchases:double',
            'tax1Amt' => 'purchases:double',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'purchases:boolean',
            'isClosed' => 'purchases:boolean',
            'amortizationSched' => 'core:RecordRef',
            'isDropShipment' => 'purchases:boolean',
            'amortizStartDate' => 'purchases:dateTime',
            'amortizationEndDate' => 'purchases:dateTime',
            'amortizationResidual' => 'purchases:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        VendorReturnAuthorizationItemList => {
            'item' => 'purchases:VendorReturnAuthorizationItem',
        },
    
        CashRefund => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'customForm' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'vatRegNum' => 'customers:string',
            'tranDate' => 'customers:dateTime',
            'tranId' => 'customers:string',
            'source' => 'customers:string',
            'createdFrom' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'leadSource' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'salesRep' => 'core:RecordRef',
            'partner' => 'core:RecordRef',
            'contribPct' => 'customers:string',
            'otherRefNum' => 'customers:string',
            'memo' => 'customers:string',
            'salesEffectiveDate' => 'customers:dateTime',
            'refundCheck' => 'customers:boolean',
            'toPrint2' => 'customers:boolean',
            'excludeCommission' => 'customers:boolean',
            'totalCostEstimate' => 'customers:double',
            'estGrossProfit' => 'customers:double',
            'estGrossProfitPercent' => 'customers:double',
            'account' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'customers:double',
            'currencyName' => 'customers:string',
            'promoCode' => 'core:RecordRef',
            'discountItem' => 'core:RecordRef',
            'discountRate' => 'customers:string',
            'isTaxable' => 'customers:boolean',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'customers:double',
            'toBePrinted' => 'customers:boolean',
            'toBeEmailed' => 'customers:boolean',
            'email' => 'customers:string',
            'toBeFaxed' => 'customers:boolean',
            'fax' => 'customers:string',
            'messageSel' => 'core:RecordRef',
            'message' => 'customers:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'customers:string',
            'shipMethod' => 'core:RecordRef',
            'shippingTaxCode' => 'core:RecordRef',
            'shippingTax1Rate' => 'customers:double',
            'shippingTax2Rate' => 'customers:string',
            'shippingCost' => 'customers:double',
            'handlingTaxCode' => 'core:RecordRef',
            'handlingTax1Rate' => 'customers:double',
            'handlingTax2Rate' => 'customers:string',
            'handlingCost' => 'customers:double',
            'salesGroup' => 'core:RecordRef',
            'syncSalesTeams' => 'customers:boolean',
            'paymentMethod' => 'core:RecordRef',
            'revenueStatus' => 'commonTypes:RevenueStatus',
            'recognizedRevenue' => 'customers:double',
            'deferredRevenue' => 'customers:double',
            'revRecOnRevCommitment' => 'customers:boolean',
            'creditCard' => 'core:RecordRef',
            'chargeIt' => 'customers:boolean',
            'ccNumber' => 'customers:string',
            'ccExpireDate' => 'customers:dateTime',
            'ccName' => 'customers:string',
            'ccStreet' => 'customers:string',
            'ccZipCode' => 'customers:string',
            'ccApproved' => 'customers:boolean',
            'creditCardProcessor' => 'core:RecordRef',
            'debitCardIssueNo' => 'customers:string',
            'pnRefNum' => 'customers:string',
            'validFrom' => 'customers:dateTime',
            'payPalTranId' => 'customers:string',
            'subTotal' => 'customers:double',
            'ccIsPurchaseCardBin' => 'customers:boolean',
            'discountTotal' => 'customers:double',
            'ccProcessAsPurchaseCard' => 'customers:boolean',
            'taxTotal' => 'customers:double',
            'tax2Total' => 'customers:double',
            'altShippingCost' => 'customers:double',
            'payPalStatus' => 'customers:string',
            'altHandlingCost' => 'customers:double',
            'total' => 'customers:double',
            'payPalAuthId' => 'customers:string',
            'status' => 'customers:string',
            'job' => 'core:RecordRef',
            'giftCert' => 'core:RecordRef',
            'giftCertTotal' => 'customers:double',
            'giftCertApplied' => 'customers:double',
            'giftCertAvailable' => 'customers:double',
            'tranIsVsoeBundle' => 'customers:boolean',
            'payPalProcess' => 'customers:boolean',
            'vsoeAutoCalc' => 'customers:boolean',
            'syncPartnerTeams' => 'customers:boolean',
            'itemList' => 'customers:CashRefundItemList',
            'salesTeamList' => 'customers:CashRefundSalesTeamList',
            'partnersList' => 'customers:CashRefundPartnersList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CashRefundItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'line' => 'customers:long',
            'orderLine' => 'customers:long',
            'quantity' => 'customers:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'binNumbers' => 'customers:string',
            'serialNumbers' => 'customers:string',
            'description' => 'customers:string',
            'price' => 'core:RecordRef',
            'rate' => 'customers:string',
            'amount' => 'customers:double',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'customers:string',
            'taxRate2' => 'customers:string',
            'tax1Amt' => 'customers:double',
            'grossAmt' => 'customers:double',
            'isTaxable' => 'customers:boolean',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'customers:dateTime',
            'revRecEndDate' => 'customers:dateTime',
            'giftCertFrom' => 'customers:string',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'customers:double',
            'giftCertRecipientName' => 'customers:string',
            'giftCertRecipientEmail' => 'customers:string',
            'giftCertMessage' => 'customers:string',
            'giftCertNumber' => 'customers:string',
            'vsoeSopGroup' => 'commonTyp:VsoeSopGroup',
            'vsoeIsEstimate' => 'customers:boolean',
            'vsoePrice' => 'customers:double',
            'vsoeAmount' => 'customers:double',
            'vsoeAllocation' => 'customers:double',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'customers:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CashRefundItemList => {
            'item' => 'customers:CashRefundItem',
        },
    
        CashRefundSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'customers:boolean',
            'contribution' => 'customers:double',
        },
    
        CashRefundSalesTeamList => {
            'salesTeam' => 'customers:CashRefundSalesTeam',
        },
    
        CashRefundPartnersList => {
            'partners' => 'common:Partners',
        },
    
        CustomerPayment => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'customForm' => 'core:RecordRef',
            'arAcct' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'balance' => 'customers:double',
            'pending' => 'customers:double',
            'currency' => 'core:RecordRef',
            'payment' => 'customers:double',
            'autoApply' => 'customers:boolean',
            'tranDate' => 'customers:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'paymentMethod' => 'core:RecordRef',
            'ccIsPurchaseCardBin' => 'customers:boolean',
            'memo' => 'customers:string',
            'ccProcessAsPurchaseCard' => 'customers:boolean',
            'checkNum' => 'customers:string',
            'currencyName' => 'customers:string',
            'exchangeRate' => 'customers:double',
            'creditCard' => 'core:RecordRef',
            'chargeIt' => 'customers:boolean',
            'ccNumber' => 'customers:string',
            'ccExpireDate' => 'customers:dateTime',
            'ccName' => 'customers:string',
            'ccStreet' => 'customers:string',
            'ccZipCode' => 'customers:string',
            'ccApproved' => 'customers:boolean',
            'authCode' => 'customers:string',
            'ccAvsStreetMatch' => 'commonTypes:AvsMatchCode',
            'ccAvsZipMatch' => 'commonTypes:AvsMatchCode',
            'ccSecurityCode' => 'customers:string',
            'ignoreAvs' => 'customers:boolean',
            'ccSecurityCodeMatch' => 'commonTypes:AvsMatchCode',
            'threeDStatusCode' => 'customers:string',
            'pnRefNum' => 'customers:string',
            'creditCardProcessor' => 'core:RecordRef',
            'debitCardIssueNo' => 'customers:string',
            'validFrom' => 'customers:dateTime',
            'undepFunds' => 'customers:boolean',
            'account' => 'core:RecordRef',
            'total' => 'customers:double',
            'subsidiary' => 'core:RecordRef',
            'applied' => 'customers:double',
            'unapplied' => 'customers:double',
            'class' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'status' => 'customers:string',
            'applyList' => 'customers:CustomerPaymentApplyList',
            'creditList' => 'customers:CustomerPaymentCreditList',
            'depositList' => 'customers:CustomerPaymentDepositList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CustomerPaymentApply => {
            'apply' => 'customers:boolean',
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'applyDate' => 'customers:dateTime',
            'job' => 'customers:string',
            'type' => 'customers:string',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'due' => 'customers:double',
            'currency' => 'customers:string',
            'discDate' => 'customers:dateTime',
            'discAmt' => 'customers:double',
            'disc' => 'customers:double',
            'amount' => 'customers:double',
        },
    
        CustomerPaymentApplyList => {
            'apply' => 'customers:CustomerPaymentApply',
        },
    
        CustomerPaymentCredit => {
            'apply' => 'customers:boolean',
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'creditDate' => 'customers:dateTime',
            'type' => 'customers:string',
            'refNum' => 'customers:string',
            'appliedTo' => 'customers:string',
            'total' => 'customers:double',
            'due' => 'customers:double',
            'currency' => 'customers:string',
            'amount' => 'customers:double',
        },
    
        CustomerPaymentCreditList => {
            'credit' => 'customers:CustomerPaymentCredit',
        },
    
        CustomerPaymentDeposit => {
            'apply' => 'customers:boolean',
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'depositDate' => 'customers:dateTime',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'remaining' => 'customers:double',
            'currency' => 'customers:string',
            'amount' => 'customers:double',
        },
    
        CustomerPaymentDepositList => {
            'deposit' => 'customers:CustomerPaymentDeposit',
        },
    
        ReturnAuthorization => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'customForm' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'vatRegNum' => 'customers:string',
            'tranDate' => 'customers:dateTime',
            'tranId' => 'customers:string',
            'source' => 'customers:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'intercoTransaction' => 'core:RecordRef',
            'intercoStatus' => 'commonTypes:IntercoStatus',
            'job' => 'core:RecordRef',
            'partner' => 'core:RecordRef',
            'otherRefNum' => 'customers:string',
            'leadSource' => 'core:RecordRef',
            'memo' => 'customers:string',
            'drAccount' => 'core:RecordRef',
            'fxAccount' => 'core:RecordRef',
            'salesEffectiveDate' => 'customers:dateTime',
            'createdFrom' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'totalCostEstimate' => 'customers:double',
            'estGrossProfit' => 'customers:double',
            'estGrossProfitPercent' => 'customers:double',
            'revRecStartDate' => 'customers:dateTime',
            'revRecEndDate' => 'customers:dateTime',
            'excludeCommission' => 'customers:boolean',
            'exchangeRate' => 'customers:double',
            'currencyName' => 'customers:string',
            'discountItem' => 'core:RecordRef',
            'discountRate' => 'customers:string',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'customers:double',
            'toBePrinted' => 'customers:boolean',
            'toBeEmailed' => 'customers:boolean',
            'toBeFaxed' => 'customers:boolean',
            'messageSel' => 'core:RecordRef',
            'message' => 'customers:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'customers:string',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'customers:string',
            'salesGroup' => 'core:RecordRef',
            'syncSalesTeams' => 'customers:boolean',
            'revenueStatus' => 'commonTypes:RevenueStatus',
            'recognizedRevenue' => 'customers:double',
            'deferredRevenue' => 'customers:double',
            'revRecOnRevCommitment' => 'customers:boolean',
            'revCommitStatus' => 'commonTypes:RevenueCommitStatus',
            'paymentMethod' => 'core:RecordRef',
            'creditCard' => 'core:RecordRef',
            'ccNumber' => 'customers:string',
            'altSalesTotal' => 'customers:double',
            'ccExpireDate' => 'customers:dateTime',
            'ccName' => 'customers:string',
            'ccStreet' => 'customers:string',
            'ccZipCode' => 'customers:string',
            'ccApproved' => 'customers:boolean',
            'pnRefNum' => 'customers:string',
            'subTotal' => 'customers:double',
            'discountTotal' => 'customers:double',
            'total' => 'customers:double',
            'creditCardProcessor' => 'core:RecordRef',
            'payPalAuthId' => 'customers:string',
            'payPalProcess' => 'customers:boolean',
            'email' => 'customers:string',
            'fax' => 'customers:string',
            'debitCardIssueNo' => 'customers:string',
            'isTaxable' => 'customers:boolean',
            'promoCode' => 'core:RecordRef',
            'status' => 'customers:string',
            'taxTotal' => 'customers:double',
            'tax2Total' => 'customers:double',
            'validFrom' => 'customers:dateTime',
            'orderStatus' => 'customersTypes:ReturnAuthorizationOrderStatus',
            'salesRep' => 'core:RecordRef',
            'giftCert' => 'core:RecordRef',
            'contribPct' => 'customers:string',
            'giftCertTotal' => 'customers:double',
            'giftCertApplied' => 'customers:double',
            'giftCertAvailable' => 'customers:double',
            'tranIsVsoeBundle' => 'customers:boolean',
            'vsoeAutoCalc' => 'customers:boolean',
            'syncPartnerTeams' => 'customers:boolean',
            'itemList' => 'customers:ReturnAuthorizationItemList',
            'salesTeamList' => 'customers:ReturnAuthorizationSalesTeamList',
            'partnersList' => 'customers:ReturnAuthorizationPartnersList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ReturnAuthorizationItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'orderLine' => 'customers:long',
            'line' => 'customers:long',
            'quantity' => 'customers:double',
            'quantityReceived' => 'customers:double',
            'quantityBilled' => 'customers:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'description' => 'customers:string',
            'serialNumbers' => 'customers:string',
            'price' => 'core:RecordRef',
            'rate' => 'customers:string',
            'amount' => 'customers:double',
            'options' => 'core:CustomFieldList',
            'revRecTermInMonths' => 'customers:long',
            'deferRevRec' => 'customers:boolean',
            'isClosed' => 'customers:boolean',
            'isDropShipment' => 'customers:boolean',
            'department' => 'core:RecordRef',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'customers:double',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'customers:dateTime',
            'revRecEndDate' => 'customers:dateTime',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'customers:double',
            'taxRate2' => 'customers:double',
            'tax1Amt' => 'customers:double',
            'grossAmt' => 'customers:double',
            'isTaxable' => 'customers:boolean',
            'giftCertFrom' => 'customers:string',
            'giftCertRecipientName' => 'customers:string',
            'giftCertRecipientEmail' => 'customers:string',
            'giftCertMessage' => 'customers:string',
            'giftCertNumber' => 'customers:string',
            'vsoeSopGroup' => 'commonTyp:VsoeSopGroup',
            'vsoeIsEstimate' => 'customers:boolean',
            'vsoePrice' => 'customers:double',
            'vsoeAmount' => 'customers:double',
            'altSalesAmt' => 'customers:double',
            'vsoeAllocation' => 'customers:double',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'customers:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ReturnAuthorizationItemList => {
            'item' => 'customers:ReturnAuthorizationItem',
        },
    
        ReturnAuthorizationSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'customers:boolean',
            'contribution' => 'customers:double',
        },
    
        ReturnAuthorizationSalesTeamList => {
            'salesTeam' => 'customers:ReturnAuthorizationSalesTeam',
        },
    
        ReturnAuthorizationPartnersList => {
            'partners' => 'common:Partners',
        },
    
        CreditMemo => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'customForm' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'vatRegNum' => 'customers:string',
            'tranDate' => 'customers:dateTime',
            'tranId' => 'customers:string',
            'createdFrom' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'job' => 'core:RecordRef',
            'salesRep' => 'core:RecordRef',
            'partner' => 'core:RecordRef',
            'contribPct' => 'customers:string',
            'otherRefNum' => 'customers:string',
            'memo' => 'customers:string',
            'excludeCommission' => 'customers:boolean',
            'leadSource' => 'core:RecordRef',
            'balance' => 'customers:double',
            'account' => 'core:RecordRef',
            'exchangeRate' => 'customers:double',
            'onCreditHold' => 'customers:string',
            'amountPaid' => 'customers:double',
            'salesEffectiveDate' => 'customers:dateTime',
            'totalCostEstimate' => 'customers:double',
            'estGrossProfit' => 'customers:double',
            'estGrossProfitPercent' => 'customers:double',
            'currencyName' => 'customers:string',
            'promoCode' => 'core:RecordRef',
            'amountRemaining' => 'customers:double',
            'discountItem' => 'core:RecordRef',
            'source' => 'customers:string',
            'discountRate' => 'customers:string',
            'isTaxable' => 'customers:boolean',
            'taxItem' => 'core:RecordRef',
            'taxRate' => 'customers:double',
            'unapplied' => 'customers:double',
            'autoApply' => 'customers:boolean',
            'applied' => 'customers:double',
            'toBePrinted' => 'customers:boolean',
            'toBeEmailed' => 'customers:boolean',
            'email' => 'customers:string',
            'toBeFaxed' => 'customers:boolean',
            'fax' => 'customers:string',
            'messageSel' => 'core:RecordRef',
            'message' => 'customers:string',
            'transactionBillAddress' => 'common:BillAddress',
            'billAddressList' => 'core:RecordRef',
            'billAddress' => 'customers:string',
            'shipMethod' => 'core:RecordRef',
            'shippingCost' => 'customers:double',
            'shippingTax1Rate' => 'customers:double',
            'shippingTaxCode' => 'core:RecordRef',
            'handlingTaxCode' => 'core:RecordRef',
            'shippingTax2Rate' => 'customers:string',
            'handlingTax1Rate' => 'customers:double',
            'handlingTax2Rate' => 'customers:string',
            'handlingCost' => 'customers:double',
            'subTotal' => 'customers:double',
            'discountTotal' => 'customers:double',
            'revenueStatus' => 'commonTypes:RevenueStatus',
            'recognizedRevenue' => 'customers:double',
            'deferredRevenue' => 'customers:double',
            'revRecOnRevCommitment' => 'customers:boolean',
            'taxTotal' => 'customers:double',
            'tax2Total' => 'customers:double',
            'altShippingCost' => 'customers:double',
            'altHandlingCost' => 'customers:double',
            'total' => 'customers:double',
            'salesGroup' => 'core:RecordRef',
            'syncSalesTeams' => 'customers:boolean',
            'status' => 'customers:string',
            'giftCert' => 'core:RecordRef',
            'giftCertTotal' => 'customers:double',
            'giftCertApplied' => 'customers:double',
            'giftCertAvailable' => 'customers:double',
            'tranIsVsoeBundle' => 'customers:boolean',
            'vsoeAutoCalc' => 'customers:boolean',
            'syncPartnerTeams' => 'customers:boolean',
            'salesTeamList' => 'customers:CreditMemoSalesTeamList',
            'itemList' => 'customers:CreditMemoItemList',
            'partnersList' => 'customers:CreditMemoPartnersList',
            'applyList' => 'customers:CreditMemoApplyList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CreditMemoSalesTeam => {
            'employee' => 'core:RecordRef',
            'salesRole' => 'core:RecordRef',
            'isPrimary' => 'customers:boolean',
            'contribution' => 'customers:double',
        },
    
        CreditMemoSalesTeamList => {
            'salesTeam' => 'customers:CreditMemoSalesTeam',
        },
    
        CreditMemoItem => {
            'job' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'orderLine' => 'customers:long',
            'line' => 'customers:long',
            'quantity' => 'customers:double',
            'description' => 'customers:string',
            'binNumbers' => 'customers:string',
            'price' => 'core:RecordRef',
            'rate' => 'customers:string',
            'amount' => 'customers:double',
            'isTaxable' => 'customers:boolean',
            'options' => 'core:CustomFieldList',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'customers:double',
            'taxRate2' => 'customers:double',
            'tax1Amt' => 'customers:double',
            'grossAmt' => 'customers:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'costEstimateType' => 'commonTyp:ItemCostEstimateType',
            'costEstimate' => 'customers:double',
            'revRecSchedule' => 'core:RecordRef',
            'revRecStartDate' => 'customers:dateTime',
            'revRecTermInMonths' => 'customers:long',
            'revRecEndDate' => 'customers:dateTime',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'customers:string',
            'deferRevRec' => 'customers:boolean',
            'giftCertFrom' => 'customers:string',
            'giftCertRecipientName' => 'customers:string',
            'giftCertRecipientEmail' => 'customers:string',
            'giftCertMessage' => 'customers:string',
            'giftCertNumber' => 'customers:string',
            'vsoeSopGroup' => 'commonTyp:VsoeSopGroup',
            'vsoeIsEstimate' => 'customers:boolean',
            'vsoePrice' => 'customers:double',
            'vsoeAmount' => 'customers:double',
            'vsoeAllocation' => 'customers:double',
            'vsoeDeferral' => 'commonTyp:VsoeDeferral',
            'vsoePermitDiscount' => 'commonTyp:VsoePermitDiscount',
            'vsoeDelivered' => 'customers:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CreditMemoItemList => {
            'item' => 'customers:CreditMemoItem',
        },
    
        CreditMemoApply => {
            'apply' => 'customers:boolean',
            'doc' => 'customers:long',
            'applyDate' => 'customers:dateTime',
            'job' => 'customers:string',
            'type' => 'customers:string',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'due' => 'customers:double',
            'currency' => 'customers:string',
            'amount' => 'customers:double',
            'line' => 'customers:long',
        },
    
        CreditMemoApplyList => {
            'apply' => 'customers:CreditMemoApply',
        },
    
        CreditMemoPartnersList => {
            'partners' => 'common:Partners',
        },
    
        CustomerRefund => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'status' => 'customers:string',
            'customer' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'balance' => 'customers:double',
            'arAcct' => 'core:RecordRef',
            'currencyName' => 'customers:string',
            'exchangeRate' => 'customers:double',
            'address' => 'customers:string',
            'total' => 'customers:double',
            'currency' => 'core:RecordRef',
            'tranDate' => 'customers:dateTime',
            'voidJournal' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'memo' => 'customers:string',
            'paymentMethod' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'toBePrinted' => 'customers:boolean',
            'tranId' => 'customers:string',
            'debitCardIssueNo' => 'customers:string',
            'creditCardProcessor' => 'core:RecordRef',
            'chargeIt' => 'customers:boolean',
            'pnRefNum' => 'customers:string',
            'validFrom' => 'customers:dateTime',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'creditCard' => 'core:RecordRef',
            'ccIsPurchaseCardBin' => 'customers:boolean',
            'ccNumber' => 'customers:string',
            'ccProcessAsPurchaseCard' => 'customers:boolean',
            'ccExpireDate' => 'customers:dateTime',
            'ccName' => 'customers:string',
            'ccStreet' => 'customers:string',
            'ccZipCode' => 'customers:string',
            'ccApproved' => 'customers:boolean',
            'applyList' => 'customers:CustomerRefundApplyList',
            'depositList' => 'customers:CustomerRefundDepositList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CustomerRefundApply => {
            'apply' => 'customers:boolean',
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'applyDate' => 'customers:dateTime',
            'type' => 'customers:string',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'due' => 'customers:double',
            'currency' => 'customers:string',
            'amount' => 'customers:double',
        },
    
        CustomerRefundApplyList => {
            'apply' => 'customers:CustomerRefundApply',
        },
    
        CustomerRefundDeposit => {
            'apply' => 'customers:boolean',
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'depositDate' => 'customers:dateTime',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'remaining' => 'customers:double',
            'currency' => 'customers:string',
            'amount' => 'customers:double',
        },
    
        CustomerRefundDepositList => {
            'customerRefundDeposit' => 'customers:CustomerRefundDeposit',
        },
    
        CustomerDeposit => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'status' => 'customers:string',
            'customer' => 'core:RecordRef',
            'salesOrder' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'payment' => 'customers:double',
            'currency' => 'core:RecordRef',
            'tranDate' => 'customers:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'paymentMethod' => 'core:RecordRef',
            'ccIsPurchaseCardBin' => 'customers:boolean',
            'memo' => 'customers:string',
            'ccProcessAsPurchaseCard' => 'customers:boolean',
            'currencyName' => 'customers:string',
            'exchangeRate' => 'customers:double',
            'checkNum' => 'customers:string',
            'creditCardProcessor' => 'core:RecordRef',
            'creditCard' => 'core:RecordRef',
            'ccSecurityCode' => 'customers:string',
            'ccNumber' => 'customers:string',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'ccExpireDate' => 'customers:dateTime',
            'debitCardIssueNo' => 'customers:string',
            'validFrom' => 'customers:dateTime',
            'ccName' => 'customers:string',
            'ccStreet' => 'customers:string',
            'ccZipCode' => 'customers:string',
            'chargeIt' => 'customers:boolean',
            'ccApproved' => 'customers:boolean',
            'pnRefNum' => 'customers:string',
            'authCode' => 'customers:string',
            'ccAvsStreetMatch' => 'commonTypes:AvsMatchCode',
            'softDescriptor' => 'customers:string',
            'ccAvsZipMatch' => 'commonTypes:AvsMatchCode',
            'ccSecurityCodeMatch' => 'commonTypes:AvsMatchCode',
            'threeDStatusCode' => 'customers:string',
            'ignoreAvs' => 'customers:boolean',
            'account' => 'core:RecordRef',
            'undepFunds' => 'customers:boolean',
            'applyList' => 'customers:CustomerDepositApplyList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CustomerDepositApply => {
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'apply' => 'customers:boolean',
            'applyDate' => 'customers:dateTime',
            'type' => 'customers:string',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'amount' => 'customers:double',
            'job' => 'customers:string',
        },
    
        CustomerDepositApplyList => {
            'customerDepositApply' => 'customers:CustomerDepositApply',
        },
    
        DepositApplication => {
            'createdDate' => 'customers:dateTime',
            'lastModifiedDate' => 'customers:dateTime',
            'arAcct' => 'customers:string',
            'status' => 'customers:string',
            'customer' => 'core:RecordRef',
            'tranDate' => 'customers:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'deposit' => 'core:RecordRef',
            'depDate' => 'customers:dateTime',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'customers:double',
            'memo' => 'customers:string',
            'subsidiary' => 'core:RecordRef',
            'total' => 'customers:double',
            'department' => 'core:RecordRef',
            'applied' => 'customers:double',
            'class' => 'core:RecordRef',
            'unapplied' => 'customers:double',
            'location' => 'core:RecordRef',
            'tranId' => 'customers:string',
            'applyList' => 'customers:DepositApplicationApplyList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        DepositApplicationApply => {
            'doc' => 'customers:long',
            'line' => 'customers:long',
            'apply' => 'customers:boolean',
            'applyDate' => 'customers:dateTime',
            'job' => 'customers:string',
            'type' => 'customers:string',
            'refNum' => 'customers:string',
            'total' => 'customers:double',
            'due' => 'customers:double',
            'currency' => 'customers:string',
            'amount' => 'customers:double',
        },
    
        DepositApplicationApplyList => {
            'apply' => 'customers:DepositApplicationApply',
        },
    
        Budget => {
            'year' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'category' => 'core:RecordRef',
            'budgetType' => 'financialTypes:BudgetBudgetType',
            'currency' => 'core:RecordRef',
            'periodAmount1' => 'financial:double',
            'periodAmount2' => 'financial:double',
            'periodAmount3' => 'financial:double',
            'periodAmount4' => 'financial:double',
            'periodAmount5' => 'financial:double',
            'periodAmount6' => 'financial:double',
            'periodAmount7' => 'financial:double',
            'periodAmount8' => 'financial:double',
            'periodAmount9' => 'financial:double',
            'periodAmount10' => 'financial:double',
            'periodAmount11' => 'financial:double',
            'periodAmount12' => 'financial:double',
            'amount' => 'financial:double',
        },
    
        BudgetSearchAdvanced => {
            'criteria' => 'financial:BudgetSearch',
            'columns' => 'financial:BudgetSearchRow',
        },
    
        BudgetSearchRow => {
            'basic' => 'common:BudgetSearchRowBasic',
        },
    
        CheckLandedCostList => {
            'landedCost' => 'common:LandedCost',
        },
    
        Check => {
            'createdDate' => 'bank:dateTime',
            'lastModifiedDate' => 'bank:dateTime',
            'status' => 'bank:string',
            'customForm' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'balance' => 'bank:double',
            'entity' => 'core:RecordRef',
            'address' => 'bank:string',
            'subsidiary' => 'core:RecordRef',
            'postingPeriod' => 'core:RecordRef',
            'tranDate' => 'bank:dateTime',
            'currency' => 'core:RecordRef',
            'voidJournal' => 'core:RecordRef',
            'exchangeRate' => 'bank:double',
            'toBePrinted' => 'bank:boolean',
            'tranId' => 'bank:string',
            'memo' => 'bank:string',
            'department' => 'core:RecordRef',
            'taxTotal' => 'bank:double',
            'class' => 'core:RecordRef',
            'tax2Total' => 'bank:double',
            'location' => 'core:RecordRef',
            'userTotal' => 'bank:double',
            'landedCostMethod' => 'commonTypes:LandedCostMethod',
            'expenseList' => 'bank:CheckExpenseList',
            'itemList' => 'bank:CheckItemList',
            'landedCostsList' => 'bank:CheckLandedCostList',
            'billPay' => 'bank:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CheckExpense => {
            'line' => 'bank:long',
            'category' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'amount' => 'bank:double',
            'memo' => 'bank:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'bank:boolean',
            'taxCode' => 'core:RecordRef',
            'taxRate1' => 'bank:double',
            'tax1Amt' => 'bank:double',
            'taxRate2' => 'bank:double',
            'grossAmt' => 'bank:double',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CheckExpenseList => {
            'expense' => 'bank:CheckExpense',
        },
    
        CheckItem => {
            'item' => 'core:RecordRef',
            'vendorName' => 'bank:string',
            'line' => 'bank:long',
            'quantity' => 'bank:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'description' => 'bank:string',
            'binNumbers' => 'bank:string',
            'serialNumbers' => 'bank:string',
            'expirationDate' => 'bank:dateTime',
            'rate' => 'bank:string',
            'taxCode' => 'core:RecordRef',
            'amount' => 'bank:double',
            'options' => 'core:CustomFieldList',
            'taxRate1' => 'bank:double',
            'taxRate2' => 'bank:double',
            'department' => 'core:RecordRef',
            'grossAmt' => 'bank:double',
            'class' => 'core:RecordRef',
            'tax1Amt' => 'bank:double',
            'location' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'isBillable' => 'bank:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CheckItemList => {
            'item' => 'bank:CheckItem',
        },
    
        InventoryAdjustment => {
            'postingPeriod' => 'core:RecordRef',
            'tranDate' => 'inventory:dateTime',
            'createdDate' => 'inventory:dateTime',
            'tranId' => 'inventory:string',
            'lastModifiedDate' => 'inventory:dateTime',
            'subsidiary' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'estimatedTotalValue' => 'inventory:double',
            'customer' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'adjLocation' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'inventoryList' => 'inventory:InventoryAdjustmentInventoryList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InventoryAdjustmentInventory => {
            'item' => 'core:RecordRef',
            'line' => 'inventory:long',
            'inventoryDetail' => 'common:InventoryDetail',
            'description' => 'inventory:string',
            'location' => 'core:RecordRef',
            'units' => 'core:RecordRef',
            'quantityOnHand' => 'inventory:double',
            'currentValue' => 'inventory:double',
            'adjustQtyBy' => 'inventory:double',
            'binNumbers' => 'inventory:string',
            'serialNumbers' => 'inventory:string',
            'newQuantity' => 'inventory:double',
            'unitCost' => 'inventory:double',
            'foreignCurrencyUnitCost' => 'inventory:double',
            'memo' => 'inventory:string',
            'currency' => 'inventory:string',
            'expirationDate' => 'inventory:dateTime',
            'exchangeRate' => 'inventory:double',
        },
    
        InventoryAdjustmentInventoryList => {
            'inventory' => 'inventory:InventoryAdjustmentInventory',
        },
    
        AssemblyBuild => {
            'createdDate' => 'inventory:dateTime',
            'expirationDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'createdFrom' => 'core:RecordRef',
            'tranDate' => 'inventory:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'item' => 'core:RecordRef',
            'buildable' => 'inventory:double',
            'quantity' => 'inventory:double',
            'units' => 'core:RecordRef',
            'total' => 'inventory:double',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'inventory:string',
            'binNumbers' => 'inventory:string',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revision' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'componentList' => 'inventory:AssemblyComponentList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        AssemblyUnbuild => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'tranDate' => 'inventory:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'item' => 'core:RecordRef',
            'built' => 'inventory:double',
            'quantity' => 'inventory:double',
            'units' => 'core:RecordRef',
            'total' => 'inventory:double',
            'serialNumbers' => 'inventory:string',
            'inventoryDetail' => 'common:InventoryDetail',
            'binNumbers' => 'inventory:string',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'componentList' => 'inventory:AssemblyComponentList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        AssemblyComponent => {
            'item' => 'core:RecordRef',
            'quantity' => 'inventory:double',
            'quantityOnHand' => 'inventory:double',
            'componentInventoryDetail' => 'common:InventoryDetail',
            'componentNumbers' => 'inventory:string',
            'binNumbers' => 'inventory:string',
        },
    
        AssemblyComponentList => {
            'component' => 'inventory:AssemblyComponent',
        },
    
        TransferOrder => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'shippingCost' => 'inventory:double',
            'subTotal' => 'inventory:double',
            'status' => 'inventory:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'inventory:string',
            'fob' => 'inventory:string',
            'tranDate' => 'inventory:dateTime',
            'tranId' => 'inventory:string',
            'source' => 'inventory:string',
            'orderStatus' => 'inventoryTypes:TransferOrderOrderStatus',
            'subsidiary' => 'core:RecordRef',
            'employee' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'transferLocation' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'shipDate' => 'inventory:dateTime',
            'shipMethod' => 'core:RecordRef',
            'trackingNumbers' => 'inventory:string',
            'linkedTrackingNumbers' => 'inventory:string',
            'shipComplete' => 'inventory:boolean',
            'altShippingCost' => 'inventory:double',
            'shippingTax1Rate' => 'inventory:double',
            'shippingTax2Rate' => 'inventory:double',
            'handlingTax1Rate' => 'inventory:double',
            'handlingTax2Rate' => 'inventory:double',
            'shippingTaxCode' => 'core:RecordRef',
            'handlingTaxCode' => 'core:RecordRef',
            'total' => 'inventory:double',
            'itemList' => 'inventory:TransferOrderItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        TransferOrderItem => {
            'item' => 'core:RecordRef',
            'line' => 'inventory:long',
            'quantityAvailable' => 'inventory:double',
            'quantityOnHand' => 'inventory:double',
            'quantityBackOrdered' => 'inventory:double',
            'quantityCommitted' => 'inventory:double',
            'quantityFulfilled' => 'inventory:double',
            'quantityPacked' => 'inventory:double',
            'quantityPicked' => 'inventory:double',
            'quantityReceived' => 'inventory:double',
            'quantity' => 'inventory:double',
            'rate' => 'inventory:double',
            'units' => 'core:RecordRef',
            'amount' => 'inventory:double',
            'description' => 'inventory:string',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'inventory:string',
            'commitInventory' => 'inventoryTypes:TransferOrderItemCommitInventory',
            'options' => 'core:CustomFieldList',
            'isClosed' => 'inventory:boolean',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'lastPurchasePrice' => 'inventory:double',
            'averageCost' => 'inventory:double',
            'expectedShipDate' => 'inventory:dateTime',
            'expectedReceiptDate' => 'inventory:dateTime',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        TransferOrderItemList => {
            'item' => 'inventory:TransferOrderItem',
        },
    
        InterCompanyTransferOrder => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'shippingCost' => 'inventory:double',
            'subTotal' => 'inventory:double',
            'status' => 'inventory:string',
            'transactionShipAddress' => 'common:ShipAddress',
            'shipAddressList' => 'core:RecordRef',
            'shipAddress' => 'inventory:string',
            'fob' => 'inventory:string',
            'tranDate' => 'inventory:dateTime',
            'tranId' => 'inventory:string',
            'source' => 'inventory:string',
            'orderStatus' => 'inventoryTypes:TransferOrderOrderStatus',
            'subsidiary' => 'core:RecordRef',
            'toSubsidiary' => 'core:RecordRef',
            'employee' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'transferLocation' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'shipDate' => 'inventory:dateTime',
            'shipMethod' => 'core:RecordRef',
            'trackingNumbers' => 'inventory:string',
            'linkedTrackingNumbers' => 'inventory:string',
            'shipComplete' => 'inventory:boolean',
            'altShippingCost' => 'inventory:double',
            'shippingTax1Rate' => 'inventory:double',
            'handlingTax1Rate' => 'inventory:double',
            'shippingTax2Rate' => 'inventory:double',
            'handlingTax2Rate' => 'inventory:double',
            'shippingTaxCode' => 'core:RecordRef',
            'handlingTaxCode' => 'core:RecordRef',
            'total' => 'inventory:double',
            'itemList' => 'inventory:InterCompanyTransferOrderItemList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InterCompanyTransferOrderItem => {
            'item' => 'core:RecordRef',
            'line' => 'inventory:long',
            'quantityAvailable' => 'inventory:double',
            'quantityOnHand' => 'inventory:double',
            'quantityBackOrdered' => 'inventory:double',
            'quantityCommitted' => 'inventory:double',
            'quantityFulfilled' => 'inventory:double',
            'quantityReceived' => 'inventory:double',
            'quantity' => 'inventory:double',
            'rate' => 'inventory:double',
            'units' => 'core:RecordRef',
            'amount' => 'inventory:double',
            'description' => 'inventory:string',
            'inventoryDetail' => 'common:InventoryDetail',
            'commitInventory' => 'inventoryTypes:TransferOrderItemCommitInventory',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'lastPurchasePrice' => 'inventory:double',
            'averageCost' => 'inventory:double',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InterCompanyTransferOrderItemList => {
            'item' => 'inventory:InterCompanyTransferOrderItem',
        },
    
        WorkOrder => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'manufacturingRouting' => 'core:RecordRef',
            'status' => 'inventory:string',
            'tranId' => 'inventory:string',
            'entity' => 'core:RecordRef',
            'job' => 'core:RecordRef',
            'assemblyItem' => 'core:RecordRef',
            'expandAssembly' => 'inventory:boolean',
            'isWip' => 'inventory:boolean',
            'quantity' => 'inventory:double',
            'units' => 'core:RecordRef',
            'tranDate' => 'inventory:dateTime',
            'memo' => 'inventory:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'itemList' => 'inventory:WorkOrderItemList',
            'location' => 'core:RecordRef',
            'salesTeamList' => 'inventory:SalesTeamList',
            'partnersList' => 'inventory:PartnersList',
            'createdFrom' => 'core:RecordRef',
            'buildable' => 'inventory:double',
            'options' => 'core:CustomFieldList',
            'built' => 'inventory:double',
            'startDate' => 'inventory:dateTime',
            'endDate' => 'inventory:dateTime',
            'revision' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        WorkOrderItem => {
            'line' => 'inventory:long',
            'item' => 'core:RecordRef',
            'quantityCommitted' => 'inventory:double',
            'quantityBackOrdered' => 'inventory:double',
            'quantityAvailable' => 'inventory:double',
            'averageCost' => 'inventory:double',
            'lastPurchasePrice' => 'inventory:double',
            'quantityOnHand' => 'inventory:double',
            'quantity' => 'inventory:double',
            'units' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'serialNumbers' => 'inventory:string',
            'options' => 'core:CustomFieldList',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'poVendor' => 'core:RecordRef',
            'poRate' => 'inventory:double',
            'percentComplete' => 'inventory:double',
            'contribution' => 'inventory:double',
            'description' => 'inventory:string',
            'commit' => 'inventoryTypes:WorkOrderItemItemCommitInventory',
            'createPo' => 'inventoryTypes:WorkOrderItemItemCreatePo',
            'createWo' => 'inventory:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        WorkOrderItemList => {
            'item' => 'inventory:WorkOrderItem',
        },
    
        SalesTeamList => {
            'salesTeam' => 'common:CustomerSalesTeam',
        },
    
        PartnersList => {
            'partners' => 'common:Partners',
        },
    
        InventoryTransfer => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'tranDate' => 'inventory:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'memo' => 'inventory:string',
            'location' => 'core:RecordRef',
            'transferLocation' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'inventoryList' => 'inventory:InventoryTransferInventoryList',
        },
    
        InventoryTransferInventory => {
            'line' => 'inventory:long',
            'item' => 'core:RecordRef',
            'description' => 'inventory:string',
            'units' => 'core:RecordRef',
            'quantityOnHand' => 'inventory:double',
            'adjustQtyBy' => 'inventory:double',
            'serialNumbers' => 'inventory:string',
            'fromBinNumbers' => 'inventory:string',
            'toBinNumbers' => 'inventory:string',
            'inventoryDetail' => 'common:InventoryDetail',
        },
    
        InventoryTransferInventoryList => {
            'inventory' => 'inventory:InventoryTransferInventory',
        },
    
        BinTransfer => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'tranDate' => 'inventory:dateTime',
            'memo' => 'inventory:string',
            'location' => 'core:RecordRef',
            'inventoryList' => 'inventory:BinTransferInventoryList',
            'subsidiary' => 'core:RecordRef',
            'tranId' => 'inventory:string',
        },
    
        BinTransferInventory => {
            'line' => 'inventory:long',
            'item' => 'core:RecordRef',
            'description' => 'inventory:string',
            'preferredBin' => 'inventory:string',
            'quantity' => 'inventory:double',
            'itemUnitsLabel' => 'inventory:string',
            'inventoryDetail' => 'common:InventoryDetail',
            'fromBins' => 'inventory:string',
            'toBins' => 'inventory:string',
        },
    
        BinTransferInventoryList => {
            'inventory' => 'inventory:BinTransferInventory',
        },
    
        BinWorksheet => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'tranDate' => 'inventory:dateTime',
            'memo' => 'inventory:string',
            'location' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'itemList' => 'inventory:BinWorksheetItemList',
        },
    
        BinWorksheetItem => {
            'item' => 'core:RecordRef',
            'itemName' => 'inventory:string',
            'description' => 'inventory:string',
            'quantity' => 'inventory:double',
            'itemOnHand' => 'inventory:string',
            'itemUnitsLabel' => 'inventory:string',
            'inventoryDetail' => 'common:InventoryDetail',
            'itemBins' => 'inventory:string',
            'itemBinNumbers' => 'inventory:string',
            'itemBinList' => 'inventory:string',
            'itemPreferBin' => 'inventory:string',
            'itemBlank' => 'inventory:string',
        },
    
        BinWorksheetItemList => {
            'item' => 'inventory:BinWorksheetItem',
        },
    
        WorkOrderIssue => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'item' => 'core:RecordRef',
            'createdFrom' => 'core:RecordRef',
            'tranDate' => 'inventory:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revision' => 'core:RecordRef',
            'componentList' => 'inventory:WorkOrderIssueComponentList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        WorkOrderIssueComponent => {
            'item' => 'core:RecordRef',
            'quantity' => 'inventory:double',
            'componentInventoryDetail' => 'common:InventoryDetail',
            'lineNumber' => 'inventory:long',
        },
    
        WorkOrderIssueComponentList => {
            'workOrderIssueComponent' => 'inventory:WorkOrderIssueComponent',
        },
    
        WorkOrderCompletion => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'item' => 'core:RecordRef',
            'quantity' => 'inventory:double',
            'scrapQuantity' => 'inventory:double',
            'units' => 'core:RecordRef',
            'isBackflush' => 'inventory:boolean',
            'orderQuantity' => 'inventory:double',
            'total' => 'inventory:double',
            'createdFrom' => 'core:RecordRef',
            'inventoryDetail' => 'common:InventoryDetail',
            'tranDate' => 'inventory:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revision' => 'core:RecordRef',
            'startOperation' => 'core:RecordRef',
            'endOperation' => 'core:RecordRef',
            'completedQuantity' => 'inventory:double',
            'manufacturingRouting' => 'core:RecordRef',
            'componentList' => 'inventory:WorkOrderCompletionComponentList',
            'operationList' => 'inventory:WorkOrderCompletionOperationList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        WorkOrderCompletionComponent => {
            'item' => 'core:RecordRef',
            'quantityPer' => 'inventory:double',
            'quantity' => 'inventory:double',
            'componentInventoryDetail' => 'common:InventoryDetail',
            'lineNumber' => 'inventory:long',
        },
    
        WorkOrderCompletionComponentList => {
            'workOrderCompletionComponent' => 'inventory:WorkOrderCompletionComponent',
        },
    
        WorkOrderClose => {
            'createdDate' => 'inventory:dateTime',
            'lastModifiedDate' => 'inventory:dateTime',
            'customForm' => 'core:RecordRef',
            'tranId' => 'inventory:string',
            'item' => 'core:RecordRef',
            'quantity' => 'inventory:double',
            'orderQuantity' => 'inventory:double',
            'scrapQuantity' => 'inventory:double',
            'createdFrom' => 'core:RecordRef',
            'tranDate' => 'inventory:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'memo' => 'inventory:string',
            'subsidiary' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'revision' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        WorkOrderCompletionOperation => {
            'operationSequence' => 'inventory:long',
            'operationName' => 'inventory:string',
            'workCenter' => 'inventory:string',
            'machineResources' => 'inventory:long',
            'laborResources' => 'inventory:long',
            'inputQuantity' => 'inventory:double',
            'quantityRemaining' => 'inventory:double',
            'predecessorCompletedQuantity' => 'inventory:double',
            'completedQuantity' => 'inventory:double',
            'recordSetup' => 'inventory:boolean',
            'machineSetupTime' => 'inventory:double',
            'laborSetupTime' => 'inventory:double',
            'machineRunTime' => 'inventory:double',
            'laborRunTime' => 'inventory:double',
        },
    
        WorkOrderCompletionOperationList => {
            'workOrderCompletionOperation' => 'inventory:WorkOrderCompletionOperation',
        },
    
        JournalEntry => {
            'postingPeriod' => 'core:RecordRef',
            'tranDate' => 'general:dateTime',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'general:double',
            'tranId' => 'general:string',
            'reversalDate' => 'general:dateTime',
            'reversalDefer' => 'general:boolean',
            'parentExpenseAlloc' => 'core:RecordRef',
            'reversalEntry' => 'general:string',
            'createdFrom' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'toSubsidiary' => 'core:RecordRef',
            'approved' => 'general:boolean',
            'createdDate' => 'general:dateTime',
            'lastModifiedDate' => 'general:dateTime',
            'customForm' => 'core:RecordRef',
            'lineList' => 'general:JournalEntryLineList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        JournalEntryLine => {
            'account' => 'core:RecordRef',
            'debit' => 'general:double',
            'credit' => 'general:double',
            'taxCode' => 'core:RecordRef',
            'memo' => 'general:string',
            'taxRate1' => 'general:double',
            'entity' => 'core:RecordRef',
            'grossAmt' => 'general:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'eliminate' => 'general:boolean',
            'schedule' => 'core:RecordRef',
            'startDate' => 'general:dateTime',
            'endDate' => 'general:dateTime',
            'residual' => 'general:string',
            'scheduleNum' => 'core:RecordRef',
            'tax1Amt' => 'general:double',
            'tax1Acct' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        JournalEntryLineList => {
            'line' => 'general:JournalEntryLine',
        },
    
        InterCompanyJournalEntry => {
            'postingPeriod' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'tranDate' => 'general:dateTime',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'general:double',
            'tranId' => 'general:string',
            'reversalDate' => 'general:dateTime',
            'reversalDefer' => 'general:boolean',
            'parentExpenseAlloc' => 'core:RecordRef',
            'reversalEntry' => 'general:string',
            'createdFrom' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'toSubsidiary' => 'core:RecordRef',
            'approved' => 'general:boolean',
            'createdDate' => 'general:dateTime',
            'lastModifiedDate' => 'general:dateTime',
            'lineList' => 'general:InterCompanyJournalEntryLineList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InterCompanyJournalEntryLine => {
            'lineSubsidiary' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'debit' => 'general:double',
            'credit' => 'general:double',
            'taxCode' => 'core:RecordRef',
            'memo' => 'general:string',
            'taxRate1' => 'general:double',
            'entity' => 'core:RecordRef',
            'grossAmt' => 'general:double',
            'schedule' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'startDate' => 'general:dateTime',
            'class' => 'core:RecordRef',
            'endDate' => 'general:dateTime',
            'location' => 'core:RecordRef',
            'eliminate' => 'general:boolean',
            'residual' => 'general:string',
            'amortizationSched' => 'core:RecordRef',
            'scheduleNum' => 'core:RecordRef',
            'amortizStartDate' => 'general:dateTime',
            'amortizationEndDate' => 'general:dateTime',
            'amortizationResidual' => 'general:string',
            'tax1Amt' => 'general:double',
            'tax1Acct' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        InterCompanyJournalEntryLineList => {
            'line' => 'general:InterCompanyJournalEntryLine',
        },
    
        CustomRecord => {
            'customRecordId' => 'customization:string',
            'customForm' => 'core:RecordRef',
            'isInactive' => 'customization:boolean',
            'disclaimer' => 'customization:string',
            'created' => 'customization:dateTime',
            'lastModified' => 'customization:dateTime',
            'name' => 'customization:string',
            'owner' => 'core:RecordRef',
            'recType' => 'core:RecordRef',
            'enableNumbering' => 'customization:boolean',
            'numberingPrefix' => 'customization:string',
            'numberingSuffix' => 'customization:string',
            'numberingMinDigits' => 'customization:long',
            'description' => 'customization:string',
            'numberingInit' => 'customization:long',
            'numberingCurrentNumber' => 'customization:long',
            'allowNumberingOverride' => 'customization:boolean',
            'isNumberingUpdateable' => 'customization:boolean',
            'includeName' => 'customization:boolean',
            'showId' => 'customization:boolean',
            'showCreationDate' => 'customization:boolean',
            'showCreationDateOnList' => 'customization:boolean',
            'showLastModified' => 'customization:boolean',
            'showLastModifiedOnList' => 'customization:boolean',
            'showOwner' => 'customization:boolean',
            'showOwnerOnList' => 'customization:boolean',
            'showOwnerAllowChange' => 'customization:boolean',
            'usePermissions' => 'customization:boolean',
            'allowAttachments' => 'customization:boolean',
            'showNotes' => 'customization:boolean',
            'enablEmailMerge' => 'customization:boolean',
            'isOrdered' => 'customization:boolean',
            'allowInlineEditing' => 'customization:boolean',
            'isAvailableOffline' => 'customization:boolean',
            'allowQuickSearch' => 'customization:boolean',
            'recordName' => 'customization:string',
            'scriptId' => 'customization:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CustomRecordSearchAdvanced => {
            'criteria' => 'customization:CustomRecordSearch',
            'columns' => 'customization:CustomRecordSearchRow',
        },
    
        CustomRecordSearchRow => {
            'basic' => 'common:CustomRecordSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'ownerJoin' => 'common:EmployeeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        CustomList => {
            'name' => 'customization:string',
            'owner' => 'core:RecordRef',
            'isOrdered' => 'customization:boolean',
            'description' => 'customization:string',
            'isMatrixOption' => 'customization:boolean',
            'scriptId' => 'customization:string',
            'convertToCustomRecord' => 'customization:boolean',
            'isInactive' => 'customization:boolean',
            'customValueList' => 'customization:CustomListCustomValueList',
            'translationsList' => 'customization:CustomListTranslationsList',
        },
    
        CustomListCustomValue => {
            'value' => 'customization:string',
            'abbreviation' => 'customization:string',
            'isInactive' => 'customization:boolean',
            'valueId' => 'customization:long',
            'valueLanguageValueList' => 'customization:LanguageValueList',
        },
    
        CustomListCustomValueList => {
            'customValue' => 'customization:CustomListCustomValue',
        },
    
        CustomListTranslations => {
            'locale' => 'commonTyp:Language',
            'localeDescription' => 'customization:string',
            'name' => 'customization:string',
        },
    
        CustomListTranslationsList => {
            'translations' => 'customization:CustomListTranslations',
        },
    
        CustomRecordType => {
            'recordName' => 'customization:string',
            'includeName' => 'customization:boolean',
            'showId' => 'customization:boolean',
            'showCreationDate' => 'customization:boolean',
            'showCreationDateOnList' => 'customization:boolean',
            'showLastModified' => 'customization:boolean',
            'showLastModifiedOnList' => 'customization:boolean',
            'showOwner' => 'customization:boolean',
            'showOwnerOnList' => 'customization:boolean',
            'showOwnerAllowChange' => 'customization:boolean',
            'accessType' => 'customizationTypes:CustomRecordTypeAccessType',
            'allowAttachments' => 'customization:boolean',
            'showNotes' => 'customization:boolean',
            'enableMailMerge' => 'customization:boolean',
            'isOrdered' => 'customization:boolean',
            'isAvailableOffline' => 'customization:boolean',
            'allowQuickSearch' => 'customization:boolean',
            'enableDle' => 'customization:boolean',
            'isInactive' => 'customization:boolean',
            'disclaimer' => 'customization:string',
            'enableNumbering' => 'customization:boolean',
            'numberingPrefix' => 'customization:string',
            'numberingSuffix' => 'customization:string',
            'numberingMinDigits' => 'customization:long',
            'numberingInit' => 'customization:long',
            'numberingCurrentNumber' => 'customization:long',
            'allowNumberingOverride' => 'customization:boolean',
            'isNumberingUpdateable' => 'customization:boolean',
            'scriptId' => 'customization:string',
            'owner' => 'core:RecordRef',
            'description' => 'customization:string',
            'tabsList' => 'customization:CustomRecordTypeTabsList',
            'sublistsList' => 'customization:CustomRecordTypeSublistsList',
            'formsList' => 'customization:CustomRecordTypeFormsList',
            'onlineFormsList' => 'customization:CustomRecordTypeOnlineFormsList',
            'permissionsList' => 'customization:CustomRecordTypePermissionsList',
            'linksList' => 'customization:CustomRecordTypeLinksList',
            'managersList' => 'customization:CustomRecordTypeManagersList',
            'childrenList' => 'customization:CustomRecordTypeChildrenList',
            'parentsList' => 'customization:CustomRecordTypeParentsList',
            'translationsList' => 'customization:CustomRecordTypeTranslationsList',
            'customFieldList' => 'customization:CustomRecordTypeFieldList',
        },
    
        CustomRecordTypeFieldList => {
            'customField' => 'customization:CustomRecordCustomField',
        },
    
        CustomRecordTypeTabs => {
            'tabTitle' => 'customization:string',
            'tabParent' => 'core:RecordRef',
            'tabTitleLanguageValueList' => 'customization:LanguageValueList',
        },
    
        CustomRecordTypeTabsList => {
            'tabs' => 'customization:CustomRecordTypeTabs',
        },
    
        CustomRecordTypeForms => {
            'formEdit' => 'customization:string',
            'formName' => 'customization:string',
            'formPref' => 'customization:boolean',
        },
    
        CustomRecordTypeFormsList => {
            'forms' => 'customization:CustomRecordTypeForms',
        },
    
        CustomRecordTypeOnlineForms => {
            'onlineFormName' => 'customization:string',
            'isOnline' => 'customization:string',
            'templateName' => 'customization:string',
        },
    
        CustomRecordTypeOnlineFormsList => {
            'onlineForms' => 'customization:CustomRecordTypeOnlineForms',
        },
    
        CustomRecordTypePermissions => {
            'permittedRole' => 'core:RecordRef',
            'permittedLevel' => 'customizationTypes:CustomRecordTypePermissionsPermittedLevel',
            'restriction' => 'customizationTypes:CustomRecordTypePermissionsRestriction',
            'defaultForm' => 'core:RecordRef',
            'restrictForm' => 'customization:boolean',
            'searchForm' => 'core:RecordRef',
            'searchResults' => 'core:RecordRef',
            'listView' => 'core:RecordRef',
            'listViewRestricted' => 'customization:boolean',
            'dashboardView' => 'core:RecordRef',
            'restrictDashboardView' => 'customization:boolean',
            'sublistView' => 'core:RecordRef',
            'restrictSublistView' => 'customization:boolean',
        },
    
        CustomRecordTypePermissionsList => {
            'permissions' => 'customization:CustomRecordTypePermissions',
        },
    
        CustomRecordTypeLinks => {
            'linkCenter' => 'core:RecordRef',
            'linkSection' => 'core:RecordRef',
            'linkLabel' => 'customization:string',
        },
    
        CustomRecordTypeLinksList => {
            'links' => 'customization:CustomRecordTypeLinks',
        },
    
        CustomRecordTypeManagers => {
            'managerEmp' => 'core:RecordRef',
        },
    
        CustomRecordTypeManagersList => {
            'managers' => 'customization:CustomRecordTypeManagers',
        },
    
        CustomRecordTypeChildren => {
            'childDescr' => 'customization:string',
            'childTab' => 'core:RecordRef',
        },
    
        CustomRecordTypeChildrenList => {
            'children' => 'customization:CustomRecordTypeChildren',
        },
    
        CustomRecordTypeParents => {
            'childDescr' => 'customization:string',
        },
    
        CustomRecordTypeParentsList => {
            'parents' => 'customization:CustomRecordTypeParents',
        },
    
        CustomRecordTypeTranslations => {
            'locale' => 'commonTyp:Language',
            'localeDescription' => 'customization:string',
            'name' => 'customization:string',
        },
    
        CustomRecordTypeTranslationsList => {
            'translations' => 'customization:CustomRecordTypeTranslations',
        },
    
        CustomRecordTypeSublists => {
            'recordSearch' => 'core:RecordRef',
            'recordDescr' => 'customization:string',
            'recordDescrLanguageValueList' => 'customization:LanguageValueList',
            'recordTab' => 'core:RecordRef',
            'recordId' => 'customization:string',
        },
    
        CustomRecordTypeSublistsList => {
            'sublists' => 'customization:CustomRecordTypeSublists',
        },
    
        EntityCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'globalSearch' => 'customization:boolean',
            'isParent' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'availableToSso' => 'customization:boolean',
            'subtab' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'parentSubtab' => 'core:RecordRef',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'appliesToCustomer' => 'customization:boolean',
            'appliesToProject' => 'customization:boolean',
            'appliesToVendor' => 'customization:boolean',
            'appliesToEmployee' => 'customization:boolean',
            'appliesToOtherName' => 'customization:boolean',
            'appliesToContact' => 'customization:boolean',
            'appliesToPartner' => 'customization:boolean',
            'appliesToWebSite' => 'customization:boolean',
            'appliesToGroup' => 'customization:boolean',
            'availableExternally' => 'customization:boolean',
            'filterList' => 'customization:EntityCustomFieldFilterList',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'appliesToStatement' => 'customization:boolean',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'appliesToPriceList' => 'customization:boolean',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        EntityCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        EntityCustomFieldFilterList => {
            'filter' => 'customization:EntityCustomFieldFilter',
        },
    
        FldFilterSelList => {
            'fldFilterSel' => 'core:RecordRef',
        },
    
        CrmCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'globalSearch' => 'customization:boolean',
            'isParent' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'subtab' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'parentSubtab' => 'core:RecordRef',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'appliesToTask' => 'customization:boolean',
            'appliesToProjectTask' => 'customization:boolean',
            'appliesToPhoneCall' => 'customization:boolean',
            'appliesToEvent' => 'customization:boolean',
            'appliesToCase' => 'customization:boolean',
            'appliesToCampaign' => 'customization:boolean',
            'appliesPerKeyword' => 'customization:boolean',
            'appliesToSolution' => 'customization:boolean',
            'appliesToIssue' => 'customization:boolean',
            'availableExternally' => 'customization:boolean',
            'availableToSso' => 'customization:boolean',
            'showIssueChanges' => 'customization:boolean',
            'filterList' => 'customization:CrmCustomFieldFilterList',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        CrmCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        CrmCustomFieldFilterList => {
            'filter' => 'customization:CrmCustomFieldFilter',
        },
    
        OtherCustomField => {
            'recType' => 'core:RecordRef',
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'filterList' => 'customization:OtherCustomFieldFilterList',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        OtherCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        OtherCustomFieldFilterList => {
            'filter' => 'customization:OtherCustomFieldFilter',
        },
    
        ItemCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'itemMatrix' => 'customization:boolean',
            'description' => 'customization:string',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'globalSearch' => 'customization:boolean',
            'isParent' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'subtab' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'parentSubtab' => 'core:RecordRef',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'appliesToInventory' => 'customization:boolean',
            'appliesToNonInventory' => 'customization:boolean',
            'appliesToService' => 'customization:boolean',
            'appliesToOtherCharge' => 'customization:boolean',
            'appliesToGroup' => 'customization:boolean',
            'appliesToKit' => 'customization:boolean',
            'appliesToItemAssembly' => 'customization:boolean',
            'availableToSso' => 'customization:boolean',
            'itemSubType' => 'customizationTypes:ItemCustomFieldItemSubType',
            'filterList' => 'customization:ItemCustomFieldFilterList',
            'appliesToPriceList' => 'customization:boolean',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        ItemCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        ItemCustomFieldFilterList => {
            'filter' => 'customization:ItemCustomFieldFilter',
        },
    
        TransactionBodyCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'globalSearch' => 'customization:boolean',
            'isParent' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'subtab' => 'core:RecordRef',
            'availableToSso' => 'customization:boolean',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'parentSubtab' => 'core:RecordRef',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'bodyPurchase' => 'customization:boolean',
            'bodySale' => 'customization:boolean',
            'bodyOpportunity' => 'customization:boolean',
            'bodyJournal' => 'customization:boolean',
            'bodyExpenseReport' => 'customization:boolean',
            'bodyStore' => 'customization:boolean',
            'bodyTransferOrder' => 'customization:boolean',
            'bodyItemReceipt' => 'customization:boolean',
            'bodyItemReceiptOrder' => 'customization:boolean',
            'bodyItemFulfillment' => 'customization:boolean',
            'bodyItemFulfillmentOrder' => 'customization:boolean',
            'bodyInventoryAdjustment' => 'customization:boolean',
            'bodyBTegata' => 'customization:boolean',
            'bodyAssemblyBuild' => 'customization:boolean',
            'bodyPrintFlag' => 'customization:boolean',
            'bodyPickingTicket' => 'customization:boolean',
            'bodyPrintPackingSlip' => 'customization:boolean',
            'bodyCustomerPayment' => 'customization:boolean',
            'bodyVendorPayment' => 'customization:boolean',
            'bodyDeposit' => 'customization:boolean',
            'bodyBom' => 'customization:boolean',
            'bodyPrintStatement' => 'customization:boolean',
            'filterList' => 'customization:TransactionBodyCustomFieldFilterList',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        TransactionBodyCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        TransactionBodyCustomFieldFilterList => {
            'filter' => 'customization:TransactionBodyCustomFieldFilter',
        },
    
        TransactionColumnCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'availableToSso' => 'customization:boolean',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'colExpense' => 'customization:boolean',
            'colPurchase' => 'customization:boolean',
            'colSale' => 'customization:boolean',
            'colOpportunity' => 'customization:boolean',
            'colStore' => 'customization:boolean',
            'colStoreHidden' => 'customization:boolean',
            'colJournal' => 'customization:boolean',
            'colBuild' => 'customization:boolean',
            'colExpenseReport' => 'customization:boolean',
            'colTime' => 'customization:boolean',
            'colTransferOrder' => 'customization:boolean',
            'colTimeGroup' => 'customization:boolean',
            'colItemReceipt' => 'customization:boolean',
            'colItemReceiptOrder' => 'customization:boolean',
            'colItemFulfillment' => 'customization:boolean',
            'colItemFulfillmentOrder' => 'customization:boolean',
            'colPrintFlag' => 'customization:boolean',
            'colPickingTicket' => 'customization:boolean',
            'colPackingSlip' => 'customization:boolean',
            'colReturnForm' => 'customization:boolean',
            'colStoreWithGroups' => 'customization:boolean',
            'colGroupOnInvoices' => 'customization:boolean',
            'colKitItem' => 'customization:boolean',
            'filterList' => 'customization:TransactionColumnCustomFieldFilterList',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        TransactionColumnCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        TransactionColumnCustomFieldFilterList => {
            'filter' => 'customization:TransactionColumnCustomFieldFilter',
        },
    
        ItemOptionCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'colPurchase' => 'customization:boolean',
            'colSale' => 'customization:boolean',
            'colOpportunity' => 'customization:boolean',
            'colStore' => 'customization:boolean',
            'colStoreHidden' => 'customization:boolean',
            'colTransferOrder' => 'customization:boolean',
            'colAllItems' => 'customization:boolean',
            'itemsList' => 'customization:ItemsList',
            'colKitItem' => 'customization:boolean',
            'filterList' => 'customization:ItemOptionCustomFieldFilterList',
            'colOptionLabel' => 'customization:string',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        ItemsList => {
            'items' => 'core:RecordRef',
        },
    
        ItemOptionCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        ItemOptionCustomFieldFilterList => {
            'filter' => 'customization:ItemOptionCustomFieldFilter',
        },
    
        CustomRecordCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'description' => 'customization:string',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'globalSearch' => 'customization:boolean',
            'isParent' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'subtab' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'parentSubtab' => 'core:RecordRef',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourcefilterby' => 'core:RecordRef',
            'recType' => 'customization:string',
            'roleRestrict' => 'customization:boolean',
            'filterList' => 'customization:CustomRecordCustomFieldFilterList',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'subAccessList' => 'customization:CustomFieldSubAccessList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        CustomRecordCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterSelList' => 'customization:FldFilterSelList',
            'fldFilterNotNull' => 'customization:boolean',
        },
    
        CustomRecordCustomFieldFilterList => {
            'filter' => 'customization:CustomRecordCustomFieldFilter',
        },
    
        CustomFieldRoleAccess => {
            'role' => 'core:RecordRef',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
        },
    
        CustomFieldRoleAccessList => {
            'roleAccess' => 'customization:CustomFieldRoleAccess',
        },
    
        CustomFieldDepartmentAccess => {
            'dept' => 'core:RecordRef',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
        },
    
        CustomFieldDepartmentAccessList => {
            'deptAccess' => 'customization:CustomFieldDepartmentAccess',
        },
    
        CustomFieldSubAccess => {
            'sub' => 'core:RecordRef',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
        },
    
        CustomFieldSubAccessList => {
            'subAccess' => 'customization:CustomFieldSubAccess',
        },
    
        LanguageValue => {
            'locale' => 'commonTyp:Language',
            'value' => 'customization:string',
        },
    
        LanguageValueList => {
            'languageValue' => 'customization:LanguageValue',
        },
    
        CustomFieldTranslations => {
            'locale' => 'commonTyp:Language',
            'localeDescription' => 'customization:string',
            'label' => 'customization:string',
            'help' => 'customization:string',
        },
    
        CustomFieldTranslationsList => {
            'translations' => 'customization:CustomFieldTranslations',
        },
    
        ItemNumberCustomField => {
            'label' => 'customization:string',
            'owner' => 'core:RecordRef',
            'description' => 'customization:string',
            'fieldType' => 'customizationTypes:CustomizationFieldType',
            'selectRecordType' => 'core:RecordRef',
            'storeValue' => 'customization:boolean',
            'showInList' => 'customization:boolean',
            'insertBefore' => 'core:RecordRef',
            'displayType' => 'customizationTypes:CustomizationDisplayType',
            'displayWidth' => 'customization:long',
            'displayHeight' => 'customization:long',
            'help' => 'customization:string',
            'linkText' => 'customization:string',
            'isMandatory' => 'customization:boolean',
            'checkSpelling' => 'customization:boolean',
            'maxLength' => 'customization:long',
            'minValue' => 'customization:double',
            'maxValue' => 'customization:double',
            'defaultChecked' => 'customization:boolean',
            'defaultValue' => 'customization:string',
            'isFormula' => 'customization:boolean',
            'defaultSelection' => 'core:RecordRef',
            'dynamicDefault' => 'customizationTypes:CustomizationDynamicDefault',
            'sourceList' => 'core:RecordRef',
            'sourceFrom' => 'core:RecordRef',
            'sourceFilterBy' => 'core:RecordRef',
            'accessLevel' => 'customizationTypes:CustomizationAccessLevel',
            'searchLevel' => 'customizationTypes:CustomizationSearchLevel',
            'filterList' => 'customization:ItemNumberCustomFieldFilterList',
            'roleAccessList' => 'customization:CustomFieldRoleAccessList',
            'deptAccessList' => 'customization:CustomFieldDepartmentAccessList',
            'appliesToAllItems' => 'customization:boolean',
            'appliesToSerialized' => 'customization:boolean',
            'appliesToLots' => 'customization:boolean',
            'appliesToGiftCerts' => 'customization:boolean',
            'itemsList' => 'core:RecordRefList',
            'translationsList' => 'customization:CustomFieldTranslationsList',
        },
    
        ItemNumberCustomFieldFilter => {
            'fldFilter' => 'core:RecordRef',
            'fldFilterChecked' => 'customization:boolean',
            'fldFilterCompareType' => 'customizationTypes:CustomizationFilterCompareType',
            'fldFilterVal' => 'customization:string',
            'fldFilterNotNull' => 'customization:boolean',
            'fldfilterNull' => 'customization:boolean',
            'fldCompareField' => 'core:RecordRef',
        },
    
        ItemNumberCustomFieldFilterList => {
            'filter' => 'customization:ItemNumberCustomFieldFilter',
        },
    
        CustomListSearchRow => {
            'basic' => 'common:CustomListSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        AppDefinition => {
            'name' => 'customization:string',
            'description' => 'customization:string',
            'packagesList' => 'customization:AppDefinitionPackagesList',
        },
    
        AppDefinitionPackages => {
        },
    
        AppDefinitionPackagesList => {
            'packages' => 'customization:AppDefinitionPackages',
        },
    
        AppDefinitionSearchAdvanced => {
            'criteria' => 'customization:AppDefinitionSearch',
            'columns' => 'customization:AppDefinitionSearchRow',
        },
    
        AppDefinitionSearchRow => {
            'basic' => 'common:AppDefinitionSearchRowBasic',
            'appPackageJoin' => 'common:AppPackageSearchRowBasic',
            'creatorJoin' => 'common:EmployeeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        AppPackage => {
            'appDefinition' => 'core:RecordRef',
            'version' => 'customization:string',
            'packageFile' => 'core:RecordRef',
            'bundle' => 'core:RecordRef',
            'description' => 'customization:string',
        },
    
        AppPackageSearchAdvanced => {
            'criteria' => 'customization:AppPackageSearch',
            'columns' => 'customization:AppPackageSearchRow',
        },
    
        AppPackageSearchRow => {
            'basic' => 'common:AppPackageSearchRowBasic',
            'appDefinitionJoin' => 'common:AppDefinitionSearchRowBasic',
            'creatorJoin' => 'common:EmployeeSearchRowBasic',
            'packageFileJoin' => 'common:FileSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Employee => {
            'customForm' => 'core:RecordRef',
            'template' => 'core:RecordRef',
            'entityId' => 'employees:string',
            'salutation' => 'employees:string',
            'firstName' => 'employees:string',
            'middleName' => 'employees:string',
            'lastName' => 'employees:string',
            'altName' => 'employees:string',
            'phone' => 'employees:string',
            'fax' => 'employees:string',
            'email' => 'employees:string',
            'defaultAddress' => 'employees:string',
            'isInactive' => 'employees:boolean',
            'phoneticName' => 'employees:string',
            'lastModifiedDate' => 'employees:dateTime',
            'dateCreated' => 'employees:dateTime',
            'initials' => 'employees:string',
            'officePhone' => 'employees:string',
            'homePhone' => 'employees:string',
            'mobilePhone' => 'employees:string',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'billingClass' => 'core:RecordRef',
            'accountNumber' => 'employees:string',
            'comments' => 'employees:string',
            'globalSubscriptionStatus' => 'commonTypes:GlobalSubscriptionStatus',
            'image' => 'core:RecordRef',
            'payFrequency' => 'employeesTypes:EmployeePayFrequency',
            'lastPaidDate' => 'employees:dateTime',
            'currency' => 'core:RecordRef',
            'useTimeData' => 'employeesTypes:EmployeeUseTimeData',
            'usePerquest' => 'employees:boolean',
            'workplace' => 'core:RecordRef',
            'adpId' => 'employees:string',
            'directDeposit' => 'employees:boolean',
            'expenseLimit' => 'employees:double',
            'purchaseOrderLimit' => 'employees:double',
            'purchaseOrderApprovalLimit' => 'employees:double',
            'socialSecurityNumber' => 'employees:string',
            'supervisor' => 'core:RecordRef',
            'approver' => 'core:RecordRef',
            'approvalLimit' => 'employees:double',
            'timeApprover' => 'core:RecordRef',
            'employeeType' => 'core:RecordRef',
            'isSalesRep' => 'employees:boolean',
            'salesRole' => 'core:RecordRef',
            'isSupportRep' => 'employees:boolean',
            'isJobResource' => 'employees:boolean',
            'laborCost' => 'employees:double',
            'birthDate' => 'employees:dateTime',
            'hireDate' => 'employees:dateTime',
            'releaseDate' => 'employees:dateTime',
            'lastReviewDate' => 'employees:dateTime',
            'nextReviewDate' => 'employees:dateTime',
            'title' => 'employees:string',
            'employeeStatus' => 'core:RecordRef',
            'jobDescription' => 'employees:string',
            'maritalStatus' => 'core:RecordRef',
            'ethnicity' => 'core:RecordRef',
            'gender' => 'employeesTypes:Gender',
            'purchaseOrderApprover' => 'core:RecordRef',
            'workCalendar' => 'core:RecordRef',
            'giveAccess' => 'employees:boolean',
            'concurrentWebServicesUser' => 'employees:boolean',
            'sendEmail' => 'employees:boolean',
            'hasOfflineAccess' => 'employees:boolean',
            'password' => 'employees:string',
            'password2' => 'employees:string',
            'requirePwdChange' => 'employees:boolean',
            'inheritIPRules' => 'employees:boolean',
            'IPAddressRule' => 'employees:string',
            'commissionPaymentPreference' => 'employeesTypes:EmployeeCommissionPaymentPreference',
            'billPay' => 'employees:boolean',
            'eligibleForCommission' => 'employees:boolean',
            'subscriptionsList' => 'employees:EmployeeSubscriptionsList',
            'addressbookList' => 'employees:EmployeeAddressbookList',
            'rolesList' => 'employees:EmployeeRolesList',
            'hrEducationList' => 'employees:EmployeeHrEducationList',
            'accruedTimeList' => 'employees:EmployeeAccruedTimeList',
            'directDepositList' => 'employees:EmployeeDirectDepositList',
            'companyContributionList' => 'employees:EmployeeCompanyContributionList',
            'earningList' => 'employees:EmployeeEarningList',
            'emergencyContactList' => 'employees:EmployeeEmergencyContactList',
            'deductionList' => 'employees:EmployeeDeductionList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        EmployeeSubscriptions => {
            'subscribed' => 'employees:string',
            'subscription' => 'employees:string',
            'lastModifiedDate' => 'employees:dateTime',
        },
    
        EmployeeSubscriptionsList => {
            'subscriptions' => 'employees:EmployeeSubscriptions',
        },
    
        EmployeeAddressbook => {
            'defaultShipping' => 'employees:boolean',
            'defaultBilling' => 'employees:boolean',
            'label' => 'employees:string',
            'attention' => 'employees:string',
            'addressee' => 'employees:string',
            'phone' => 'employees:string',
            'addr1' => 'employees:string',
            'addr2' => 'employees:string',
            'addr3' => 'employees:string',
            'city' => 'employees:string',
            'state' => 'employees:string',
            'zip' => 'employees:string',
            'country' => 'commonTyp:Country',
            'addrText' => 'employees:string',
            'override' => 'employees:boolean',
            'internalId' => 'employees:string',
        },
    
        EmployeeAddressbookList => {
            'addressbook' => 'employees:EmployeeAddressbook',
        },
    
        EmployeeRoles => {
            'selectedRole' => 'core:RecordRef',
        },
    
        EmployeeRolesList => {
            'roles' => 'employees:EmployeeRoles',
        },
    
        EmployeeSearchAdvanced => {
            'criteria' => 'employees:EmployeeSearch',
            'columns' => 'employees:EmployeeSearchRow',
        },
    
        EmployeeSearchRow => {
            'basic' => 'common:EmployeeSearchRowBasic',
            'campaignResponseJoin' => 'common:CampaignSearchRowBasic',
            'departmentJoin' => 'common:DepartmentSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'locationJoin' => 'common:LocationSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'messagesFromJoin' => 'common:MessageSearchRowBasic',
            'messagesToJoin' => 'common:MessageSearchRowBasic',
            'subsidiaryJoin' => 'common:SubsidiarySearchRowBasic',
            'timeJoin' => 'common:TimeBillSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        EmployeeEmergencyContact => {
            'id' => 'employees:long',
            'contact' => 'employees:string',
            'relationship' => 'employees:string',
            'address' => 'employees:string',
            'phone' => 'employees:string',
        },
    
        EmployeeEmergencyContactList => {
            'employeeEmergencyContact' => 'employees:EmployeeEmergencyContact',
        },
    
        EmployeeHrEducation => {
            'education' => 'core:RecordRef',
            'degree' => 'employees:string',
            'degreeDate' => 'employees:dateTime',
        },
    
        EmployeeHrEducationList => {
            'employeeHrEducation' => 'employees:EmployeeHrEducation',
        },
    
        EmployeeAccruedTime => {
            'payrollItem' => 'core:RecordRef',
            'accruedHours' => 'employees:double',
            'accrualRate' => 'employees:double',
            'monetaryRate' => 'employees:double',
            'resetAccruedHoursAtYearEnd' => 'employees:boolean',
            'accrualMethod' => 'employeesTypes:EmployeeAccruedTimeAccrualMethod',
            'maximumAccruedHours' => 'employees:double',
            'inactive' => 'employees:boolean',
            'effectiveDate' => 'employees:dateTime',
            'expirationDate' => 'employees:dateTime',
        },
    
        EmployeeAccruedTimeList => {
            'employeeAccruedTime' => 'employees:EmployeeAccruedTime',
        },
    
        EmployeeDeduction => {
            'payrollItem' => 'core:RecordRef',
            'rate' => 'employees:string',
            'limit' => 'employees:double',
            'inactive' => 'employees:boolean',
            'effectiveDate' => 'employees:dateTime',
            'expirationDate' => 'employees:dateTime',
        },
    
        EmployeeDeductionList => {
            'employeeDeduction' => 'employees:EmployeeDeduction',
        },
    
        EmployeeCompanyContribution => {
            'payrollItem' => 'core:RecordRef',
            'rate' => 'employees:string',
            'limit' => 'employees:double',
            'inactive' => 'employees:boolean',
            'effectiveDate' => 'employees:dateTime',
            'expirationDate' => 'employees:dateTime',
        },
    
        EmployeeCompanyContributionList => {
            'employeeCompanyContribution' => 'employees:EmployeeCompanyContribution',
        },
    
        EmployeeEarning => {
            'payrollItem' => 'core:RecordRef',
            'payRate' => 'employees:string',
            'primaryEarning' => 'employees:boolean',
            'defaultHours' => 'employees:double',
            'inactive' => 'employees:boolean',
            'defaultEarning' => 'employees:boolean',
            'effectiveDate' => 'employees:dateTime',
            'expirationDate' => 'employees:dateTime',
        },
    
        EmployeeEarningList => {
            'employeeEarning' => 'employees:EmployeeEarning',
        },
    
        EmployeeDirectDeposit => {
            'id' => 'employees:long',
            'netAccount' => 'employees:boolean',
            'savingsAccount' => 'employees:boolean',
            'accountPrenoted' => 'employees:boolean',
            'accountStatus' => 'employeesTypes:EmployeeDirectDepositAccountStatus',
            'bankName' => 'employees:string',
            'bankId' => 'employees:string',
            'bankNumber' => 'employees:string',
            'bankRoutingNumber' => 'employees:string',
            'bankAccountNumber' => 'employees:string',
            'amount' => 'employees:double',
            'inactive' => 'employees:boolean',
        },
    
        EmployeeDirectDepositList => {
            'employeeDirectDeposit' => 'employees:EmployeeDirectDeposit',
        },
    
        PayrollItem => {
            'subsidiary' => 'core:RecordRef',
            'itemType' => 'core:RecordRef',
            'name' => 'employees:string',
            'vendor' => 'core:RecordRef',
            'expenseAccount' => 'core:RecordRef',
            'liabilityAccount' => 'core:RecordRef',
            'employeePaid' => 'employees:boolean',
            'inactive' => 'employees:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PayrollItemSearchRow => {
            'basic' => 'common:PayrollItemSearchRowBasic',
        },
    
        File => {
            'name' => 'filecabinet:string',
            'attachFrom' => 'filecabinetTypes:FileAttachFrom',
            'mediaTypeName' => 'filecabinet:string',
            'fileType' => 'filecabinetTypes:MediaType',
            'content' => 'filecabinet:base64Binary',
            'folder' => 'core:RecordRef',
            'fileSize' => 'filecabinet:double',
            'url' => 'filecabinet:string',
            'urlComponent' => 'filecabinet:string',
            'mediaFile' => 'core:RecordRef',
            'textFileEncoding' => 'filecabinetTypes:TextFileEncoding',
            'description' => 'filecabinet:string',
            'encoding' => 'filecabinetTypes:FileEncoding',
            'altTagCaption' => 'filecabinet:string',
            'isOnline' => 'filecabinet:boolean',
            'isInactive' => 'filecabinet:boolean',
            'class' => 'filecabinet:string',
            'bundleable' => 'filecabinet:boolean',
            'department' => 'filecabinet:string',
            'hideInBundle' => 'filecabinet:boolean',
            'isPrivate' => 'filecabinet:boolean',
            'owner' => 'core:RecordRef',
            'caption' => 'filecabinet:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'siteDescription' => 'filecabinet:string',
            'featuredDescription' => 'filecabinet:string',
            'lastModifiedDate' => 'filecabinet:dateTime',
            'createdDate' => 'filecabinet:dateTime',
            'siteCategoryList' => 'filecabinet:FileSiteCategoryList',
        },
    
        FileSiteCategory => {
            'isDefault' => 'filecabinet:boolean',
            'category' => 'core:RecordRef',
            'categoryDescription' => 'filecabinet:string',
            'website' => 'core:RecordRef',
        },
    
        FileSiteCategoryList => {
            'siteCategory' => 'filecabinet:FileSiteCategory',
        },
    
        FileSearchAdvanced => {
            'criteria' => 'filecabinet:FileSearch',
            'columns' => 'filecabinet:FileSearchRow',
        },
    
        FileSearchRow => {
            'basic' => 'common:FileSearchRowBasic',
            'shopperJoin' => 'common:CustomerSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        Folder => {
            'name' => 'filecabinet:string',
            'department' => 'core:RecordRef',
            'description' => 'filecabinet:string',
            'isInactive' => 'filecabinet:boolean',
            'isPrivate' => 'filecabinet:boolean',
            'bundleable' => 'filecabinet:boolean',
            'hideInBundle' => 'filecabinet:boolean',
            'isOnline' => 'filecabinet:boolean',
            'group' => 'core:RecordRef',
            'parent' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
        },
    
        FolderSearchAdvanced => {
            'criteria' => 'filecabinet:FolderSearch',
            'columns' => 'filecabinet:FolderSearchRow',
        },
    
        FolderSearchRow => {
            'basic' => 'common:FolderSearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        SiteCategory => {
            'website' => 'core:RecordRef',
            'itemId' => 'website:string',
            'parentCategory' => 'core:RecordRef',
            'categoryListLayout' => 'core:RecordRef',
            'itemListLayout' => 'core:RecordRef',
            'relatedItemsListLayout' => 'core:RecordRef',
            'correlatedItemsListLayout' => 'core:RecordRef',
            'isOnline' => 'website:boolean',
            'isInactive' => 'website:boolean',
            'description' => 'website:string',
            'storeDetailedDescription' => 'website:string',
            'storeDisplayThumbnail' => 'core:RecordRef',
            'storeDisplayImage' => 'core:RecordRef',
            'pageTitle' => 'website:string',
            'metaTagHtml' => 'website:string',
            'excludeFromSitemap' => 'website:boolean',
            'urlComponent' => 'website:string',
            'sitemapPriority' => 'commonTypes:SitemapPriority',
            'searchKeywords' => 'website:string',
            'presentationItemList' => 'website:SiteCategoryPresentationItemList',
            'translationsList' => 'website:SiteCategoryTranslationList',
        },
    
        SiteCategoryTranslation => {
            'locale' => 'commonTyp:Language',
            'language' => 'website:string',
            'displayName' => 'website:string',
            'description' => 'website:string',
            'storeDetailedDescription' => 'website:string',
            'pageTitle' => 'website:string',
        },
    
        SiteCategoryTranslationList => {
            'translation' => 'website:SiteCategoryTranslation',
        },
    
        SiteCategoryPresentationItemList => {
            'presentationItem' => 'common:PresentationItem',
        },
    
        SiteCategorySearchAdvanced => {
            'criteria' => 'website:SiteCategorySearch',
            'columns' => 'website:SiteCategorySearchRow',
        },
    
        SiteCategorySearchRow => {
            'basic' => 'common:SiteCategorySearchRowBasic',
            'shopperJoin' => 'common:CustomerSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        TimeBill => {
            'customForm' => 'core:RecordRef',
            'employee' => 'core:RecordRef',
            'tranDate' => 'employees:dateTime',
            'customer' => 'core:RecordRef',
            'caseTaskEvent' => 'core:RecordRef',
            'isBillable' => 'employees:boolean',
            'payrollItem' => 'core:RecordRef',
            'paidExternally' => 'employees:boolean',
            'workplace' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'hours' => 'core:Duration',
            'price' => 'core:RecordRef',
            'timeType' => 'employeesTypes:TimeBillTimeType',
            'rate' => 'employees:double',
            'overrideRate' => 'employees:boolean',
            'temporaryLocalJurisdiction' => 'core:RecordRef',
            'temporaryStateJurisdiction' => 'core:RecordRef',
            'memo' => 'employees:string',
            'subsidiary' => 'core:RecordRef',
            'supervisorApproval' => 'employees:boolean',
            'createdDate' => 'employees:dateTime',
            'lastModifiedDate' => 'employees:dateTime',
            'status' => 'employees:string',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        TimeBillSearchAdvanced => {
            'criteria' => 'employees:TimeBillSearch',
            'columns' => 'employees:TimeBillSearchRow',
        },
    
        TimeBillSearchRow => {
            'basic' => 'common:TimeBillSearchRowBasic',
            'callJoin' => 'common:PhoneCallSearchRowBasic',
            'caseJoin' => 'common:SupportCaseSearchRowBasic',
            'customerJoin' => 'common:CustomerSearchRowBasic',
            'employeeJoin' => 'common:EmployeeSearchRowBasic',
            'eventJoin' => 'common:CalendarEventSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'jobJoin' => 'common:JobSearchRowBasic',
            'projectTaskJoin' => 'common:ProjectTaskSearchRowBasic',
            'taskJoin' => 'common:TaskSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ExpenseReport => {
            'createdDate' => 'employees:dateTime',
            'lastModifiedDate' => 'employees:dateTime',
            'status' => 'employees:string',
            'customForm' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'entity' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'tranId' => 'employees:string',
            'postingPeriod' => 'core:RecordRef',
            'tranDate' => 'employees:dateTime',
            'dueDate' => 'employees:dateTime',
            'approvalStatus' => 'core:RecordRef',
            'total' => 'employees:double',
            'nextApprover' => 'core:RecordRef',
            'advance' => 'employees:double',
            'tax1Amt' => 'employees:double',
            'amount' => 'employees:double',
            'memo' => 'employees:string',
            'complete' => 'employees:boolean',
            'supervisorApproval' => 'employees:boolean',
            'accountingApproval' => 'employees:boolean',
            'useMultiCurrency' => 'employees:boolean',
            'tax2Amt' => 'employees:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'expenseList' => 'employees:ExpenseReportExpenseList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ExpenseReportExpense => {
            'line' => 'employees:long',
            'expenseDate' => 'employees:dateTime',
            'category' => 'core:RecordRef',
            'foreignAmount' => 'employees:double',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'employees:double',
            'amount' => 'employees:double',
            'taxCode' => 'core:RecordRef',
            'memo' => 'employees:string',
            'taxRate1' => 'employees:double',
            'tax1Amt' => 'employees:double',
            'department' => 'core:RecordRef',
            'grossAmt' => 'employees:double',
            'taxRate2' => 'employees:double',
            'class' => 'core:RecordRef',
            'customer' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'isBillable' => 'employees:boolean',
            'isNonReimbursable' => 'employees:boolean',
            'receipt' => 'employees:boolean',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ExpenseReportExpenseList => {
            'expense' => 'employees:ExpenseReportExpense',
        },
    
        PaycheckJournal => {
            'subsidiary' => 'core:RecordRef',
            'currency' => 'core:RecordRef',
            'exchangeRate' => 'employees:double',
            'createdDate' => 'employees:dateTime',
            'lastModifiedDate' => 'employees:dateTime',
            'customForm' => 'core:RecordRef',
            'employee' => 'core:RecordRef',
            'tranDate' => 'employees:dateTime',
            'postingPeriod' => 'core:RecordRef',
            'account' => 'core:RecordRef',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'companyContributionList' => 'employees:PaycheckJournalCompanyContributionList',
            'deductionList' => 'employees:PaycheckJournalDeductionList',
            'employeeTaxList' => 'employees:PaycheckJournalEmployeeTaxList',
            'companyTaxList' => 'employees:PaycheckJournalCompanyTaxList',
            'earningList' => 'employees:PaycheckJournalEarningList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaycheckJournalCompanyTax => {
            'id' => 'employees:long',
            'payrollItem' => 'core:RecordRef',
            'amount' => 'employees:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaycheckJournalCompanyTaxList => {
            'paycheckJournalCompanyTax' => 'employees:PaycheckJournalCompanyTax',
        },
    
        PaycheckJournalDeduction => {
            'id' => 'employees:long',
            'payrollItem' => 'core:RecordRef',
            'amount' => 'employees:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaycheckJournalDeductionList => {
            'paycheckJournalDeduction' => 'employees:PaycheckJournalDeduction',
        },
    
        PaycheckJournalCompanyContribution => {
            'id' => 'employees:long',
            'payrollItem' => 'core:RecordRef',
            'amount' => 'employees:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaycheckJournalCompanyContributionList => {
            'paycheckJournalCompanyContribution' => 'employees:PaycheckJournalCompanyContribution',
        },
    
        PaycheckJournalEarning => {
            'id' => 'employees:long',
            'payrollItem' => 'core:RecordRef',
            'hours' => 'employees:double',
            'amount' => 'employees:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaycheckJournalEarningList => {
            'paycheckJournalEarning' => 'employees:PaycheckJournalEarning',
        },
    
        PaycheckJournalEmployeeTax => {
            'id' => 'employees:long',
            'payrollItem' => 'core:RecordRef',
            'amount' => 'employees:double',
            'department' => 'core:RecordRef',
            'class' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        PaycheckJournalEmployeeTaxList => {
            'paycheckJournalEmployeeTax' => 'employees:PaycheckJournalEmployeeTax',
        },
    
        Campaign => {
            'customForm' => 'core:RecordRef',
            'campaignId' => 'marketing:string',
            'title' => 'marketing:string',
            'category' => 'core:RecordRef',
            'owner' => 'core:RecordRef',
            'startDate' => 'marketing:dateTime',
            'endDate' => 'marketing:dateTime',
            'url' => 'marketing:string',
            'baseCost' => 'marketing:double',
            'cost' => 'marketing:double',
            'expectedRevenue' => 'marketing:double',
            'message' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
            'local' => 'marketing:boolean',
            'totalRevenue' => 'marketing:double',
            'roi' => 'marketing:double',
            'profit' => 'marketing:double',
            'costPerCustomer' => 'marketing:double',
            'convCostPerCustomer' => 'marketing:double',
            'conversions' => 'marketing:long',
            'leadsGenerated' => 'marketing:long',
            'uniqueVisitors' => 'marketing:long',
            'vertical' => 'core:RecordRef',
            'audience' => 'core:RecordRef',
            'offer' => 'core:RecordRef',
            'promotionCode' => 'core:RecordRef',
            'itemList' => 'core:RecordRefList',
            'family' => 'core:RecordRef',
            'searchEngine' => 'core:RecordRef',
            'keyword' => 'marketing:string',
            'campaignEmailList' => 'marketing:CampaignEmailList',
            'campaignDirectMailList' => 'marketing:CampaignDirectMailList',
            'campaignEventList' => 'marketing:CampaignEventList',
            'eventResponseList' => 'marketing:CampaignEventResponseList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CampaignEmail => {
            'internalId' => 'marketing:string',
            'campaignGroup' => 'core:RecordRef',
            'template' => 'core:RecordRef',
            'description' => 'marketing:string',
            'subscription' => 'core:RecordRef',
            'channel' => 'core:RecordRef',
            'cost' => 'marketing:double',
            'status' => 'marketingTypes:CampaignCampaignEmailStatus',
            'dateScheduled' => 'marketing:dateTime',
            'promoCode' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CampaignEmailList => {
            'campaignEmail' => 'marketing:CampaignEmail',
        },
    
        CampaignDirectMail => {
            'internalId' => 'marketing:string',
            'campaignGroup' => 'core:RecordRef',
            'template' => 'core:RecordRef',
            'description' => 'marketing:string',
            'subscription' => 'core:RecordRef',
            'channel' => 'core:RecordRef',
            'cost' => 'marketing:double',
            'status' => 'marketingTypes:CampaignCampaignDirectMailStatus',
            'dateScheduled' => 'marketing:dateTime',
            'promoCode' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CampaignDirectMailList => {
            'campaignDirectMail' => 'marketing:CampaignDirectMail',
        },
    
        CampaignEvent => {
            'internalId' => 'marketing:string',
            'campaignGroup' => 'core:RecordRef',
            'description' => 'marketing:string',
            'subscription' => 'core:RecordRef',
            'channel' => 'core:RecordRef',
            'cost' => 'marketing:double',
            'status' => 'marketingTypes:CampaignCampaignEventStatus',
            'dateScheduled' => 'marketing:dateTime',
            'promoCode' => 'core:RecordRef',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        CampaignEventList => {
            'campaignEvent' => 'marketing:CampaignEvent',
        },
    
        CampaignEventResponse => {
            'name' => 'marketing:string',
            'type' => 'marketing:string',
            'dateSent' => 'marketing:dateTime',
            'sent' => 'marketing:double',
            'opened' => 'marketing:double',
            'openedRatio' => 'marketing:double',
            'clickedThru' => 'marketing:double',
            'clickedThruRatio' => 'marketing:double',
            'responded' => 'marketing:long',
            'respondedRatio' => 'marketing:double',
            'unsubscribed' => 'marketing:long',
            'unsubscribedRatio' => 'marketing:double',
            'bounced' => 'marketing:long',
            'bouncedRatio' => 'marketing:double',
        },
    
        CampaignEventResponseList => {
            'eventResponse' => 'marketing:CampaignEventResponse',
        },
    
        CampaignSearchAdvanced => {
            'criteria' => 'marketing:CampaignSearch',
            'columns' => 'marketing:CampaignSearchRow',
        },
    
        CampaignSearchRow => {
            'basic' => 'common:CampaignSearchRowBasic',
            'campaignRecipientJoin' => 'common:EntitySearchRowBasic',
            'fileJoin' => 'common:FileSearchRowBasic',
            'messagesJoin' => 'common:MessageSearchRowBasic',
            'originatingLeadJoin' => 'common:OriginatingLeadSearchRowBasic',
            'promotionCodeJoin' => 'common:PromotionCodeSearchRowBasic',
            'transactionJoin' => 'common:TransactionSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
            'userNotesJoin' => 'common:NoteSearchRowBasic',
        },
    
        CampaignCategory => {
            'name' => 'marketing:string',
            'parent' => 'core:RecordRef',
            'leadSource' => 'core:RecordRef',
            'description' => 'marketing:string',
            'isexternal' => 'marketing:boolean',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignAudience => {
            'name' => 'marketing:string',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignFamily => {
            'name' => 'marketing:string',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignSearchEngine => {
            'name' => 'marketing:string',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignChannel => {
            'name' => 'marketing:string',
            'eventType' => 'marketingTypes:CampaignChannelEventType',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignOffer => {
            'name' => 'marketing:string',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignResponse => {
            'entity' => 'core:RecordRef',
            'leadSource' => 'core:RecordRef',
            'campaignEvent' => 'core:RecordRef',
            'campaignResponseDate' => 'marketing:dateTime',
            'channel' => 'marketing:string',
            'response' => 'marketingTypes:CampaignResponseResponse',
            'note' => 'marketing:string',
            'responsesList' => 'marketing:CampaignResponseResponsesList',
        },
    
        CampaignResponseResponses => {
            'response' => 'marketing:string',
            'responseDate' => 'marketing:string',
            'author' => 'marketing:string',
            'note' => 'marketing:string',
        },
    
        CampaignResponseResponsesList => {
            'responses' => 'marketing:CampaignResponseResponses',
        },
    
        CampaignVertical => {
            'name' => 'marketing:string',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        CampaignSubscription => {
            'name' => 'marketing:string',
            'description' => 'marketing:string',
            'subscribedByDefault' => 'marketing:boolean',
            'unsubscribed' => 'marketing:boolean',
            'externalName' => 'marketing:string',
            'externalDescription' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
        },
    
        PromotionCode => {
            'implementation' => 'core:RecordRef',
            'customForm' => 'core:RecordRef',
            'useType' => 'marketingTypes:PromotionCodeUseType',
            'displayLineDiscounts' => 'marketing:boolean',
            'code' => 'marketing:string',
            'codePattern' => 'marketing:string',
            'numberToGenerate' => 'marketing:long',
            'description' => 'marketing:string',
            'isInactive' => 'marketing:boolean',
            'discount' => 'core:RecordRef',
            'rate' => 'marketing:string',
            'discountType' => 'marketing:boolean',
            'applyDiscountTo' => 'marketingTypes:PromotionCodeApplyDiscountTo',
            'freeShipMethod' => 'core:RecordRef',
            'minimumOrderAmount' => 'marketing:double',
            'startDate' => 'marketing:dateTime',
            'endDate' => 'marketing:dateTime',
            'isPublic' => 'marketing:boolean',
            'currencyList' => 'marketing:PromotionCodeCurrencyList',
            'excludeItems' => 'marketing:boolean',
            'name' => 'marketing:string',
            'itemsList' => 'marketing:PromotionCodeItemsList',
            'partnersList' => 'marketing:PromotionCodePartnersList',
        },
    
        PromotionCodePartners => {
            'partner' => 'core:RecordRef',
            'code' => 'marketing:string',
        },
    
        PromotionCodePartnersList => {
            'partners' => 'marketing:PromotionCodePartners',
        },
    
        PromotionCodeItems => {
            'item' => 'core:RecordRef',
        },
    
        PromotionCodeItemsList => {
            'items' => 'marketing:PromotionCodeItems',
        },
    
        PromotionCodeSearchAdvanced => {
            'criteria' => 'marketing:PromotionCodeSearch',
            'columns' => 'marketing:PromotionCodeSearchRow',
        },
    
        PromotionCodeSearchRow => {
            'basic' => 'common:PromotionCodeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        PromotionCodeCurrency => {
            'currency' => 'core:RecordRef',
            'minimumOrderAmount' => 'marketing:double',
        },
    
        PromotionCodeCurrencyList => {
            'currency' => 'marketing:PromotionCodeCurrency',
        },
    
        CouponCode => {
            'promotion' => 'core:RecordRef',
            'code' => 'marketing:string',
            'recipient' => 'core:RecordRef',
            'dateSent' => 'marketing:dateTime',
            'used' => 'marketing:boolean',
            'useCount' => 'marketing:long',
        },
    
        CouponCodeSearchAdvanced => {
            'criteria' => 'marketing:CouponCodeSearch',
            'columns' => 'marketing:CouponCodeSearchRow',
        },
    
        CouponCodeSearchRow => {
            'basic' => 'common:CouponCodeSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ItemDemandPlan => {
            'customForm' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'units' => 'core:RecordRef',
            'memo' => 'demandplanning:string',
            'year' => 'demandplanning:long',
            'month' => 'demandplanningTypes:DemandPlanMonth',
            'startDate' => 'demandplanning:dateTime',
            'endDate' => 'demandplanning:dateTime',
            'demandPlanCalendarType' => 'demandplanningTypes:DemandPlanCalendarType',
            'demandPlanMatrix' => 'demandplanning:DemandPlanMatrix',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        DemandPlan => {
            'startDate' => 'demandplanning:dateTime',
            'endDate' => 'demandplanning:dateTime',
            'calculatedQuantity' => 'demandplanning:double',
            'periodDemandPlanList' => 'demandplanning:PeriodDemandPlanList',
        },
    
        DemandPlanMatrix => {
            'demandPlan' => 'demandplanning:DemandPlan',
        },
    
        PeriodDemandPlanList => {
            'periodDemandPlan' => 'demandplanning:PeriodDemandPlan',
        },
    
        PeriodDemandPlan => {
            'quantity' => 'demandplanning:double',
            'dayOfTheWeek' => 'demandplanningTypes:DayOfTheWeek',
        },
    
        ItemDemandPlanSearchRow => {
            'basic' => 'common:ItemDemandPlanSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'lastAlternateSourceItemJoin' => 'common:ItemSearchRowBasic',
            'locationJoin' => 'common:LocationSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ItemSupplyPlan => {
            'customForm' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'location' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'units' => 'core:RecordRef',
            'memo' => 'demandplanning:string',
            'orderList' => 'demandplanning:ItemSupplyPlanOrderList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ItemSupplyPlanOrder => {
            'orderLineId' => 'demandplanning:long',
            'orderDate' => 'demandplanning:dateTime',
            'receiptDate' => 'demandplanning:dateTime',
            'quantity' => 'demandplanning:double',
            'orderCreated' => 'demandplanning:boolean',
            'orderType' => 'demandplanningTypes:ItemSupplyPlanOrderType',
        },
    
        ItemSupplyPlanOrderList => {
            'itemSupplyPlanOrder' => 'demandplanning:ItemSupplyPlanOrder',
        },
    
        ItemSupplyPlanSearchRow => {
            'basic' => 'common:ItemSupplyPlanSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'locationJoin' => 'common:LocationSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ManufacturingCostTemplate => {
            'customForm' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'name' => 'supplychain:string',
            'memo' => 'supplychain:string',
            'isInactive' => 'supplychain:boolean',
            'costDetailList' => 'supplychain:ManufacturingCostDetailList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ManufacturingCostDetail => {
            'costCategory' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'fixedRate' => 'supplychain:double',
            'runRate' => 'supplychain:double',
        },
    
        ManufacturingCostDetailList => {
            'manufacturingCostDetail' => 'supplychain:ManufacturingCostDetail',
        },
    
        ManufacturingCostTemplateSearchAdvanced => {
            'criteria' => 'supplychain:ManufacturingCostTemplateSearch',
            'columns' => 'supplychain:ManufacturingCostTemplateSearchRow',
        },
    
        ManufacturingCostTemplateSearchRow => {
            'basic' => 'common:ManufacturingCostTemplateSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ManufacturingRouting => {
            'customForm' => 'core:RecordRef',
            'subsidiary' => 'core:RecordRef',
            'item' => 'core:RecordRef',
            'locationList' => 'core:RecordRefList',
            'name' => 'supplychain:string',
            'memo' => 'supplychain:string',
            'isDefault' => 'supplychain:boolean',
            'isInactive' => 'supplychain:boolean',
            'routingStepList' => 'supplychain:ManufacturingRoutingRoutingStepList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ManufacturingRoutingRoutingStep => {
            'operationSequence' => 'supplychain:long',
            'operationName' => 'supplychain:string',
            'manufacturingWorkCenter' => 'core:RecordRef',
            'machineResources' => 'supplychain:long',
            'laborResources' => 'supplychain:long',
            'manufacturingCostTemplate' => 'core:RecordRef',
            'setupTime' => 'supplychain:double',
            'runRate' => 'supplychain:double',
        },
    
        ManufacturingRoutingRoutingStepList => {
            'manufacturingRoutingRoutingStep' => 'supplychain:ManufacturingRoutingRoutingStep',
        },
    
        ManufacturingRoutingSearchAdvanced => {
            'criteria' => 'supplychain:ManufacturingRoutingSearch',
            'columns' => 'supplychain:ManufacturingRoutingSearchRow',
        },
    
        ManufacturingRoutingSearchRow => {
            'basic' => 'common:ManufacturingRoutingSearchRowBasic',
            'itemJoin' => 'common:ItemSearchRowBasic',
            'locationJoin' => 'common:LocationSearchRowBasic',
            'manufacturingCostTemplateJoin' => 'common:ManufacturingCostTemplateSearchRowBasic',
            'manufacturingWorkCenterJoin' => 'common:EntityGroupSearchRowBasic',
            'userJoin' => 'common:EmployeeSearchRowBasic',
        },
    
        ManufacturingOperationTask => {
            'customForm' => 'core:RecordRef',
            'manufacturingWorkCenter' => 'core:RecordRef',
            'manufacturingCostTemplate' => 'core:RecordRef',
            'title' => 'supplychain:string',
            'operationSequence' => 'supplychain:long',
            'workOrder' => 'core:RecordRef',
            'order' => 'core:RecordRef',
            'status' => 'supplychainTypes:ManufacturingOperationTaskStatus',
            'message' => 'supplychain:string',
            'estimatedWork' => 'supplychain:double',
            'actualWork' => 'supplychain:double',
            'remainingWork' => 'supplychain:double',
            'inputQuantity' => 'supplychain:double',
            'completedQuantity' => 'supplychain:double',
            'setupTime' => 'supplychain:double',
            'runRate' => 'supplychain:double',
            'startDate' => 'supplychain:dateTime',
            'endDate' => 'supplychain:dateTime',
            'machineResources' => 'supplychain:long',
            'laborResources' => 'supplychain:long',
            'costDetailList' => 'supplychain:ManufacturingCostDetailList',
            'customFieldList' => 'core:CustomFieldList',
        },
    
        ManufacturingOperationTaskSearchAdvanced => {
            'criteria' => 'supplychain:ManufacturingOperationTaskSearch',
            'columns' => 'supplychain:ManufacturingOperationTaskSearchRow',
        },
    
        ManufacturingOperationTaskSearchRow => {
            'basic' => 'common:ManufacturingOperationTaskSearchRowBasic',
        },
    
    };
    
}

sub RecordNamespaces {

    return {
        'calendarEvent' => 'scheduling',
        'task' => 'scheduling',
        'phoneCall' => 'scheduling',
        'projectTask' => 'scheduling',
        'note' => 'communication',
        'message' => 'communication',
        'contact' => 'relationships',
        'customer' => 'relationships',
        'customerStatus' => 'relationships',
        'partner' => 'relationships',
        'vendor' => 'relationships',
        'entityGroup' => 'relationships',
        'job' => 'relationships',
        'jobType' => 'relationships',
        'jobStatus' => 'relationships',
        'supportCase' => 'support',
        'supportCaseStatus' => 'support',
        'supportCaseType' => 'support',
        'supportCaseOrigin' => 'support',
        'supportCaseIssue' => 'support',
        'supportCasePriority' => 'support',
        'solution' => 'support',
        'topic' => 'support',
        'issue' => 'support',
        'contactCategory' => 'accounting',
        'customerCategory' => 'accounting',
        'salesRole' => 'accounting',
        'priceLevel' => 'accounting',
        'winLossReason' => 'accounting',
        'term' => 'accounting',
        'noteType' => 'accounting',
        'paymentMethod' => 'accounting',
        'leadSource' => 'accounting',
        'inventoryItem' => 'accounting',
        'descriptionItem' => 'accounting',
        'discountItem' => 'accounting',
        'downloadItem' => 'accounting',
        'markupItem' => 'accounting',
        'paymentItem' => 'accounting',
        'subtotalItem' => 'accounting',
        'nonInventoryPurchaseItem' => 'accounting',
        'nonInventorySaleItem' => 'accounting',
        'nonInventoryResaleItem' => 'accounting',
        'otherChargeResaleItem' => 'accounting',
        'otherChargePurchaseItem' => 'accounting',
        'serviceResaleItem' => 'accounting',
        'servicePurchaseItem' => 'accounting',
        'serviceSaleItem' => 'accounting',
        'otherChargeSaleItem' => 'accounting',
        'currency' => 'accounting',
        'expenseCategory' => 'accounting',
        'account' => 'accounting',
        'department' => 'accounting',
        'classification' => 'accounting',
        'location' => 'accounting',
        'unitsType' => 'accounting',
        'contactRole' => 'accounting',
        'bin' => 'accounting',
        'salesTaxItem' => 'accounting',
        'taxGroup' => 'accounting',
        'taxType' => 'accounting',
        'serializedInventoryItem' => 'accounting',
        'lotNumberedInventoryItem' => 'accounting',
        'giftCertificateItem' => 'accounting',
        'subsidiary' => 'accounting',
        'giftCertificate' => 'accounting',
        'partnerCategory' => 'accounting',
        'vendorCategory' => 'accounting',
        'kitItem' => 'accounting',
        'assemblyItem' => 'accounting',
        'serializedAssemblyItem' => 'accounting',
        'lotNumberedAssemblyItem' => 'accounting',
        'state' => 'accounting',
        'accountingPeriod' => 'accounting',
        'budgetCategory' => 'accounting',
        'pricingGroup' => 'accounting',
        'inventoryNumber' => 'accounting',
        'revRecSchedule' => 'accounting',
        'revRecTemplate' => 'accounting',
        'costCategory' => 'accounting',
        'nexus' => 'accounting',
        'customerMessage' => 'accounting',
        'otherNameCategory' => 'accounting',
        'itemGroup' => 'accounting',
        'currencyRate' => 'accounting',
        'itemRevision' => 'accounting',
        'opportunity' => 'sales',
        'salesOrder' => 'sales',
        'itemFulfillment' => 'sales',
        'invoice' => 'sales',
        'cashSale' => 'sales',
        'estimate' => 'sales',
        'vendorBill' => 'purchases',
        'purchaseOrder' => 'purchases',
        'itemReceipt' => 'purchases',
        'vendorPayment' => 'purchases',
        'vendorCredit' => 'purchases',
        'vendorReturnAuthorization' => 'purchases',
        'cashRefund' => 'customers',
        'customerPayment' => 'customers',
        'returnAuthorization' => 'customers',
        'creditMemo' => 'customers',
        'customerRefund' => 'customers',
        'customerDeposit' => 'customers',
        'depositApplication' => 'customers',
        'budget' => 'financial',
        'check' => 'bank',
        'inventoryAdjustment' => 'inventory',
        'assemblyBuild' => 'inventory',
        'assemblyUnbuild' => 'inventory',
        'transferOrder' => 'inventory',
        'interCompanyTransferOrder' => 'inventory',
        'workOrder' => 'inventory',
        'inventoryTransfer' => 'inventory',
        'binTransfer' => 'inventory',
        'binWorksheet' => 'inventory',
        'workOrderIssue' => 'inventory',
        'workOrderCompletion' => 'inventory',
        'workOrderClose' => 'inventory',
        'journalEntry' => 'general',
        'interCompanyJournalEntry' => 'general',
        'customRecord' => 'customization',
        'customList' => 'customization',
        'customRecordType' => 'customization',
        'entityCustomField' => 'customization',
        'crmCustomField' => 'customization',
        'otherCustomField' => 'customization',
        'itemCustomField' => 'customization',
        'transactionBodyCustomField' => 'customization',
        'transactionColumnCustomField' => 'customization',
        'itemOptionCustomField' => 'customization',
        'customRecordCustomField' => 'customization',
        'itemNumberCustomField' => 'customization',
        'appDefinition' => 'customization',
        'appPackage' => 'customization',
        'employee' => 'employees',
        'payrollItem' => 'employees',
        'siteCategory' => 'website',
        'timeBill' => 'employees',
        'expenseReport' => 'employees',
        'paycheckJournal' => 'employees',
        'campaign' => 'marketing',
        'campaignCategory' => 'marketing',
        'campaignAudience' => 'marketing',
        'campaignFamily' => 'marketing',
        'campaignSearchEngine' => 'marketing',
        'campaignChannel' => 'marketing',
        'campaignOffer' => 'marketing',
        'campaignResponse' => 'marketing',
        'campaignVertical' => 'marketing',
        'campaignSubscription' => 'marketing',
        'promotionCode' => 'marketing',
        'couponCode' => 'marketing',
        'itemDemandPlan' => 'demandplanning',
        'itemSupplyPlan' => 'demandplanning',
        'manufacturingCostTemplate' => 'supplychain',
        'manufacturingRouting' => 'supplychain',
        'manufacturingOperationTask' => 'supplychain',
    };

}

sub SearchNamespaces {

    return {
        'CalendarEventSearch' => 'scheduling',
        'TaskSearch' => 'scheduling',
        'PhoneCallSearch' => 'scheduling',
        'ProjectTaskSearch' => 'scheduling',
        'NoteSearch' => 'communication',
        'MessageSearch' => 'communication',
        'ContactSearch' => 'relationships',
        'CustomerSearch' => 'relationships',
        'PartnerSearch' => 'relationships',
        'VendorSearch' => 'relationships',
        'EntityGroupSearch' => 'relationships',
        'JobSearch' => 'relationships',
        'CustomerStatusSearch' => 'relationships',
        'JobStatusSearch' => 'relationships',
        'JobTypeSearch' => 'relationships',
        'OriginatingLeadSearch' => 'relationships',
        'SupportCaseSearch' => 'support',
        'SolutionSearch' => 'support',
        'TopicSearch' => 'support',
        'IssueSearch' => 'support',
        'AccountSearch' => 'accounting',
        'DepartmentSearch' => 'accounting',
        'ClassificationSearch' => 'accounting',
        'LocationSearch' => 'accounting',
        'ItemSearch' => 'accounting',
        'BinSearch' => 'accounting',
        'SubsidiarySearch' => 'accounting',
        'GiftCertificateSearch' => 'accounting',
        'AccountingPeriodSearch' => 'accounting',
        'ContactCategorySearch' => 'accounting',
        'ContactRoleSearch' => 'accounting',
        'CustomerCategorySearch' => 'accounting',
        'ExpenseCategorySearch' => 'accounting',
        'NoteTypeSearch' => 'accounting',
        'PartnerCategorySearch' => 'accounting',
        'PaymentMethodSearch' => 'accounting',
        'PriceLevelSearch' => 'accounting',
        'SalesRoleSearch' => 'accounting',
        'TermSearch' => 'accounting',
        'VendorCategorySearch' => 'accounting',
        'WinLossReasonSearch' => 'accounting',
        'UnitsTypeSearch' => 'accounting',
        'PricingGroupSearch' => 'accounting',
        'InventoryNumberSearch' => 'accounting',
        'RevRecScheduleSearch' => 'accounting',
        'RevRecTemplateSearch' => 'accounting',
        'NexusSearch' => 'accounting',
        'OtherNameCategorySearch' => 'accounting',
        'CustomerMessageSearch' => 'accounting',
        'CurrencyRateSearch' => 'accounting',
        'ItemRevisionSearch' => 'accounting',
        'OpportunitySearch' => 'sales',
        'TransactionSearch' => 'sales',
        'BudgetSearch' => 'financial',
        'CustomRecordSearch' => 'customization',
        'CustomListSearch' => 'customization',
        'AppDefinitionSearch' => 'customization',
        'AppPackageSearch' => 'customization',
        'EmployeeSearch' => 'employees',
        'PayrollItemSearch' => 'employees',
        'FileSearch' => 'filecabinet',
        'FolderSearch' => 'filecabinet',
        'SiteCategorySearch' => 'website',
        'TimeBillSearch' => 'employees',
        'CampaignSearch' => 'marketing',
        'PromotionCodeSearch' => 'marketing',
        'CouponCodeSearch' => 'marketing',
        'ItemDemandPlanSearch' => 'demandplanning',
        'ItemSupplyPlanSearch' => 'demandplanning',
        'ManufacturingCostTemplateSearch' => 'supplychain',
        'ManufacturingRoutingSearch' => 'supplychain',
        'ManufacturingOperationTaskSearch' => 'supplychain',
    };

}

sub SystemNamespaces {

    return {
        'supplychainTypes' => 'urn:types.supplychain_2013_1.lists.webservices.netsuite.com',
        'customersTypes' => 'urn:types.customers_2013_1.transactions.webservices.netsuite.com',
        'website' => 'urn:website_2013_1.lists.webservices.netsuite.com',
        'sales' => 'urn:sales_2013_1.transactions.webservices.netsuite.com',
        'purchasesTypes' => 'urn:types.purchases_2013_1.transactions.webservices.netsuite.com',
        'purchases' => 'urn:purchases_2013_1.transactions.webservices.netsuite.com',
        'employeesTypes' => 'urn:types.employees_2013_1.lists.webservices.netsuite.com',
        'schedulingTypes' => 'urn:types.scheduling_2013_1.activities.webservices.netsuite.com',
        'supplychain' => 'urn:supplychain_2013_1.lists.webservices.netsuite.com',
        'demandplanningTypes' => 'urn:types.demandplanning_2013_1.transactions.webservices.netsuite.com',
        'messages' => 'urn:messages_2013_1.platform.webservices.netsuite.com',
        'scheduling' => 'urn:scheduling_2013_1.activities.webservices.netsuite.com',
        'demandplanning' => 'urn:demandplanning_2013_1.transactions.webservices.netsuite.com',
        'coreTypes' => 'urn:types.core_2013_1.platform.webservices.netsuite.com',
        'bank' => 'urn:bank_2013_1.transactions.webservices.netsuite.com',
        'marketing' => 'urn:marketing_2013_1.lists.webservices.netsuite.com',
        'filecabinetTypes' => 'urn:types.filecabinet_2013_1.documents.webservices.netsuite.com',
        'customers' => 'urn:customers_2013_1.transactions.webservices.netsuite.com',
        'accountingTypes' => 'urn:types.accounting_2013_1.lists.webservices.netsuite.com',
        'accounting' => 'urn:accounting_2013_1.lists.webservices.netsuite.com',
        'support' => 'urn:support_2013_1.lists.webservices.netsuite.com',
        'general' => 'urn:general_2013_1.transactions.webservices.netsuite.com',
        'core' => 'urn:core_2013_1.platform.webservices.netsuite.com',
        'employees' => 'urn:employees_2013_1.lists.webservices.netsuite.com',
        'relationships' => 'urn:relationships_2013_1.lists.webservices.netsuite.com',
        'communicationTypes' => 'urn:types.communication_2013_1.general.webservices.netsuite.com',
        'salesTypes' => 'urn:types.sales_2013_1.transactions.webservices.netsuite.com',
        'marketingTypes' => 'urn:types.marketing_2013_1.lists.webservices.netsuite.com',
        'customizationTypes' => 'urn:types.customization_2013_1.setup.webservices.netsuite.com',
        'inventoryTypes' => 'urn:types.inventory_2013_1.transactions.webservices.netsuite.com',
        'filecabinet' => 'urn:filecabinet_2013_1.documents.webservices.netsuite.com',
        'inventory' => 'urn:inventory_2013_1.transactions.webservices.netsuite.com',
        'websiteTypes' => 'urn:types.website_2013_1.lists.webservices.netsuite.com',
        'commonTypes' => 'urn:types.common_2013_1.platform.webservices.netsuite.com',
        'common' => 'urn:common_2013_1.platform.webservices.netsuite.com',
        'faults' => 'urn:faults_2013_1.platform.webservices.netsuite.com',
        'customization' => 'urn:customization_2013_1.setup.webservices.netsuite.com',
        'supportTypes' => 'urn:types.support_2013_1.lists.webservices.netsuite.com',
        'relationshipsTypes' => 'urn:types.relationships_2013_1.lists.webservices.netsuite.com',
        'financial' => 'urn:financial_2013_1.transactions.webservices.netsuite.com',
        'bankTypes' => 'urn:types.bank_2013_1.transactions.webservices.netsuite.com',
        'financialTypes' => 'urn:types.financial_2013_1.transactions.webservices.netsuite.com',
        'communication' => 'urn:communication_2013_1.general.webservices.netsuite.com',
        'faultsTypes' => 'urn:types.faults_2013_1.platform.webservices.netsuite.com',
    };

}

sub StateEnumerations {

    return {
        'AL' => 'Alabama', 
        'AK' => 'Alaska', 
        'AB' => 'Alberta', 
        'AR' => 'Arizona', 
        'AZ' => 'Arkansas', 
        'BC' => 'British Columbia', 
        'CA' => 'California', 
        'CO' => 'Colorado', 
        'CT' => 'Connecticut', 
        'DE' => 'Delaware', 
        'DC' => 'District of Columbia', 
        'FL' => 'Florida', 
        'GA' => 'Georgia', 
        'HI' => 'Hawaii', 
        'ID' => 'Idaho', 
        'IL' => 'Illinois', 
        'IN' => 'Indiana', 
        'IA' => 'Iowa', 
        'KS' => 'Kansas', 
        'KY' => 'Kentucky', 
        'LA' => 'Louisiana', 
        'ME' => 'Maine', 
        'MB' => 'Manitoba', 
        'MD' => 'Maryland', 
        'MA' => 'Massachusetts', 
        'MI' => 'Michigan', 
        'MN' => 'Minnesota', 
        'MS' => 'Mississippi', 
        'MO' => 'Missouri', 
        'MT' => 'Montana', 
        'NE' => 'Nebraska', 
        'NV' => 'Nevada', 
        'NB' => 'New Brunswick', 
        'NH' => 'New Hampshire', 
        'NJ' => 'New Jersey', 
        'NM' => 'New Mexico', 
        'NY' => 'New York', 
        'NL' => 'Newfoundland', 
        'NC' => 'North Carolina', 
        'ND' => 'North Dakota', 
        'NT' => 'North West Territories', 
        'NS' => 'Nova Scotia', 
        'NU' => 'Nunavut', 
        'OH' => 'Ohio', 
        'OK' => 'Oklahoma', 
        'ON' => 'Ontario', 
        'OR' => 'Oregon', 
        'PA' => 'Pennsylvania', 
        'PE' => 'Prince Edward Island', 
        'PR' => 'Puertorico', 
        'QC' => 'Quebec', 
        'RI' => 'Rhode Island', 
        'SK' => 'Saskatchewan', 
        'SC' => 'South Carolina', 
        'SD' => 'South Dakota', 
        'TN' => 'Tennessee', 
        'TX' => 'Texas', 
        'UT' => 'Utah', 
        'VT' => 'Vermont', 
        'VA' => 'Virginia', 
        'WA' => 'Washington', 
        'WV' => 'West Virginia', 
        'WI' => 'Wisconsin', 
        'WY' => 'Wyoming', 
        'YT' => 'Yukon'
    };


}

sub CountryEnumerations {

    return {
        '_afghanistan' => 'Afghanistan', 
        '_albania' => 'Albania', 
        '_algeria' => 'Algeria', 
        '_americanSamoa' => 'American Samoa', 
        '_andorra' => 'Andorra', 
        '_angola' => 'Angola', 
        '_anguilla' => 'Anguilla', 
        '_antarctica' => 'Antarctica', 
        '_antiguaAndBarbuda' => 'Antigua and Barbuda', 
        '_argentina' => 'Argentina', 
        '_armenia' => 'Armenia', 
        '_aruba' => 'Aruba', 
        '_australia' => 'Austrailia', 
        '_austria' => 'Austria', 
        '_azerbaijan' => 'Azerbaijan', 
        '_bahamas' => 'Bahamas', 
        '_bahrain' => 'Bahrain', 
        '_bangladesh' => 'Bangladesh', 
        '_barbados' => 'Barbados', 
        '_belarus' => 'Belarus', 
        '_belgium' => 'Belgium', 
        '_belize' => 'Belize', 
        '_benin' => 'Benin', 
        '_bermuda' => 'Bermuda', 
        '_bhutan' => 'Bhutan', 
        '_bolivia' => 'Bolivia', 
        '_bosniaAndHerzegovina' => 'Bosnia and Herzegobina', 
        '_botswana' => 'Botswana', 
        '_bouvetIsland' => 'Bouvet Island', 
        '_brazil' => 'Brazil', 
        '_britishIndianOceanTerritory' => 'British Indian Ocean Territory', 
        '_bruneiDarussalam' => 'Brunei Darussalam', 
        '_bulgaria' => 'Bulgaria', 
        '_burkinaFaso' => 'Burkina Faso', 
        '_burundi' => 'Burundi', 
        '_cambodia' => 'Cambodia', 
        '_cameroon' => 'Cameroon', 
        '_canada' => 'Canada', 
        '_capVerde' => 'Cap Verde', 
        '_caymanIslands' => 'Cayman Islands', 
        '_centralAfricanRepublic' => 'Central African Republic', 
        '_chad' => 'Chad', 
        '_chile' => 'Chile', 
        '_china' => 'China', 
        '_christmasIsland' => 'Christmas Island', 
        '_cocosKeelingIslands' => 'Cocos (Keeling) Islands', 
        '_colombia' => 'Colombia', 
        '_comoros' => 'Comoros', 
        '_congoDemocraticPeoplesRepublic' => 'Congo, Democratic People.s Republic', 
        '_congoRepublicOf' => 'Congo, Republic of', 
        '_cookIslands' => 'Cook Islands', 
        '_costaRica' => 'Costa Rica', 
        '_coteDIvoire' => 'Cote d.Ivoire', 
        '_croatiaHrvatska' => 'Croatia/Hrvatska', 
        '_cuba' => 'Cuba', 
        '_cyprus' => 'Cyprus', 
        '_czechRepublic' => 'Czech Republic', 
        '_denmark' => 'Denmark', 
        '_djibouti' => 'Djibouti', 
        '_dominica' => 'Domenica', 
        '_dominicanRepublic' => 'Dominican Republic', 
        '_eastTimor' => 'East Timor', 
        '_ecuador' => 'Ecuador', 
        '_egypt' => 'Egypt', 
        '_elSalvador' => 'El Salvador', 
        '_equatorialGuinea' => 'Equatorial Guinea', 
        '_eritrea' => 'Eritrea', 
        '_estonia' => 'Estonia', 
        '_ethiopia' => 'Ethiopia', 
        '_falklandIslandsMalvina' => 'Falkland Islands (Malvina)', 
        '_faroeIslands' => 'Faroe Islands', 
        '_fiji' => 'Fiji', 
        '_finland' => 'Finland', 
        '_france' => 'France', 
        '_frenchGuiana' => 'French Guiana', 
        '_frenchPolynesia' => 'French Polynesia', 
        '_frenchSouthernTerritories' => 'French Southern Territories', 
        '_gabon' => 'Gabon', 
        '_gambia' => 'Gambia', 
        '_georgia' => 'Georgia', 
        '_germany' => 'Germany', 
        '_ghana' => 'Ghana', 
        '_gibraltar' => 'Gibraltar', 
        '_greece' => 'Greece', 
        '_greenland' => 'Greenland', 
        '_grenada' => 'Grenada', 
        '_guadeloupe' => 'Guadeloupe', 
        '_guam' => 'Guam', 
        '_guatemala' => 'Guatemala', 
        '_guernsey' => 'Guernsey', 
        '_guinea' => 'Guinea', 
        '_guineaBissau' => 'Guinea-Bissau', 
        '_guyana' => 'Guyana', 
        '_haiti' => 'Haiti', 
        '_heardAndMcDonaldIslands' => 'Heard and McDonald Is.', 
        '_holySeeCityVaticanState' => 'Holy See (City Vatican State)', 
        '_honduras' => 'Honduras', 
        '_hongKong' => 'Hong Kong', 
        '_hungary' => 'Hungary', 
        '_iceland' => 'Iceland', 
        '_india' => 'India', 
        '_indonesia' => 'Indonesia', 
        '_iranIslamicRepublicOf' => 'Iran, Islamic Republic of', 
        '_iraq' => 'Iraq', 
        '_ireland' => 'Ireland', 
        '_isleOfMan' => 'Isle of Man', 
        '_israel' => 'Israel', 
        '_italy' => 'Italy', 
        '_jamaica' => 'Jamaica', 
        '_japan' => 'Japan', 
        '_jersey' => 'Jersey', 
        '_jordan' => 'Jordan', 
        '_kazakhstan' => 'Kazakhstan', 
        '_kenya' => 'Kenya', 
        '_kiribati' => 'Kiribati', 
        '_koreaDemocraticPeoplesRepublic' => 'Korea, Democratic People.s Republic', 
        '_koreaRepublicOf' => 'Korea, Republic of', 
        '_kuwait' => 'Kuwait', 
        '_kyrgyzstan' => 'Krgyzstan', 
        '_laoPeoplesDemocraticRepublic' => 'Lao, People.s Democratic Republic', 
        '_latvia' => 'Latvia', 
        '_lebanon' => 'Lebanon', 
        '_lesotho' => 'Lesotho', 
        '_liberia' => 'Liberia', 
        '_libyanArabJamahiriya' => 'Libyan Arab Jamahiriya', 
        '_liechtenstein' => 'Liechtenstein', 
        '_lithuania' => 'Lithuania', 
        '_luxembourg' => 'Luxembourg', 
        '_macau' => 'Macau', 
        '_macedonia' => 'Macedonia', 
        '_madagascar' => 'Madagascar', 
        '_malawi' => 'Malawi', 
        '_malaysia' => 'Malaysia', 
        '_maldives' => 'Maldives', 
        '_mali' => 'Mali', 
        '_malta' => 'Malta', 
        '_marshallIslands' => 'Marshall Islands', 
        '_martinique' => 'Martinique', 
        '_mauritania' => 'Mauritania', 
        '_mauritius' => 'Mauritius', 
        '_mayotte' => 'Mayotte', 
        '_mexico' => 'Mexico', 
        '_micronesiaFederalStateOf' => 'Micronesia, Federal State of', 
        '_moldovaRepublicOf' => 'Moldova, Republic of', 
        '_monaco' => 'Monaco', 
        '_mongolia' => 'Mongolia', 
        '_montserrat' => 'Montserrat', 
        '_morocco' => 'Morocco', 
        '_mozambique' => 'Mozambique', 
        '_myanmar' => 'Myanmar', 
        '_namibia' => 'Namibia', 
        '_nauru' => 'Nauru', 
        '_nepal' => 'Nepal', 
        '_netherlands' => 'Netherlands', 
        '_netherlandsAntilles' => 'Netherlands Antilles', 
        '_newCaledonia' => 'New Caledonia', 
        '_newZealand' => 'New Zealand', 
        '_nicaragua' => 'Nicaragua', 
        '_niger' => 'Niger', 
        '_nigeria' => 'Nigeria', 
        '_niue' => 'Niue', 
        '_norfolkIsland' => 'Norfolk Island', 
        '_northernMarianaIslands' => 'Northern Mariana Islands', 
        '_norway' => 'Norway', 
        '_oman' => 'Oman', 
        '_pakistan' => 'Pakistan', 
        '_palau' => 'Palau', 
        '_palestinianTerritories' => 'Palestinian Territories', 
        '_panama' => 'Panama', 
        '_papuaNewGuinea' => 'Papua New Guinea', 
        '_paraguay' => 'Paraguay', 
        '_peru' => 'Peru', 
        '_philippines' => 'Philppines', 
        '_pitcairnIsland' => 'Pitcairn Island', 
        '_poland' => 'Poland', 
        '_portugal' => 'Portugal', 
        '_puertoRico' => 'Puerto Rico', 
        '_qatar' => 'Qatar', 
        '_reunionIsland' => 'Reunion Island', 
        '_romania' => 'Romania', 
        '_russianFederation' => 'Russian Federation', 
        '_rwanda' => 'Rwanda', 
        '_saintKittsAndNevis' => 'Saint Kitts and Nevis', 
        '_saintLucia' => 'Saint Lucia', 
        '_saintVincentAndTheGrenadines' => 'Saint Vincent and the Grenadines', 
        '_sanMarino' => 'San Marino', 
        '_saoTomeAndPrincipe' => 'Sao Tome and Principe', 
        '_saudiArabia' => 'Saudi Arabia', 
        '_senegal' => 'Senegal', 
        '_serbiaAndMontenegro' => 'Serbia And Montenegro', 
        '_seychelles' => 'Seychelles', 
        '_sierraLeone' => 'Sierra Leone', 
        '_singapore' => 'Singapore', 
        '_slovakRepublic' => 'Slovak Republic', 
        '_slovenia' => 'Slovenia', 
        '_solomonIslands' => 'Solomon Islands', 
        '_somalia' => 'Somalia', 
        '_southAfrica' => 'South Africa', 
        '_southGeorgia' => 'South Georgia', 
        '_spain' => 'Spain', 
        '_sriLanka' => 'Sri Lanka', 
        '_stHelena' => 'St. Helena', 
        '_stPierreAndMiquelon' => 'St. Pierre and Miquelon', 
        '_sudan' => 'Sudan', 
        '_suriname' => 'Suriname', 
        '_svalbardAndJanMayenIslands' => 'Svalbard and Jan Mayen Islands', 
        '_swaziland' => 'Swaziland', 
        '_sweden' => 'Sweden', 
        '_switzerland' => 'Switzerland', 
        '_syrianArabRepublic' => 'Syrian Arab Republic', 
        '_taiwan' => 'Taiwan', 
        '_tajikistan' => 'Tajikistan', 
        '_tanzania' => 'Tanzania', 
        '_thailand' => 'Thailand', 
        '_togo' => 'Togo', 
        '_tokelau' => 'Tokelau', 
        '_tonga' => 'Tonga', 
        '_trinidadAndTobago' => 'Trinidad and Tobago', 
        '_tunisia' => 'Tunisia', 
        '_turkey' => 'Turkey', 
        '_turkmenistan' => 'Turkmenistan', 
        '_turksAndCiacosIslands' => 'Turks and Ciacos Islands', 
        '_tuvalu' => 'Tuvalu', 
        '_uganda' => 'Uganda', 
        '_ukraine' => 'Ukraine', 
        '_unitedArabEmirates' => 'United Arab Emirates', 
        '_unitedKingdom' => 'United Kingdom', 
        '_unitedKingdomGB' => 'United Kingdom (GB)', 
        '_unitedStates' => 'United States', 
        '_uruguay' => 'Uruguay', 
        '_uSMinorOutlyingIslands' => 'US Minor Outlying Islands', 
        '_uzbekistan' => 'Uzbekistan', 
        '_vanuatu' => 'Vanuatu', 
        '_venezuela' => 'Venezuela', 
        '_vietnam' => 'Vietnam', 
        '_virginIslandsBritish' => 'Virgin Islands, British', 
        '_virginIslandsUSA' => 'Virgin Islands, USA', 
        '_wallisAndFutunaIslands' => 'Wallis and Futuna Islands', 
        '_westernSahara' => 'Western Sahara', 
        '_westernSamoa' => 'Western Samoa', 
        '_yemen' => 'Yemen', 
        '_yugoslavia' => 'Yugoslavia', 
        '_zambia' => 'Zambia', 
        '_zimbabwe' => 'Zimbabwe'
    };

}
1;
